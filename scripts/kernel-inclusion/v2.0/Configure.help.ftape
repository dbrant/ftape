Yeah, Emacs, we are -*-Text-*- mode!

Floppy tape drive (QIC-80/40/3010/3020/TR-1/TR-2/TR-3/Ditto 2GB/Ditto Max) support
CONFIG_FTAPE
    If you  have  a tape   drive that is   connected  to  your  floppy
  controller, say  `Y' here. Some  tape drives (like the Seagate "Tape
  Store 3200" or the Iomega "Ditto  3200" or the Exabyte "Eagle TR-3")
  come with a "high speed" controller  of their own. These drives (and
  their companion controllers) are also supported.
    Two kinds of parallel port  floppy tape drives are also supported:
  the Colorado  Trakker and  all parallel  port tape  drives that  use
  Micro  Solutions',  Inc., "Backpack"  interface. The latter includes
  all  of  Iomega's Ditto product  line, and  some parallel  port tape
  drives made by Exabyte and Seagate (formerly Conner).
    TR-4 parallel port  tape drives aren't supported  by ftape, but by
  the paride driver which is also included in the Linux source tree in
  the "block devices" section.
    If you have  a special controller (such  as the  CMS FC-10, FC-20,
  Mountain Mach-II, or any controller that is based on the Intel 82078
  FDC   like the high speed  controllers  by Seagate   and Exabyte and
  Iomega's "Ditto Dash")   you  must configure  it   by  selecting the
  appropriate entries from the "Floppy  tape controllers" sub-menu and
  possibly modify the  default values for the  IRQ and DMA channel and
  the IO base  in ftape's configuration menu. If  you want to use your
  floppy  tape drive on  a PCI-bus based system,  please read the file
  `./drivers/char/ftape/README.PCI'.
    The ftape kernel driver is  also  available as a runtime  loadable
  module ( = code  which  can be  inserted in   and removed from   the
  running kernel  whenever you want).  If you want to  compile it as a
  module, say `M' here and read `./Documentation/modules.txt'.
    Note that the `Ftape-HOWTO' is out of date (sorry), but there is a
  web    page      with     more      recent    documentation       at
  `http://www.math1.rwth-aachen.de/~heine/ftape/'. This  page
  always contains the latest release of the ftape driver and useful
  information (backup    software,    ftape related     patches    and
  documentation,  FAQ).   The    Ftape-HOWTO  still contains    useful
  information, though.
    Note that  the  file system   interface  has changed quite  a  lot
  compared   to    previous   versions   of    ftape.   Please    read
  `./Documentation/ftape.txt'

The file system interface for ftape
CONFIG_ZFTAPE
    You need to say `Y' or  `M'. The menu  won't let you say `N' here.
  The ftape module itself no longer contains the routines necessary to
  interface with the kernel VFS layer (i.e.  to actually write data to
  and  read  data  from  the  tape   drive).  Instead the file  system
  interface (i.e.  the hardware  independent  part of the  driver) has
  been moved to  a  separate module.  If you  say  `M' zftape  will be
  compiled as as   a runtime loadable module   ( = code which  can  be
  inserted   in  and removed  from  the   running  kernel whenever you
  want). In this case you should read `./Documentation/modules.txt'.
    Despite of its name zftape does NOT use compression any
  longer.   The  file   `./Documentation/ftape.txt'  contains a  short
  description  of   the most important   changes  in  the  file system
  interface   compared to previous  versions  of ftape. The ftape home
  page        `http://www.math1.rwth-aachen.de/~heine/ftape/'
  contains further information.
    IMPORTANT  NOTE: zftape can    read archives created   by previous
  versions of ftape and provide file  mark support (i.e. fast skipping
  between tape archives) but pre-3.xx versions of ftape will lack file
  mark support when reading archives produced by zftape.

Read-only compatibility with ftape-3.x compressed archives
CONFIG_FT_UNCMPR
    Enable  de-compression  of ftape-3.x  compressed  archives. If you
  DON'T say `Y' to this option then ftape  will not be able to extract
  archives  which  were  produced   with the auto-compressing  devices
  `/dev/zft0' .. `/dev/zqft3' by the  previous  3.x release of  ftape.
  Please read  `Documentation/ftape.txt' if you wonder why compression
  support has been dropped (and  maybe also the related  documentation
  which is mentioned in `ftape.txt' and in the `Ftape-HOWTO').  If you
  are a first-time ftape user then you probably should say `N' because
  you  don't have compressed  archives produced  by ftape-3.x in  this
  case. If unsure, say `Y'.
    Enabling this option will  result in building an additional module
  called `zft-compressor.o' which has to be  loaded in order to enable
  this feature.  Please read `./Documentation/modules.txt' for general
  information about modules.  Note that zftape  will  use the kernel's
  module auto-loading feature if you have enabled  support for it (see
  `Kernel module loader support').

Default block size for zftape
CONFIG_ZFT_DFLT_BLK_SZ
    If unsure leave this at its default value,  i.e. 10240.  Note that
  you specify only the default block size here. The  block size can be
  changed at  run time  using the  MTSETBLK  tape operation  with  the
  MTIOCTOP ioctl (i.e.  with "mt -f  /dev/qft0 setblk #BLKSZ" from the
  shell command line).
    The probably most striking difference  between zftape and previous
  versions of ftape is the fact that all  data must be written or read
  in multiples of a fixed block size. The block size defaults to 10240
  which is what GNU tar uses. The values  for the block size should be
  either 1 or  multiples of 1024 with  no maximum value. If  the block
  size is too large, you will waste tape space.
    Reasonable  values are  `10240' (GNU  tar's  default  block size),
  `5120' (afio's default block size), `32768' (default block size some
  backup programs assume for SCSI  tape drives) or `1' (no restriction
  on block size).

Number of DMA buffers
CONFIG_FT_NR_BUFFERS
    Please  leave this  at `3"'  unless you REALLY   know what you are
  doing. It is not necessary to change this value. Values below 3 make
  the proper use of ftape impossible, values  greater than 3 are waste
  of memory. You can change the amount of  DMA memory used by ftape at
  runtime with "mt -f /dev/qft0 setdrvbuffer #NUMBUFFERS". Each buffer
  wastes  32kb of   memory. Please  note  that  this memory cannot  be
  swapped out.

Procfs entry for ftape
CONFIG_FT_PROC_FS
    Optional. Saying `Y' will result  in creation of a directory entry
  `/proc/ftape/' under  the proc file system hierarchy. `/proc/ftape/'
  again contains subdirectories `0/',  ...,  `3/' and `driver/'  which
  hold information for each     of  the ftape devices and      general
  information about the ftape driver.
    This files can be viewed with your favourite pager (i.e. use "more
  /proc/ftape/0/history" or  "less   /proc/ftape/0/history"  or simply
  "cat /proc/ftape/0/history").
    Saying   `Y' will  enlarge  the   size of   the   ftape driver  by
  approximately 2k.  The choice is up to   you. Besides the  2k memory
  penalty there shouldn't be any side effects  whether you enable this
  option or not.

Controlling the amount of debugging output of ftape
CONFIG_FT_NORMAL_DEBUG
    This  option  controls the amount  of  debugging  output the ftape
  driver is  ABLE to  produce; it  does  not increase or  diminish the
  debugging   level itself.  If   unsure, leave   this at its  default
  setting, i.e. choose "Normal".
    Ftape can print  lots of debugging  messages to the system console
  respective.  kernel  log  files. Reducing  the   amount of  possible
  debugging output reduces the  size of the  kernel module by some kb,
  so  it might   be a  good  idea  to use  "None"  for  emergency boot
  floppies.
    If  you   want to  save   memory  then the following   strategy is
  recommended: leave this option at its default setting "Normal" until
  you know  that the driver  works as expected, afterwards reconfigure
  the kernel, this time specifying  "Reduced" or "None" and  recompile
  and install the kernel   as  usual. Note that  choosing  "Excessive"
  debugging output does  not increase the  amount  of debugging output
  printed  to  the  console  but only  makes it   possible  to produce
  "Excessive" debugging  output  (which generally  will slow  down the
  driver so much that it isn't of any use any more).
    Please read  `./Documentation/ftape.txt' for  a short  description
  how to  control the amount of debugging  output  actually printed to
  the console.

Driver for internal FDCs (FC-10/FC-20/82078/Ditto EZ)
CONFIG_FT_INTERNAL
    If you have an internal floppy tape drive, i.e.  one that does NOT
  connect through  your computers parallel port,  then you want to say
  either `Y' or `M' here.
    The drier is also available as a  runtime loadable module ( = code
  which  can   be inserted  in and  removed    from the running kernel
  whenever you want). If  you want to compile  it as a module, say `M'
  here and read `./Documentation/modules.txt'.
    In case  you    are using  an Iomega  EZ    controller (the  4MBit
  controller  that comes with  the  Ditto Max  tape drive) then please
  note that this is a so called "plug and play"  card. You need a user
  level  utility as well that   configures this IO card. `isapnptools'
  seems to be the best choice at the  moment. You need to compile this
  driver  as a module in this  case (i.e. say `M')  and  load it after
  configuring the interface card with the ISA PnP tools package.  Read
  http://www.roestock.demon.co.uk/isapnptools/ (to browse the WWW, you
  need to have access to a machine on the  Internet that has a program
  like lynx or netscape) for more information.

Driver for Colorado Trakker parport drive
CONFIG_FT_TRAKKER
    If you have a Colorado Trakker 120,  250 or 350 parallel port tape
  drive then you want to say either `Y' or `M' here.
    The drier is also available as a  runtime loadable module ( = code
  which   can  be inserted  in and   removed  from the  running kernel
  whenever you want). If you  want to compile  it as a module, say `M'
  here and read `./Documentation/modules.txt'.

Driver for Micro Solutions Backpack parport drive
CONFIG_FT_BPCK
    It you have a floppy tape drive that connects to the parallel port
  of  your  computer  and   uses Micro  Solutions',   Inc., "Backpack"
  interface to  talk to your computer then  you want to say either `Y'
  or `M' here.
    All of  Iomega's "Ditto" floppy tape  drives that  connect via the
  parallel  port use  this interface.  Also some  parallel port drives
  made by Seagate, Exabyte and some others.
    The drier is also available as a runtime  loadable module ( = code
  which  can be   inserted in  and   removed from the  running  kernel
  whenever you want). If you  want to compile it as  a module, say `M'
  here and read `./Documentation/modules.txt'.
    TR-4  tape drives whether  internal or connecting via the parallel
  port AREN'T floppy tape drives.  Please refer to the "block devices"
  section if you are searching support for such a tape drive.

FDC driver for first ftape device, /dev/*ft0
CONFIG_FT_INT_0
    Here you choose which drivers to use for this ftape device. Choose
  `Auto'   to let ftape figure  out  automatically which driver to use
  (module auto-loading won't work in  this case). Choose `Internal' if
  you want to  use an internal  tape  drive. Choose `Parallel' if  you
  want to use some  kind of parallel  port  floppy tape drive.  Choose
  `None' to disable this ftape device.
    In case you don't  use modules and  have only a single floppy tape
  drive then `Auto' should  do, otherwise it  is recommended to choose
  corresponding to the kind of floppy tape drive  you want to use with
  this device.
  
The floppy drive controller for ftape, /dev/*ft0
CONFIG_FT_STD_FDC_0
    Only change this setting if you have a  special controller. If you
  didn't  plug any  add-on card  into your  computer  system but  just
  plugged the floppy tape cable into the already existing floppy drive
  controller  then you don't   want to  change  the default   setting,
  i.e. choose "Standard".
  Choose "MACH-2" if you have a Mountain Mach-2 controller.
  Choose "FC-10/FC-20" if you have a Colorado FC-10 or FC-20
  controller.
    Choose "Alt/82078" if you  have another controller that is located
  at   an IO base  address  different from  the  standard floppy drive
  controller's base  address  of `0x3f0', or  uses  an IRQ (interrupt)
  channel  different from `6',    or   a DMA channel  different   from
  `2'. This is  necessary  for any controller card   that is based  on
  Intel's  82078 FDC such  as Seagate's,  Exabyte's and Iomega's "high
  speed" controllers.
    If you choose  something  other than  "Standard" then please  make
  sure that the settings for the  IO base address and  the IRQ and DMA
  channel in the configuration menus below are correct. Use the manual
  of your tape drive to determine the correct settings!
    If you are already successfully using your tape drive with another
  operating system  then you definitely should   use the same settings
  for  the IO base,  the IRQ and DMA channel  that have proven to work
  with that other OS.
    Note that this menu lets you specify  only the default setting for
  the  hardware setup. The  hardware  configuration can be changed  at
  boot time (when ftape is compiled into the  kernel, i.e. if you have
  said `Y' to `CONFIG_FTAPE')  or module load  time (i.e. if you  have
  said `M' to `CONFIG_FTAPE').
    Please  read   also  the file   `./Documentation/ftape.txt'  which
  contains a short  description of the parameters that  can be set  at
  boot or load time.

Detailed Hardware Setup, /dev/*ft0
CONFIG_FT_INT_HW_0
    Detailed hardware setup for your  internal floppy disk controller.
  When saying `Y' you are able -- and have to -- configure the IO base
  address,  the   IRQ   channel  and the  DMA    channel  of  the  FDC
  explicitly. If you  leave this disabled (i.e.  say `N') then you get
  the following defaults.
    IO base address:
  <<< MACH-2     : 0x1E0 >>>
  <<< FC-10/FC-20: 0x180 >>>
  <<< Secondary  : 0x370 >>>
    IRQ channel:
  <<< MACH-2     : 6 >>>
  <<< FC-10/FC-20: 9 >>>
  <<< Secondary  : 6 >>>
    DMA channel:
  <<< MACH-2     : 2 >>>
  <<< FC-10/FC-20: 3 >>>
  <<< Secondary  : 2 >>>
    Secondary  refers to  a secondary FDC  controller  like  the "high
  speed" controllers delivered by Seagate or Exabyte or Iomega's Ditto
  Dash or the Ditto EZ controller.

IO base of the floppy disk controller used with Ftape, /dev/*ft0
CONFIG_FT_FDC_BASE_0
    When using  this ftape device  (i.e. `/dev/*qft0') with a parallel
  port floppy tape drive then  this option determines the base address
  of the parallel  port, otherwise  the  base address of  the internal
  floppy disk controller (FDC).
    Please make   sure that   the setting   for the  IO   base address
  specified here  is correct. USE   THE MANUAL OF  YOUR TAPE  DRIVE OR
  CONTROLLER CARD TO DETERMINE THE CORRECT SETTING. If you are already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IO base that has
  proven to work with that other OS.
    Note that this menu lets you  specify only the default setting for
  the IO base. The hardware configuration  can be changed at boot time
  (when ftape is compiled into the kernel,  i.e. if you specify `Y' to
  `CONFIG_FTAPE')  or module load  time (i.e. if  you have  say `M' to
  `CONFIG_FTAPE').
    Please  read   also  the  file  `./Documentation/ftape.txt'  which
  contains a short  description of the  parameters that can  be set at
  boot or load time.

IRQ channel for the floppy disk controller used with Ftape, /dev/*ft0
CONFIG_FT_FDC_IRQ_0
    When  using this ftape device (i.e.  `/dev/*qft0') with a parallel
  port floppy  tape drive then this option  determines the IRQ channel
  of the parallel  port,  otherwise the  IRQ channel of   the internal
  floppy disk controller (FDC).
    ftape maybe able   to  detect the  proper IRQ  for  your  card  at
  runtime. However,  IRQ auto-probing is  alway a little bit unprecise
  (e.g. in case  of a heavily loaded  system).  If you know  which IRQ
  line is occupied by your card then you should specify it here.
    Please  make sure that  the setting for  the IRQ channel specified
  here  is correct.  USE THE MANUAL  OF  YOUR TAPE DRIVE OR CONTROLLER
  CARD  TO DETERMINE   THE    CORRECT  SETTING. If   you  are  already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the IRQ channel that
  has proven to work with that other OS.

  If you indeed dare to use IRQ auto probing then specify "-1" here.

    Note that this menu lets you specify only  the default setting for
  the  IRQ channel. The hardware configuration  can be changed at boot
  time (when ftape is  compiled into the kernel,  i.e. if  you specify
  `Y' to `CONFIG_FTAPE') or module load time (i.e. if you have say `M'
  to `CONFIG_FTAPE').
    Please    read  also the    file `./Documentation/ftape.txt' which
  contains a  short description of the parameters  that  can be set at
  boot or load time.
  
DMA channel for the floppy disk controller used with Ftape, /dev/*ft0
CONFIG_FT_FDC_DMA_0
    Please make  sure that the setting for  the  DMA channel specified
  here  is  correct. USE THE MANUAL  OF  YOUR TAPE DRIVE OR CONTROLLER
  CARD TO   DETERMINE THE CORRECT    SETTING.   If you  are    already
  successfully using the tape drive with another operating system then
  you definitely should use the same settings for the DMA channel that
  has proven to work with that other OS.
    Note that this menu lets you  specify only the default setting for
  the DMA channel. The hardware  configuration can be changed at  boot
  time (when ftape  is compiled into  the kernel, i.e.  if you specify
  `Y' to `CONFIG_FTAPE') or module load time (i.e. if you have say `M'
  to `CONFIG_FTAPE').
    Please    read  also  the  file  `./Documentation/ftape.txt' which
  contains a short  description of the  parameters that can be  set at
  boot or load time.

Parallel Port Floppy Tape Controllers, /dev/*ft0
CONFIG_FT_TRAKKER_0
    Choose `Trakker:Backpack' if you have access to both kinds of tape
  drives and want to  use them with  the same ftape device (one  after
  another, not simultaneously). Choose `Trakker' if  you want to use a
  Colorado    Trakker  tape drive    with  this  ftape device.  Choose
  `Backpack' if you  have a  floppy  tape drive  with Micro Solutions'
  "Backpack" interface  (All of Iomega's   "Ditto" floppy tape  drives
  that  connect via the  parallel port  use  this interface. Also some
  parallel  port  drives made  by Seagate,  Exabyte and  some others).
  Choose `Generic' if you have written  your own interface and want to
  use it with this ftape device.

Detailed Hardware Setup, /dev/*ft0
CONFIG_FT_PAR_HW_0
    Detailed hardware setup for your  parallel port.  When saying  `Y'
  you are able -- and have to -- configure the IO base address and the
  IRQ channel of  the  parallel port  explicitly.   If you  leave this
  disabled (i.e. say `N') then you still  may choose the number of the
  parport to use. Ftape enumerates known port addresses (probably only
  true for Intel architectures) as follows:
    Number 0 -- IO base 0x378
    Number 1 -- IO base 0x278
    Number 2 -- IO base 0x3bc
  The  IRQ channel is auto-detected  by the parallel  port FDC drivers
  (i.e. bpck-fdc or trakker).

Parport Number to Use, /dev/*ft0
CONFIG_FT_FDC_PARPORT_0
    If you have more than one parallel port and encounter difficulties
  because ftape probes for hardware on parallel ports it should better
  leave alone, then specify the number of the parport ftape should use
  here. Ftape enumerates known port addresses  (probably only true for
  Intel architectures) as follows:
    Number 0 -- IO base 0x378
    Number 1 -- IO base 0x278
    Number 2 -- IO base 0x3bc
  The IRQ  channel is auto-detected by  the parallel  port FDC drivers
  (i.e. bpck-fdc or trakker).   If you leave this  at `-1' then  ftape
  will probe all available parallel ports for  an attached floppy tape
  drive. If unsure, leave it at `-1'. If  ftape has problems to detect
  the port address  or IRQ channel, then  try to enable the  "Detailed
  Hardware  Setup" option  and  specify  IO  address  and IRQ  channel
  explicitly.

FDC FIFO Threshold before requesting DMA service, /dev/*ft0
CONFIG_FT_FDC_THRESHOLD_0
    Set the  FIFO  threshold of the FDC.  If  this is  higher  the DMA
  controller may serve the FDC after a higher latency time. If this is
  lower, less DMA transfers occur leading to less bus contention.
    You  may try to  tune this if  ftape annoys you with "reduced data
  rate because of excessive   overrun errors" messages.  However, this
  doesn't seem to have too much an effect.
  If unsure, don't touch the initial value, i.e. leave it at "8".

FDC maximum data rate, /dev/*ft0
CONFIG_FT_FDC_MAX_RATE_0
    With some mother board/FDC combinations  ftape will not be able to
  run  your FDC/tape   drive  combination  at  the highest   available
  speed. If  this  is the  case you'll  encounter   "reduced data rate
  because of excessive  overrun  errors" messages and lots  of retries
  before ftape finally decides to reduce the data rate.
    In this case it  might be desirable  to tell ftape beforehand that
  it need not   try to run  the tape  drive at  the  highest available
  speed.  If   unsure, leave  this disabled,   i.e.  leave it  at 4000
  bits/sec.

FDC driver for first ftape device, /dev/*ft1
CONFIG_FT_INT_1
  Please refer to the corresponding help section for the first ftape
  device.

The floppy drive controller for ftape, /dev/*ft1
CONFIG_FT_STD_FDC_1
  Please refer to the corresponding help section for the first ftape
  device.

Detailed Hardware Setup, /dev/*ft1
CONFIG_FT_INT_HW_1
  Please refer to the corresponding help section for the first ftape
  device.

IO base of the floppy disk controller used with Ftape, /dev/*ft1
CONFIG_FT_FDC_BASE_1
  Please refer to the corresponding help section for the first ftape
  device.

IRQ channel for the floppy disk controller used with Ftape, /dev/*ft1
CONFIG_FT_FDC_IRQ_1
  Please refer to the corresponding help section for the first ftape
  device.

DMA channel for the floppy disk controller used with Ftape, /dev/*ft1
CONFIG_FT_FDC_DMA_1
  Please refer to the corresponding help section for the first ftape
  device.

Parallel Port Floppy Tape Controllers, /dev/*ft1
CONFIG_FT_TRAKKER_1
  Please refer to the corresponding help section for the first ftape
  device.

List of Parallel Port Drivers
CONFIG_FT_FDC_DRIVER_1
  Please refer to the corresponding help section for the first ftape
  device.

Parport Number to Use
CONFIG_FT_FDC_PARPORT_1
  Please refer to the corresponding help section for the first ftape
  device.

FDC FIFO Threshold before requesting DMA service, /dev/*ft1
CONFIG_FT_FDC_THRESHOLD_1
  Please refer to the corresponding help section for the first ftape
  device.

FDC maximum data rate, /dev/*ft1
CONFIG_FT_FDC_MAX_RATE_1
  Please refer to the corresponding help section for the first ftape
  device.

FDC driver for first ftape device, /dev/*ft2
CONFIG_FT_INT_2
  Please refer to the corresponding help section for the first ftape
  device.

The floppy drive controller for ftape, /dev/*ft2
CONFIG_FT_STD_FDC_2
  Please refer to the corresponding help section for the first ftape
  device.

Detailed Hardware Setup, /dev/*ft2
CONFIG_FT_INT_HW_2
  Please refer to the corresponding help section for the first ftape
  device.

IO base of the floppy disk controller used with Ftape, /dev/*ft2
CONFIG_FT_FDC_BASE_2
  Please refer to the corresponding help section for the first ftape
  device.

IRQ channel for the floppy disk controller used with Ftape, /dev/*ft2
CONFIG_FT_FDC_IRQ_2
  Please refer to the corresponding help section for the first ftape
  device.

DMA channel for the floppy disk controller used with Ftape, /dev/*ft2
CONFIG_FT_FDC_DMA_2
  Please refer to the corresponding help section for the first ftape
  device.

Parallel Port Floppy Tape Controllers, /dev/*ft2
CONFIG_FT_TRAKKER_2
  Please refer to the corresponding help section for the first ftape
  device.

List of Parallel Port Drivers
CONFIG_FT_FDC_DRIVER_2
  Please refer to the corresponding help section for the first ftape
  device.

Parport Number to Use
CONFIG_FT_FDC_PARPORT_2
  Please refer to the corresponding help section for the first ftape
  device.

FDC FIFO Threshold before requesting DMA service, /dev/*ft2
CONFIG_FT_FDC_THRESHOLD_2
  Please refer to the corresponding help section for the first ftape
  device.

FDC maximum data rate
CONFIG_FT_FDC_MAX_RATE_2
  Please refer to the corresponding help section for the first ftape
  device.

FDC driver for first ftape device, /dev/*ft3
CONFIG_FT_INT_3
  Please refer to the corresponding help section for the first ftape
  device.

The floppy drive controller for ftape, /dev/*ft3
CONFIG_FT_STD_FDC_3
  Please refer to the corresponding help section for the first ftape
  device.

Detailed Hardware Setup, /dev/*ft3
CONFIG_FT_INT_HW_3
  Please refer to the corresponding help section for the first ftape
  device.

IO base of the floppy disk controller used with Ftape, /dev/*ft3
CONFIG_FT_FDC_BASE_3
  Please refer to the corresponding help section for the first ftape
  device.

IRQ channel for the floppy disk controller used with Ftape, /dev/*ft3
CONFIG_FT_FDC_IRQ_3
  Please refer to the corresponding help section for the first ftape
  device.

DMA channel for the floppy disk controller used with Ftape, /dev/*ft3
CONFIG_FT_FDC_DMA_3
  Please refer to the corresponding help section for the first ftape
  device.

Parallel Port Floppy Tape Controllers, /dev/*ft3
CONFIG_FT_TRAKKER_3
  Please refer to the corresponding help section for the first ftape
  device.

List of Parallel Port Drivers
CONFIG_FT_FDC_DRIVER_3
  Please refer to the corresponding help section for the first ftape
  device.

Parport Number to Use
CONFIG_FT_FDC_PARPORT_3
  Please refer to the corresponding help section for the first ftape
  device.

FDC FIFO Threshold before requesting DMA service, /dev/*ft3
CONFIG_FT_FDC_THRESHOLD_3
  Please refer to the corresponding help section for the first ftape
  device.

FDC maximum data rate
CONFIG_FT_FDC_MAX_RATE_3
  Please refer to the corresponding help section for the first ftape
  device.

 LocalWords:  QIC TR GB CONFIG FTAPE Iomega Exabyte Trakker ftape paride Linux
 LocalWords:  CMS FC FDC IRQ PCI README txt HOWTO http www rwth aachen VFS
 LocalWords:  claus ZFTAPE zftape UNCMPR dev zft zqft DFLT BLK SZ MTSETBLK mt
 LocalWords:  MTIOCTOP qft setblk BLKSZ tar's afio's NR setdrvbuffer NUMBUFFERS
 LocalWords:  kb Procfs FS FDCs EZ MBit isapnptools ISA PnP roestock co uk BPCK
 LocalWords:  netscape parport INT STD HW unprecise bpck fdc trakker
