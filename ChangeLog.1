1999-09-11  heine  <heine@anaximander>

	* ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-buffer.c,
	ftape/lowlevel/fdc-io.c, ftape/lowlevel/ftape-init.h: Use
	set_current_state() for 2.3.x kernels instead of using
	current->state directly.

1999-09-06  heine  <heine@anaximander>

	* ftape/zftape/zftape-ctl.c, ftape/zftape/zftape-rw.c:
	Forgot to really switch to raw mode.

1999-08-31  heine  <heine@anaximander>

	* scripts/MAKEDEV.ftape:
	Create /dev/[n]rawft[0-3] as symlink to /dev/[n]qft[0-3].

	* include/linux/zftape.h:
	Device minor bits other than the non-rewind bit aren't needed any
	longer, but recognized for backwards compatibility.

	* include/linux/mtio.h: Definition of new MTIOCFTMODE ioctl.

	* ftape/zftape/zftape-buffers.c, ftape/zftape/zftape-ctl.c,
	ftape/zftape/zftape-ctl.h, ftape/zftape/zftape-init.c,
	ftape/zftape/zftape-init.h, ftape/zftape/zftape-inline.h,
	ftape/zftape/zftape-read.c, ftape/zftape/zftape-rw.c,
	ftape/zftape/zftape_syms.c, ftape/zftape/zftape-vtbl.c: Implement
	new MTIOCFTMODE ioctl to place driver in raw mode or qic-113
	mode. #ifdef all occurences of old obsolete device minor bits by
	"#ifdef ZFT_OBSOLETE" (include compression support).

	* ftape/compressor/Makefile: Add -DZFT_OBSOLETE to EXTRA_CFLAGS

	* RELEASE-NOTES: Document new MTIOCFTMODE ioctl.

1999-06-29  heine  <heine@anaximander>

	* include/linux/ftape.h, RELEASE-NOTES: Update for 4.03-pre-4

1999-06-02  heine  <heine@anaximander>

	* scripts/kernel-inclusion/v2.2/Configure.help.ftape,
	scripts/kernel-inclusion/v2.0/Configure.help.ftape,
	scripts/kernel-inclusion/Documentation/ftape.txt: Correct location
	of the ftape home page.

	* scripts/kernel-inclusion/gokernel.sh:
	Correct locations of ftape sources and kernel sources

	* ftape/zftape/zftape-rw.h:
	Allow values of 1 AND 0 for CONFIG_ZFT_DFLT_BLK_SZ

	* README: Correct the location of the ftape home page.

1999-05-29  heine  <heine@anaximander>

	* ftape/lowlevel/fdc-io.c, ftape/lowlevel/fdc-io.h:
	Account for changed wait-queue interface in v2.3 kernels.

	* ftape/internal/fdc-internal.c:
	fdc_int_dummy_detect() only needed if CONFIG_FT_INTERNAL is defined.

1999-04-25  heine  <heine@anaximander>

	* include/linux/.cvsignore: Ignore all kind of autoconf.h* files.

	* modules/remove, ftape/parport/trakker.c, ftape/parport/trakker.h:
	Applied Jochen's patches for his trakker driver and my broken
	modules/remove script.

1999-03-30  heine  <heine@anaximander>

	* ftape/parport/ftsg-fdc.c, ftape/zftape/zftape-inline.h: Fix a typo.

	* ftape/setup/ftape-setup.c: Have to include ftape-setup.h

	* ftape/parport/ftsg-fdc.c, ftape/parport/ftsg-fdc-regset.h:
	Fix a typo in the connect sequence for seagate tape drives.

	* ftape/parport/Makefile: Fix a typo

	* ftape/parport/fdc-parport.c:
	Have to include <linux/config.h> and <linux/ftape.h>

1999-03-29  heine  <heine@anaximander>

	* ftape/parport/Makefile: Fix a typo.

	* ftape/internal/fdc-internal.c:
	Don't use "init_mem_freed" but instead short-wire the detection hook
	of the fdc-ops structure to a dummy function after the setup has
	completed.

	* ftape/lowlevel/ftape-init.c:
	Call ftape_parport_init() instead of calling the registry functions of
	each parport module separately.

	* ftape/parport/fdc-parport.c:
	New ftape_parport_init() function called by ../lowlevel/ftape-init.c

	* ftape/setup/ftape-setup.c: Include ftape-setup.h

	* ftape/zftape/zftape-inline.h: Fix a typo

	* include/linux/ftape.h: Update some timestamps.

	* INSTALL, RELEASE-NOTES:
	Update to forthcoming pre-release ftape-4.03-pre-3

1999-03-28  heine  <heine@anaximander>

	* ftape/zftape/zftape_syms.c, ftape/setup/ftape-setup.c,
	ftape/setup/ftape-setup.h, ftape/parport/bpck-fdc.c,
	ftape/parport/bpck-fdc-makecrc.c, ftape/parport/fdc-parport.c,
	ftape/parport/fdc-parport.h, ftape/parport/ftape-makecrc.c,
	ftape/parport/Makefile, ftape/parport/trakker.c,
	ftape/internal/fdc-internal.c, ftape/Makefile, Makefile,
	Rules.make, MCONFIG: Added changes from FTAPE_4_03_SEAGATE_PPT
	branch.

	* ftape/parport/bpck-fdc.c: Remove an offending comment.

	* ftape/lowlevel/fdc-io.c:
	Allow verifying with Ditto EZ controller which doesn't support the
	"verify" command.

	* ftape/parport/ftsg-fdc.c, ftape/parport/ftsg-fdc.h:
	Try to implement read and write data routines.

	* ftape/parport/ftsg-fdc-regset.h: cosmetics

Sun Mar 28 21:52:17 1999  heine  <heine@anaximander>

	* ftape/zftape/zftape_syms.c, ftape/setup/ftape-setup.c,
 	ftape/setup/ftape-setup.h, ftape/parport/Attic/bpck-fdc-makecrc.c,
 	ftape/parport/Makefile, ftape/parport/bpck-fdc.c,
 	ftape/parport/fdc-parport.c, ftape/parport/fdc-parport.h,
 	ftape/parport/ftape-makecrc.c, ftape/parport/trakker.c,
 	ftape/internal/fdc-internal.c, ftape/Makefile, Makefile,
 	Rules.make, MCONFIG: Added changes from FTAPE_4_03_SEAGATE_PPT
 	branch.

	* ftape/parport/bpck-fdc.c: Remove an offending comment.

	* ftape/lowlevel/fdc-io.c:
	Allow verifying with Ditto EZ controller which doesn't support the
	"verify" command.

	* ftape/parport/Attic/ftsg-fdc.c, ftape/parport/Attic/ftsg-fdc.h:
	Try to implement read and write data routines.

	* ftape/parport/Attic/ftsg-fdc-regset.h: cosmetics

Sat Mar 27 19:38:35 1999  cvs  <cvs@anaximander>

	* ftape/zftape/zftape_syms.c: Only export decompressor symbols if
 	CONFIG_ZFT_COMPRESSOR_MODULE is defined.

	* ftape/parport/Attic/ftsg-fdc-regset.h,
 	ftape/parport/Attic/ftsg-fdc.c: Start implement the detection
 	code.

	* ftape/parport/fdc-parport.h:
	Define a timeout check for epp transfers.

	* ftape/parport/bpck-fdc.c: Remove the ".._test_something()" function.

	* Rules.make: Symtab objects have to depend on ftape's autoconf.h

Thu Mar 25 03:44:20 1999  cvs  <cvs@anaximander>

	* ftape/setup/ftape-setup.c, ftape/setup/ftape-setup.h,
 	ftape/parport/Attic/ftsg-fdc.c, ftape/parport/Makefile,
 	ftape/parport/bpck-fdc.c, ftape/parport/fdc-parport.c,
 	ftape/parport/fdc-parport.h, ftape/parport/trakker.c: Changed
 	makefile variables, and added ftape_setup_parse() function to
 	unifiy the various setup routines.

	* ftape/parport/fdc-parport.c: file fdc-parport.c was initially
 	added on branch FTAPE_4_03_SEAGATE_PPT.

	* ftape/internal/fdc-internal.c, ftape/Makefile, MCONFIG, Makefile:
	Changed makefile variables, and added ftape_setup_parse() function to
	unifiy the various setup routines.

	* include/linux/.cvsignore: Added autoconf.h.new

	* ftape/parport/fdc-parport.h: Forgot some brackets.

	* ftape/parport/Attic/ftsg-fdc.c, ftape/parport/Attic/ftsg-fdc.h,
 	ftape/parport/ftape-makecrc.c: Make it compile, at least.

	* ftape/parport/Makefile: Added seagate parport driver.

	* ftape/parport/Attic/ftsg-fdc-regset.h,
 	ftape/parport/Attic/ftsg-fdc.c, ftape/parport/Attic/ftsg-fdc.h:
 	Initial revision.

	* ftape/parport/Attic/ftsg-fdc-regset.h: file ftsg-fdc-regset.h
 	was initially added on branch FTAPE_4_03_SEAGATE_PPT.

	* ftape/parport/Attic/ftsg-fdc.c:
	file ftsg-fdc.c was initially added on branch FTAPE_4_03_SEAGATE_PPT.

	* ftape/parport/Attic/ftsg-fdc.h:
	file ftsg-fdc.h was initially added on branch FTAPE_4_03_SEAGATE_PPT.

	* ftape/parport/Attic/bpck-fdc-makecrc.c,
 	ftape/parport/ftape-makecrc.c: Renamed bpck-fdc-makecrc.c to
 	ftape-makecrc.c

	* ftape/parport/ftape-makecrc.c: file ftape-makecrc.c was
 	initially added on branch FTAPE_4_03_SEAGATE_PPT.

Wed Mar 17 11:19:35 1999  cvs  <cvs@anaximander>

	* ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/ftape-io.c,
 	ftape/lowlevel/ftape-write.c: Remove some hacks introduced to cope
 	with weird behaviour of Ditto EZ controller

	* ftape/lowlevel/fdc-isr.c:
	Update "determine_verify_progress()" to use new get_transfer_size()
	function.

	* TODO: Update

Fri Mar 12 11:37:49 1999  cvs  <cvs@anaximander>

	* scripts/kernel-inclusion/v2.2/Configure.help.ftape,
 	scripts/kernel-inclusion/v2.2/Config.in,
 	scripts/kernel-inclusion/v2.0/Config.in,
 	scripts/kernel-inclusion/v2.0/Configure.help.ftape,
 	scripts/kernel-inclusion/Documentation/00-INDEX,
 	scripts/kernel-inclusion/Documentation/ftape.txt,
 	scripts/kernel-inclusion/README,
 	scripts/kernel-inclusion/gokernel.sh,
 	scripts/kernel-inclusion/patch-00-INDEX.sh,
 	scripts/kernel-inclusion/patch-charConfig.sh,
 	scripts/kernel-inclusion/patch-charMakefile.sh,
 	scripts/kernel-inclusion/patch-confhelp.sh,
 	scripts/kernel-inclusion/patch-main.sh,
 	scripts/kernel-inclusion/patch-mtio.sh: Initial revision.

	* include/linux/.cvsignore: Added autoconf.h and modftversions.h

	* ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-vtbl.h:
	The volume table description should be padded with spaces.

	* MCONFIG, Makefile, Rules.make:
	Create ftape/include/linux/autoconf.h which uses include_next to
	include the real autoconf. This saves lots of command line arguments.

	* ftape/Attic/Config.in, ftape/Attic/Config.in-2.0,
 	ftape/Attic/Configure.help.ftape,
 	ftape/Attic/Configure.help.ftape-2.0, ftape/Attic/ftape.txt: Moved
 	to scripts/kernel-inclusion/

Fri Feb 26 13:07:01 1999  cvs  <cvs@anaximander>

	* include/linux/ftape-vendors.h, include/linux/mtio.h,
 	ftape/zftape/zftape-ctl.c, ftape/lowlevel/fdc-io.c,
 	ftape/lowlevel/fdc-io.h, ftape/lowlevel/ftape-format.c,
 	ftape/lowlevel/ftape-format.h: Change the format API slightly, so
 	that the format filler byte can be set explicitly. Also, gap3
 	doesn't belong into the buffer struct, but the fdc_info struct.

	* RELEASE-NOTES: Document new format-filler-byte parameter.

Thu Feb 25 18:18:11 1999  cvs  <cvs@anaximander>

	* include/linux/ftape.h:
	kmod was introduce in 2.1.90, not 2.0.90, which doesn´t exist so far.

	* ftape/parport/bpck-fdc.c: \begin{silly flame mode}

	I really appreciate Alan's efforts, but introducing that brain damaged
	enable/disable_irq() accounting counter was a _REALLY_ bad idea. Oh,
	good old times when enable_irq() _REALLY_ enabled the interrupt
	:-(. Sigh.

	\end{silly flame mode}

	Ok. Changed bpck-fdc.c so that it works with v2.2 kernels. Don't know
	whether it still works with v2.0. Sad. God damn shit.

	* include/linux/ftape.h: Bump version to 4.03 (though not yet released)

	* ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-rw.c:
	Reduce buffer->retry after reducing data rate or increasing threshold
	because of overrun errors.

	* ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-ctl.c:
	Remove a hack 'cause Iomega Ditto Max makes problems sometimes.

	* ftape/lowlevel/fdc-isr.c:
	Add a hack 'cause Iomega Ditto Max makes problems sometimes.

Mon Feb  8 02:18:24 1999  cvs  <cvs@anaximander>

	* ftape/lowlevel/ftape-ctl.c:
	In ftape_abort_operation(): always reset the FDC and reprogramm the
	FIFO. The Ditto EZ seems to need this sometimes (THIS IS ONLY A HACK).

	* ftape/zftape/zftape-ctl.c: Flush the write buffers if either

	zftape->header_reader && zftape->vtbl_read

	or

	zftape->header_reader && !zftape->qic_mode

	In raw mode, there is no dedicated volume table segment from the
	driver's point of view.

Mon Feb  8 02:14:17 1999  cvs  <cvs@anaximander>

	* ftape/lowlevel/ftape-ctl.c:
	In ftape_abort_operation(): always reset the FDC and reprogramm the
	FIFO. The Ditto EZ seems to need this sometimes (THIS IS ONLY A HACK).

	* ftape/zftape/zftape-ctl.c: Flush the write buffers if either

	zftape->header_reader && zftape->vtbl_read

	or

	zftape->header_reader && !zftape->qic_mode

	In raw mode, there is no dedicated volume table segment from the
	driver's point of view.

Sun Feb  7 01:01:42 1999  cvs  <cvs@anaximander>

	* ftape/lowlevel/ftape-read.c:
	Added one case of an improperly formatted Imation tape, reported by
	Nick.Holloway@alfie.demon.co.uk

	* MCONFIG: Reset LINUX_LOCATION to /usr/src/linux

	* ftape/lowlevel/ftape-buffer.c: Make some noise if out of memory.

	* ftape/lowlevel/ftape-io.c:
	The maximum FIFO threshold is 16, not 12 :-(

	* ftape/lowlevel/fdc-io.h, ftape/lowlevel/ftape-ctl.h,
 	ftape/zftape/zftape-ctl.h, ftape/lowlevel/ftape-real-tracing.h,
 	ftape/lowlevel/ftape-tracing.c, ftape/lowlevel/ftape-tracing.h:
 	Define the trace levels to be atomic_t. Necessary for SMP
 	machines.

	* ftape/zftape/zftape-buffers.c:
	Make some noise if there isn't enough memory left.

	* ftape/zftape/zftape-init.c:
	Surround some v2.0 paranoya checks with the proper #if KERNEL_VERSION
	etc.

	* MCONFIG:
	Try to fix compilation for alpha machines. Tried to copy over the
	necessary stuff from /usr/src/linux/arch/alpha/Makefile.

Sun Dec 20 19:54:38 1998  cvs  <cvs@anaximander>

	* ftape/zftape/zftape-ctl.c:
	Call zft_set_flags() before calling zft_reset_position() when changing
	from raw to qic mode. This fixes the "large use count" bug.

	* ftape/zftape/zftape-init.c: Replaced some "TRACE_ABORT" macros
 	by "TRACE(); TRACE_EXIT" combinations.

	* Makefile, Rules.make: Add a "tags:" target. Unluckily the xemacs
 	etags support isn't able to handle include files withing tag
 	files. Sad.

Fri Dec 18 22:42:40 1998  cvs  <cvs@anaxagoras.localnet>

	* include/linux/ftape-header-segment.h,
 	include/linux/ftape-vendors.h, include/linux/ftape.h,
 	include/linux/qic117.h, include/linux/zftape.h,
 	ftape/zftape/zftape-ctl.c, ftape/zftape/zftape-ctl.h,
 	ftape/zftape/zftape-eof.c, ftape/zftape/zftape-eof.h,
 	ftape/zftape/zftape-init.c, ftape/zftape/zftape-init.h,
 	ftape/zftape/zftape-inline.h, ftape/zftape/zftape-read.c,
 	ftape/zftape/zftape-read.h, ftape/zftape/zftape-rw.c,
 	ftape/zftape/zftape-rw.h, ftape/zftape/zftape-vtbl.c,
 	ftape/zftape/zftape-vtbl.h, ftape/zftape/zftape-write.c,
 	ftape/zftape/zftape-write.h, ftape/zftape/zftape_syms.c,
 	ftape/zftape/zftape_syms.h, ftape/zftape/Makefile,
 	ftape/zftape/zftape-buffers.c, ftape/zftape/zftape-buffers.h,
 	ftape/setup/Makefile, ftape/setup/ftape-setup.c,
 	ftape/parport/bpck-fdc-regset.h, ftape/parport/bpck-fdc.c,
 	ftape/parport/bpck-fdc.h, ftape/parport/fdc-parport.h,
 	ftape/parport/trakker.c, ftape/parport/trakker.h,
 	ftape/parport/Makefile, ftape/parport/bpck-fdc-makecrc.c,
 	ftape/lowlevel/ftape-ecc.c, ftape/lowlevel/ftape-ecc.h,
 	ftape/lowlevel/ftape-fake-tracing.h,
 	ftape/lowlevel/ftape-format.c, ftape/lowlevel/ftape-format.h,
 	ftape/lowlevel/ftape-init.c, ftape/lowlevel/ftape-init.h,
 	ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-io.h,
 	ftape/lowlevel/ftape-proc.c, ftape/lowlevel/ftape-proc.h,
 	ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-read.h,
 	ftape/lowlevel/ftape-real-tracing.h, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-rw.h, ftape/lowlevel/ftape-tracing.c,
 	ftape/lowlevel/ftape-tracing.h, ftape/lowlevel/ftape-write.c,
 	ftape/lowlevel/ftape-write.h, ftape/lowlevel/ftape_syms.c,
 	ftape/lowlevel/ftape_syms.h, ftape/lowlevel/Makefile,
 	ftape/lowlevel/fdc-io.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-isr.h,
 	ftape/lowlevel/ftape-bsm.c, ftape/lowlevel/ftape-bsm.h,
 	ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/ftape-buffer.h,
 	ftape/lowlevel/ftape-calibr.c, ftape/lowlevel/ftape-calibr.h,
 	ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/ftape-ctl.h,
 	ftape/internal/Makefile, ftape/internal/fc-10.c,
 	ftape/internal/fc-10.h, ftape/internal/fdc-internal.c,
 	ftape/internal/fdc-internal.h, ftape/compressor/Makefile,
 	ftape/compressor/lzrw3.c, ftape/compressor/lzrw3.h,
 	ftape/compressor/zftape-compress.c,
 	ftape/compressor/zftape-compress.h, ftape/Makefile, MCONFIG,
 	Makefile, Rules.make: Replaced the $Source: /usr/local/cvs/linux/ftape/ftape-driver/ChangeLog.1,v $ keyword substitution
 	by the $RCSfile: ChangeLog.1,v $ substitution.

Fri Nov 13 01:23:03 1998  Claus-Justus Heine  <heine@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-buffer.c,
 	ftape/lowlevel/fdc-io.c: Use the new schedule_timeout() function
 	for 2.1.127 kernels.

	* ftape/zftape/zftape-vtbl.h, ftape/zftape/zftape-read.c,
 	ftape/zftape/zftape-ctl.h: Introduce a new "vtbl_size" component
 	to the zftape_info_t structure. This copes with broken cartridges
 	which don't use the first error free segment as first data
 	segment, but the first segment following the header segment.s

Wed Nov  4 23:42:13 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.03-pre-2

	* include/linux/ftape.h, RELEASE-NOTES: Bump version to 4.03-pre2

	* ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-read.c:
	Geeh! Fix the "mysteriously erasing the header segments" bug. Probably
	only affects Iomega parport floppy tape drives with an on-board
	82077AA FDC.

	* ftape/lowlevel/ftape-ctl.c: Cosmetics ...

	* ftape/lowlevel/fdc-isr.c:
	Remove a warning about an unexpected DMA residue when reading deleted
	data address marks.

	* INSTALL: Place a warning NOT to use modutils-2.0.0 (or was it called
	"modules-2.0.0"?)

	* modules/insert: Ummh. Trying to be funny. What a mess.

	* ftape/parport/bpck-fdc.c:
	Change a "/* ... */" to a "#if 0 ... #endif" thingy

	* ftape/parport/fdc-parport.h, ftape/internal/fdc-internal.c:
	Check whether the "ft_fdc_rate_limit" is one of 250,500,1000,2000,3000
	or 4000.

Sat Oct 31 23:07:01 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape-vtbl.h,
 	ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-read.c,
 	ftape/zftape/zftape-inline.h, ftape/zftape/zftape-ctl.c: Change
 	the IOCTL interface for MTFSR/MTBSR/MTSEEK/MTTELL: now the entire
 	tape is one large data stream, each file mark counts as one
 	block. Block zero refers to logical BOT.

Fri Oct 30 11:02:30 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* INSTALL:
	Change /sbin/swapout to /usr/local/bin/swapout as this is ftape-tool's
	default installation path. Tell the reader that it might be different.

	* ftape/lowlevel/ftape-read.c:
	ftape_read_segment() now returns -ENODATA when detecting deleted
	sector address marks. ftape_read_header_segments() understands this
	and checks itself for ftape->TAIL->deleted

	* ftape/zftape/zftape-ctl.c:
	Fix rdftseg() when attempting to read one of the header
	segments. Return our cached header segment copy in this case. Fake
	-EIO when attempting to read a segment with deleted data.

	* ftape/zftape/zftape-write.c:
	Check for segment size > 0 before handling bad sectors in
	zftape_write_segment()

Fri Sep 25 13:14:42 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.03-pre-1

	* RELEASE-NOTES: Update for 4.03-pre-1

Fri Sep 25 13:06:33 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h: Set the version to 4.03-pre-1

	* ftape/lowlevel/ftape-read.c: Change ftape_read_header_segment()
 	to retry also when only the data in the first header segment is
 	damaged (e.g. after an ECC failure)

	* INSTALL: Add a note to run "make distclean" before recompiling
 	the driver for different kernels.

Wed Sep 16 22:03:20 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-rw.c: The minimal data rate for Ditto Max
 	drives is 2000, not 3000

Sun Sep 13 22:04:19 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/parport/bpck-fdc.c: Don't report errors when testing the
 	parport protocol: the tests are _supposed_ to fail when trying
 	protocols not supported by the parport.

	* ftape/parport/fdc-parport.h: Check for a return value < 0 of
 	parport_claim_or_block(), not != 0 because
 	parport_claim_or_block() returns "1" in case it has slept which is
 	NOT an error.

	* MCONFIG: Don't configure /dev/qft0 to use ftape-internal by
 	default, but use CONFIG_FT_AUTO_0 instead so that the parallel
 	port floppy tape drive still can be use without editing MCONFIG.

Sun Aug 30 18:31:59 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-read.c: Need to set zftape->io_state to
 	"idle" after reading in the EOF mark. Otherwise
 	check_read_access() won't do the right things.

Sun Aug 30 18:31:14 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.02

	* ftape/zftape/zftape-read.c:
	Need to set zftape->io_state to "idle" after reading in the EOF
	mark. Otherwise check_read_access() won't do the right things.

Sat Aug 29 20:33:09 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/Config.in-2.0, ftape/Configure.help.ftape-2.0:
	Initial revision.

	* BUGS: The "ftape eats signals" bug was not really existant.

	* ftape/lowlevel/ftape-tracing.c:
	Forgot to reset the default tracing to ft_t_info :-(

Sat Aug 29 13:55:10 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/fdc-io.c: Spelling fixes.

	* include/linux/ftape.h, ftape/lowlevel/ftape-init.c, ftape/ftape.txt:
	Add special keywords "auto" and "none" to the fdc drivers list.

	* ftape/lowlevel/ftape-proc.c:
	Add check for unformatted cartridges and unknow QIC format.

Fri Aug 28 22:41:28 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* RELEASE-NOTES, include/linux/ftape.h: Set release data to
 	08/29/98

	* ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h: Fix comments
 	that claim that the Ditto EZ is badly broken which is not true.

	* ftape/lowlevel/ftape-read.c: Choosing of trace levels was
 	reversed when checking the ECC code corrected a sector not marked
 	bad by the FDC.

	* ftape/lowlevel/fdc-isr.c: Be less verbose.

Wed Aug 26 23:31:43 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h, RELEASE-NOTES, README, INSTALL:
	Bump version to 4.02

Wed Aug 26 22:45:25 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-init.c:
	Add "flush" component to the file_operations jump table for >= 2.1.118

	* ftape/lowlevel/ftape-rw.c:
	Don't even try to reduce the data rate below 1000Kbps for QIC-3020 and
	2000Kbps for Ditto Max drives.

	* ftape/lowlevel/ftape-io.c:
	Clear the error state of the tape drive if rate change failed.

	* ftape/lowlevel/ftape-format.c: Cosmetic changes.

Mon Aug 24 00:13:56 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.02-pre-3

	* include/linux/ftape.h, RELEASE-NOTES, ftape/lowlevel/fdc-isr.c,
 	ftape/internal/fdc-internal.c: Change code for lately detected
 	Ditto EZ feature: it is able to detect data CRC errors without
 	transferring all data via the FIFO. Does this mean that it has
 	some internal buffer (1Kb) and would it be possibly to access this
 	buffer if it existed?

Fri Aug 21 18:07:30 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.02-pre-2

	* include/linux/ftape.h, RELEASE-NOTES: Bump version to 4.02-pre-2

Fri Aug 21 15:52:09 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-rw.c, ftape/lowlevel/ftape-format.c,
 	ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h: Don't position
 	AT the segment with the overrun error, but BEFORE the
 	segment. This yields more time for setting up FDC and DMA.

	* ftape/lowlevel/fdc-io.c: Try to make setup_read_write() faster.

	* ftape/lowlevel/ftape-read.c: Notify us if the ECC detected an
 	error not caught by the FDC.

	* ftape/lowlevel/ftape-write.c: Make it less verbose when a write
 	error occurs.

	* ftape/internal/fdc-internal.c: First call clear_dam_ff() and
 	disable_dma(), then get_dma_residue()

Thu Aug 20 11:27:54 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.02-pre-1

	* include/linux/ftape.h: Bump version to 4.02-pre-1

	* RELEASE-NOTES: Update for 4.02-pre-1

Thu Aug 20 11:26:05 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.c:
	Fix mtioctell not to Oops when the header segments haven't been read
	yet.

	* ftape/zftape/zftape-rw.c: Fix a typo.

	* ftape/parport/trakker.c, ftape/parport/bpck-fdc.c,
 	ftape/lowlevel/fdc-isr.c: Try to detect weird FDC results of the
 	Ditto EZ earlier.

	* ftape/lowlevel/fdc-io.h: Define ft_error_cause_t here rather
 	than in fdc-isr.c so that the error cause can be passed to
 	fdc_pos->terminate_dma() as a parameter.

	* ftape/lowlevel/ftape-rw.c: Don't claim to have halfed the data
 	rate if that failed.

	* ftape/lowlevel/ftape-read.c: If reading of the header segments
 	fails then ftape_read_header_segment() should call
 	fdc_put_deblock_buffer() to unlock the low-level FDC modules.

	* ftape/internal/fdc-internal.c: Fix a bug where fdc_int_free()
 	caused kerenl Oopses when fdc->data was NULL. Change
 	fdc_int_terminate_dma() to return the dma residue so that
 	fdc_isr() can perform sanity checks to cope with weird behaviour
 	of the Ditto EZ controller.

Tue Aug 18 22:10:40 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.01

	* include/linux/ftape.h, RELEASE-NOTES, README, INSTALL: Bump
 	version to 4.01

	* ftape/parport/trakker.h, ftape/parport/trakker.c,
 	ftape/parport/bpck-fdc.h, ftape/parport/bpck-fdc.c: Forgot to
 	change the declaration of bpck->buffer and trakker->buffer from
 	"void *" to "__u8 *" and got what I deserved as the compiler
 	correctly didn't complain about a comparison between a "void *"
 	and an "__u8 **" pointer.

	Sad. 4.00 was a nice number. No we have 4.01

Tue Aug 18 08:17:08 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.00

	* include/linux/zftape.h, include/linux/qic117.h,
 	include/linux/ftape.h, include/linux/ftape-vendors.h,
 	ftape/zftape/zftape_syms.h, ftape/zftape/zftape_syms.c,
 	ftape/zftape/zftape-write.c, ftape/zftape/zftape-vtbl.h,
 	ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-rw.h,
 	ftape/zftape/zftape-rw.c, ftape/zftape/zftape-read.c,
 	ftape/zftape/zftape-inline.h, ftape/zftape/zftape-init.h,
 	ftape/zftape/zftape-init.c, ftape/zftape/zftape-eof.h,
 	ftape/zftape/zftape-eof.c, ftape/zftape/zftape-ctl.h,
 	ftape/zftape/zftape-ctl.c, ftape/zftape/zftape-buffers.h,
 	ftape/zftape/zftape-buffers.c, ftape/zftape/Makefile,
 	ftape/setup/ftape-setup.c, ftape/setup/Makefile,
 	ftape/parport/trakker.c, ftape/parport/fdc-parport.h,
 	ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-write.h,
 	ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-tracing.h,
 	ftape/lowlevel/ftape-tracing.c, ftape/lowlevel/ftape-rw.h,
 	ftape/lowlevel/ftape-rw.c, ftape/lowlevel/ftape-real-tracing.h,
 	ftape/lowlevel/ftape-read.h, ftape/lowlevel/ftape-read.c,
 	ftape/lowlevel/ftape-proc.c, ftape/lowlevel/ftape-io.h,
 	ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-init.h,
 	ftape/lowlevel/ftape-init.c, ftape/lowlevel/ftape-format.c,
 	ftape/lowlevel/ftape-fake-tracing.h, ftape/lowlevel/ftape-ctl.h,
 	ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/ftape-calibr.h,
 	ftape/lowlevel/ftape-calibr.c, ftape/lowlevel/ftape-buffer.h,
 	ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/ftape-bsm.c,
 	ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/Makefile, ftape/internal/fdc-internal.h,
 	ftape/internal/fdc-internal.c, ftape/internal/fc-10.c,
 	ftape/internal/Makefile, ftape/compressor/zftape-compress.h,
 	ftape/compressor/zftape-compress.c, ftape/Makefile, Makefile:
 	Update the Copyright notices (time stamps).

Tue Aug 18 06:54:45 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-real-tracing.h:
	Fixed, so that the package compiles with -DCONFIG_FT_NO_TRACE

Tue Aug 18 06:18:17 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* MCONFIG:
	Make the configuration of the trace flags more user friendly.

Tue Aug 18 06:05:16 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/Config.in: CONFIG_FT_TRAKKER and CONFIG_FT_BPCK depend on
 	both, CONFIG_FTAPE and CONFIG_PARPORT which is a bit tricky with
 	the kernel configuration script.

Tue Aug 18 04:48:29 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.c: Fix bug reported by Shaw Carruthers
 	<shaw@shawc.demon.co.uk>. ftape didn't reset the header_read and
 	vtbl_read flags when a new cartride was inserted. What a mess.

	* ftape/lowlevel/ftape-ctl.h:
	Removed the "data" field from ftape_info_t. It isn't needed.

	* ftape/zftape/zftape-init.c, ftape/zftape/zftape-ctl.c: Don't
 	call ftape_destroy(). This would brake ftape-internal when
 	compiled into the kernel. If it is not, it will be unloaded anyway
 	and clean up its memory. Otherwise the user gets what it deserves.

	* ftape/zftape/zftape-write.c: zft_loop_until_writes_done() should
 	have trace level ft_t_flow, not ft_t_info

	* ftape/internal/fdc-internal.c: Remove some #ifdeffed code

Tue Aug 18 01:29:33 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h: Bump date stamp to 08/18/98

Tue Aug 18 00:54:39 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape-vtbl.h,
 	ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-rw.h,
 	ftape/zftape/zftape-rw.c, ftape/zftape/zftape-read.h,
 	ftape/zftape/zftape-read.c, ftape/zftape/zftape-init.h,
 	ftape/zftape/zftape-init.c, ftape/zftape/zftape-ctl.h,
 	ftape/zftape/zftape-ctl.c, ftape/parport/trakker.c,
 	ftape/parport/bpck-fdc.c, ftape/lowlevel/ftape-write.h,
 	ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-read.h,
 	ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-format.c,
 	ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/ftape-buffer.h,
 	ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/fdc-io.h,
 	ftape/internal/fdc-internal.c, ftape/compressor/zftape-compress.c:
 	Needed to fix the deblock buffer locking.

Mon Aug 17 17:07:26 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

Mon Aug 17 17:07:03 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h:
	Replace detailed RCS commit date by short release date stamp.

	* ftape/zftape/zftape-rw.c:
	call zft_zap_read_buffers() in zft_release_deblock_buffer(). Just to
	be sure ...

	* ftape/zftape/zftape-ctl.c:
	zft_close(): Only set zftape->io_state to zft_idle when something was
	written to the tape.

	* ftape/lowlevel/ftape-init.c:
	Don't call the setup routines of the other modules if ftape.o is
	configured to be compiled as a module.

	* include/linux/ftape.h:
	Undefined CONIFG_FTAPE etc. if CONFIG_FTAPE_MODULE is defined. Hack to
	enable compilation with another version of ftape compiled into the
	kernel version.

Mon Aug 17 14:14:43 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* MCONFIG:
	Set LINUX_LOCATION to /usr/src/linux for official ftape release.

	* INSTALL: Add "pre-install ftape-internal swapout 15" to the examples.

Mon Aug 17 13:46:52 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* RELEASE-NOTES: Correct time stamp for release of ftape-4.00

	* include/linux/ftape.h:
	Remove RCS Log: directive and bump version to 4.00

	* TODO: Add better handling of "no data errors" during verification.

	* ftape/ftape.txt: Added my name as author of that blurb.

	* RELEASE-NOTES: Indenting and update to floppy patches.

Mon Aug 17 13:16:22 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* patches/v2.1/README, patches/v2.1/floppy.c.dif,
 	patches/v2.0/floppy.c.dif: First allocate the IO regions, then
 	call request_irq(). Otherwise an interrupt might fire up and
 	access the IO registers which is a bad thing if the ftape driver
 	is in using them.

	* ftape/zftape/zftape-ctl.c, ftape/parport/trakker.h,
 	ftape/parport/trakker.c, ftape/parport/bpck-fdc.h,
 	ftape/parport/bpck-fdc.c, ftape/parport/bpck-fdc-regset.h,
 	ftape/parport/bpck-fdc-makecrc.c, ftape/parport/Makefile,
 	ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-io.c: Remove RCS $Log: directives (read the
 	ChangeLog ...)  Return -EBUSY if we can't grab all resources (if
 	possible)

	* BUGS: Add a note about possible problems with ftape's signal
 	handlings reported by Tim Jones <tjones@estinc.com>

	* MCONFIG: Update notice about broken floppy driver. Change to
 	define the proper CONFIG_FT_ symbols.

	* include/linux/ftape.h: Exchange BACKPACK by BPCK

	* patches/v2.0/README, ftape/zftape/zftape-init.c: Fix a typo.

	* ftape/parport/fdc-parport.h, ftape/Config.in:
	Exchange BACKPACK by BPCK

	* ftape/internal/fdc-internal.c: Remove the RCS log information
 	(Read the ChangeLog instead!). Allocate all the IO regions of the
 	standard floppy disk controller in case of IRQ/DMA conflicts.

	* ftape/lowlevel/fdc-io.c: No need to block signals in
 	fdc_interrupt_wait(). This already has been done by the VFS
 	interface zftape.

	* ftape/lowlevel/fdc-io.c:
	Bail out if datarate is too low for QIC-3020 in "handle_perpend()"

Sun Aug 16 21:39:00 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.c: Don't call fdc_get_deblock_buffer(),
 	no longer needed, as fdc modules allocate the deblock_buffer when
 	they are loaded.

	* ftape/zftape/zftape-rw.c, ftape/zftape/zftape-ctl.c, ftape/lowlevel/fdc-io.c:
	Fix the put_deblock_buffer() stuff.

	* ftape/zftape/zftape-rw.c, ftape/zftape/zftape-ctl.c:
	Be careful not to access zftape->ftape if device is not open (when
	unloading).

Sat Aug 15 22:55:57 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* modules/remove, modules/insert: Add the zft-compressor module

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-rw.c, ftape/zftape/zftape-init.c, ftape/zftape/zftape-ctl.c, ftape/zftape/zftape-buffers.c:
	Remove obsolete "../lowlevel/" prefixes from include statements

	* ftape/lowlevel/ftape-tracing.c:
	Remove obsolete "../lowlevel/" prefix from include statement

	* ftape/Makefile:
	Add the ./compressor subdirectory so that "make clean" works correctly.

	* ftape/ftape.txt: Add a note the de-compression is still supported

	* TODO, RELEASE-NOTES: Spelling fixes.

	* TODO: Add FC-20 2Mbps mode as TODO

	* INSTALL: Add a table of contents

	* BUGS: Add a note about the peculiarities of the Ditto EZ controller

Sat Aug 15 17:47:11 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape-vtbl.c,
 	ftape/zftape/zftape-rw.h, ftape/zftape/zftape-rw.c,
 	ftape/zftape/zftape-read.c, ftape/zftape/zftape-ctl.c,
 	ftape/zftape/zftape-buffers.c, ftape/parport/trakker.h,
 	ftape/parport/trakker.c, ftape/parport/bpck-fdc.h,
 	ftape/parport/bpck-fdc.c, ftape/lowlevel/ftape_syms.c,
 	ftape/lowlevel/ftape-buffer.h, ftape/lowlevel/ftape-buffer.c,
 	ftape/lowlevel/fdc-io.h, ftape/internal/fdc-internal.h,
 	ftape/internal/fdc-internal.c: Fixed a serious bug. Reading single
 	block one by one, closing the device in between, such as

	dd if=/dev/nqft0 bs=10k count=1
	sleep 120
	dd if=/dev/nqft0 bs=10k count=1

	could have led to Oopses. We need to lock the lowlevel FDC modules in
	memory when we want to use their deblock buffer across subsequent
	open()/close() runs.

	* ftape/ftape.txt, ftape/Configure.help.ftape, ftape/Config.in:
	Add configuration option for reading old compressed volumes.

	* ftape/compressor/.cvsignore: Added the .*.flags files.

	* ftape/compressor/zftape-compress.c:
	Changes to the load banner and remove statistics about writing
	compressed volumes as we only support decompression.

	* ftape/zftape/zftape-read.c, ftape/zftape/zftape-init.c,
 	ftape/zftape/zftape-ctl.c: Changes so that seeking in compressed
 	volumes works again.

	* ftape/parport/bpck-fdc.c: Don't mention the grab interrupt when
 	TRACE_LEVEL <= ft_t_info

	* ftape/lowlevel/fdc-io.c: Changed fdc_disable() to prevent
 	annoying "not busy" error message.

Fri Aug 14 17:33:43 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/zftape.h, ftape/zftape/zftape_syms.h,
 	ftape/zftape/zftape_syms.c, ftape/zftape/zftape-write.c,
 	ftape/zftape/zftape-vtbl.h, ftape/zftape/zftape-vtbl.c,
 	ftape/zftape/zftape-rw.h, ftape/zftape/zftape-rw.c,
 	ftape/zftape/zftape-read.c, ftape/zftape/zftape-init.h,
 	ftape/zftape/zftape-init.c, ftape/zftape/zftape-ctl.h,
 	ftape/zftape/zftape-ctl.c, ftape/zftape/zftape-buffers.c,
 	ftape/zftape/Makefile, ftape/lowlevel/ftape-real-tracing.h,
 	ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-init.h,
 	ftape/lowlevel/fdc-io.c, ftape/compressor/zftape-compress.h,
 	ftape/compressor/zftape-compress.c, ftape/compressor/lzrw3.h,
 	ftape/compressor/lzrw3.c, ftape/compressor/Makefile,
 	ftape/compressor/.cvsignore, ftape/Makefile, MCONFIG: Revived the
 	zft-compressor.o module for read-only compatibility with old
 	compressed archives.

Thu Aug 13 21:00:30 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-read.c:
	Check for cartridge being formatted before reading header segments.

	* ftape/internal/fdc-internal.c:
	Forgot to call MOD_DEC_USE_COUNT when allocation of IO regions failed.

	* ftape/internal/fdc-internal.c:
	First enable the DMA gate of the standard FDC again, THEN release the
	associated IO regions.

Wed Aug 12 23:04:42 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/setup/ftape-setup.c: Be noisy if trace level is ft_t_noise.

	* ftape/parport/trakker.c, ftape/parport/bpck-fdc.c,
 	ftape/internal/fdc-internal.c: Fixed one of those favourite newbee
 	bugs. Shudder.

	* ftape/lowlevel/ftape-real-tracing.h:
	Don't use "const" for __initdata data, gcc doesn't like it.

	* ftape/internal/fdc-internal.c:
	Back to not really probe for hardware. Ftape will do that later. This
	way we can handle PnP controllers and still move some of the init code
	to the .init section.

	* include/linux/ftape.h, ftape/parport/trakker.c,
 	ftape/parport/bpck-fdc.c, ftape/internal/fdc-internal.c: Small
 	changes to the load banner.

Wed Aug 12 21:06:30 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/parport/bpck-fdc.c: Forgot a type specification for an
 	integer variable. Cause a compiler warning.

	* ftape/zftape/zftape-init.c, ftape/lowlevel/ftape_syms.c,
 	ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-proc.h, ftape/lowlevel/ftape-proc.c,
 	ftape/lowlevel/ftape-init.h, ftape/lowlevel/ftape-format.c,
 	ftape/lowlevel/ftape-ecc.c, ftape/lowlevel/ftape-ctl.c,
 	ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/ftape-bsm.c: Remove
 	several unnecessary ../lowlevel/ prefixes, define the __init stuff
 	in ftape-init.h only (if not already defined by the kernel)

	* ftape/setup/ftape-setup.c, ftape/parport/trakker.c,
 	ftape/parport/fdc-parport.h, ftape/parport/bpck-fdc.c,
 	ftape/lowlevel/ftape-init.c, ftape/internal/fdc-internal.h,
 	ftape/internal/fdc-internal.c, ftape/internal/fc-10.h,
 	ftape/internal/fc-10.c, ftape/ftape.txt: Fix the kernel option
 	parsing.

	* ftape/lowlevel/ftape-tracing.c,
 	ftape/lowlevel/ftape-real-tracing.h: Play around with __initdata
 	and __initlocaldata to put some noisy strings into the .init.data
 	section.

	* ftape/ftape.txt: Correct the note about the old HOWTO

	* MCONFIG, INSTALL: Update the notes concerning the patches
 	subdirectory.

	* patches/v2.0/README, patches/v1.2/README:
	Prettify the warning message.

	* patches/README, patches/v2.0/README: Initial revision.

	* patches/v1.2/README, patches/v1.2/io.h,
 	patches/v1.2/linux-1.2.13.dif, patches/v1.2/linux-1.2.13.dif.2,
 	patches/v1.2/wrapper.h: Renamed 1.2.13 to v1.2 and added a README
 	file.

	* patches/v2.0/floppy.c.dif:
	The v2.1.x kernels no longer need the floppy patch.

	* ftape/zftape/Attic/zftape_syms.h,
 	ftape/zftape/Attic/zftape_syms.c: Weren't used any more since
 	4.x-beta-something

Tue Aug 11 11:30:13 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-read.c:
	Added fix for broken format of some Colorado "FreeBee" tape by
	steve@rex.dircon.co.uk.

Mon Aug 10 21:13:54 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* TODO, RELEASE-NOTES, README, MCONFIG, INSTALL, BUGS:
	Updated to ftape-4.00.

	* modules/insert:
	Comment out "klogd -i" which might not be understood by all versions
	of klogd.

	* modules/isapnp.conf:
	Add BIG FAT WARNING to modify this file appropriately

	* modules/remove: Added "|| true" to all entries.

	* ftape/zftape/zftape-ctl.c:
	Only call mt_load() form mt_reset() when there is no
	tape. zftape->offline will be cleared when calling _zft_open()

	* ftape/zftape/zftape-ctl.c:
	MTRESET also loads the cartridge now, so the Ditto Max drive is
	treated the same way as the other ones, MTRESET reverts the MTOFFL
	command. Maybe it should not ...

	* ftape/zftape/zftape-ctl.c:
	Reset the zftape->offline flag when mt_load() is called so that
	non-Max drives behave (nearly) the same as Ditto Max drives.

Sun Aug  9 02:03:54 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.c, ftape/lowlevel/ftape-ctl.c: Change
 	the load/unloading semantics for the Ditto Max. No implicit loding
 	anymore to avoid inconsistencies with the treatment of non-Max
 	drives. Implement the unload command as an alias for MTOFFL.

Sat Aug  8 19:39:06 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.c: Return -EROFS when trying to write a
 	segment via the MTIOCWRFTSEG ioctl and the cartridge is write
 	protected.

	* ftape/ftape.txt: Spelling fixes.

Fri Aug  7 10:36:08 1998  Claus-Justus Heine  <claus@math1.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/Config.in: Tried to fix the ftape->zftape dependency

	* ftape/internal/fdc-internal.c: Name space clean up. Prefixed all
 	symbols with fdc_int_... instead of fdc_ to avoid clashes with
 	lowlevel/fdc-io.c This solves a problem with depmod.

	* Attic/Ftape-FAQ: Moved to the ftape-doc package.

Mon Aug  3 16:35:57 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.x-beta-11

	* include/linux/ftape.h, RELEASE-NOTES, ChangeLog: Bumped to
 	version 4.x beta 11

gMon Aug  3 00:44:50 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/parport/fdc-parport.h: Replaced "parport" module parameter
 	by "ft_fdc_parport"

	* ftape/ftape.txt: New kernel documentation text

Sun Aug  2 00:12:31 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/parport/fdc-parport.h: Call a MOD_INC_USE_COUNT;
 	MOD_DEC_USE_COUNT; pair if probing failed to mark the module as
 	used. Otherwise auto-unloading wouldn't work.

	* ftape/parport/bpck-fdc.c: Test alternate connect sequences as
 	well (but not sure yet ...)

	* ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/ftape-ctl.c,
 	ftape/lowlevel/fdc-isr.c: Rename history_record to ft_history_t

	* ftape/lowlevel/fdc-io.c: Fxied auto-loading of fdc
 	modules. Caused kerenl Oopses if load wasn't successful.

	* ftape/lowlevel/ftape-io.c: Changed ftape_ready_wait() to again
 	use a very short poll delay, but increase it linearily until a
 	certain maximum poll delay is reached. Fixed a bug in
 	ftape_ready_wait() where certain timeout values could have caused
 	infinite loops.

Sat Aug  1 23:59:16 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-proc.c:
	Removed an obsolete note that this stuff is buggy ...

Fri Jul 31 15:09:14 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-bsm.c: Removed a silly test case.

Mon Jul 27 22:58:04 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.x-beta-10

	* include/linux/ftape.h: Bump version to beta-10

Mon Jul 27 22:56:55 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/parport/fdc-parport.h:
	Parport macros were broken pretty badly in beta-9 with 2.0
	kernels. Fix that.

	* MCONFIG: Forgot to set the HOSTCC macro ...

Mon Jul 27 13:53:50 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.x-beta-9

	* include/linux/ftape.h, RELEASE-NOTES: Bumped to version 4.x-beta-9

Mon Jul 27 13:53:07 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* INSTALL: Added some /etc/conf.modules examples.

Mon Jul 27 13:39:53 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* MCONFIG: Add option for standard FDC controller.

	* ftape/lowlevel/ftape-read.c: Included hack to support QIC-80
 	tapes written by Xenix (supplied by Neil Collins
 	<Marina.mermaid@Colorado.EDU>)

	* ftape/parport/bpck-fdc.c: Removed an uneccessary "\n" from the
 	load banner.

	* ftape/Makefile: Be careful not to define SUB_DIRS if
 	PAR_SUB_DIRS isn't set.

	* ftape/.cvsignore: Add .*.flags files.

	* ftape/setup/ftape-setup.c: ftape_setup() now is only kind of a
 	wrapper that "forwards" the kernel parameters to each of the ftape
 	modules.

	* ftape/setup/Attic/ftape-setup.h: Not needed anymore

	* ftape/setup/Makefile: O_TARGET must not have the same name as
 	O_OBJS ...

	* ftape/parport/trakker.c, ftape/parport/bpck-fdc.c: Kernel setup
 	routine

	* ftape/parport/fdc-parport.h: Kernel/module parameters should be
 	declared static. Initialize fdc->threshold and fdc->rate_limit
 	from the kernel/module parameters.

	* ftape/parport/Makefile: Add ftape-parport.o O_TARGET when not
 	compiling as module.

	* ftape/internal/fdc-internal.c: Module/kernel parameters should
 	be declared static. Add kernel setup routine.

	* ftape/lowlevel/Makefile: Cosmetics

	* ftape/lowlevel/ftape-init.c: Add kernel setup routine. Correct
 	preprocessor conditionals to place calls to "...._register()" as
 	needed (for the FDC modules)

	* ftape/lowlevel/Attic/ftape-setup.c: Moved to ../setup/

	* ftape/Makefile: Correctly include/exclude the parallel port modules.

	* ftape/Config.in: Completely rewritten. Make it possible to
 	configure the hardware for each ftape device separately

Sat Jul 25 19:32:54 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/parport/trakker.h, ftape/parport/trakker.c,
 	ftape/parport/fdc-parport.h, ftape/parport/bpck-fdc.h,
 	ftape/parport/bpck-fdc.c: Use parport_... macros for parport
 	access

Fri Jul 24 00:23:29 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* MCONFIG: Update copyright timestamp. CONFIG_FT_PROBE_FC10 is now
 	called CONFIG_FT_FC10. The default parport to use for Trakker and
 	Backpack should be "-1", i.e. probe all available parallel ports.

	* include/linux/ftape.h: Add some preprocessor conditionals to
 	cope with the kernel CONFIG_ macros.

	* ftape/parport/Makefile: Call ./bpck-fdc-makecrc not
 	bpck-fdc-makecrc. "." need not to be in the path.

	* ftape/parport/fdc-parport.h, ftape/internal/fdc-internal.h,
 	ftape/internal/fdc-internal.c: Add lots of preprocessor
 	conditionals to parse the kernel CONFIG_ macros.

	* ftape/Configure.help.ftape, ftape/Config.in: Rewrote kernel
 	configuration scripts.

	* ftape/zftape/.cvsignore, ftape/setup/.cvsignore,
 	ftape/parport/.cvsignore, ftape/lowlevel/.cvsignore,
 	ftape/internal/.cvsignore, ftape/.cvsignore: Added .depend and
 	pattern .*.flags for fiddling with the kernel source tree

Tue Jul 21 21:21:43 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.x-beta-8

	* include/linux/ftape.h, RELEASE-NOTES, ChangeLog:
	Bump version to 4.x beta 8

Tue Jul 21 20:45:15 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* INSTALL: Add warning about missing documentation.

	* BUGS: procfs bug fixed for kernel >= 2.1.58

	* ftape/parport/Makefile:
	Correct bpck-fdc-crc.h rule to work even if bpck-fdc-makecrc is up-to-date.

	* ftape/lowlevel/ftape-proc.c:
	Use the fill_inode() hook of the proc_dir_entry() to lock the module
	while somebody accesses the proc entries. Works since 2.1.58

Sat Jul 18 21:16:55 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.x-beta-7

	* include/linux/ftape.h: Force time stamp to be up to date

	* TODO, RELEASE-NOTES, README, INSTALL, BUGS: Should be less out
 	of date now.

	* Attic/README.TRAKKER: Out of date

	* ftape/README: Updated to reflect changed module parameter syntax.

	* ftape/parport/Attic/README: Obsoleted by ../README

	* ftape/internal/fdc-internal.c: Print IO base and IRQ after
 	auto-probing, not before.

	* ftape/lowlevel/ftape-proc.c, ftape/lowlevel/ftape-init.h,
 	ftape/lowlevel/ftape-init.c, ftape/lowlevel/fdc-io.c: Reduce
 	verbosity of ftape_driver_in_list() and
 	ftape_build_driver_list(). Define the macro FTAPE_BANNER in
 	ftape-init.h so that the procfs entry shows the same banner that
 	ftape prints to the kernel log.

Sat Jul 18 19:22:37 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* modules/insert, modules/isapnp.conf, modules/remove,
 	modules/.cvsignore: Initial revision.

	* ftape/parport/fdc-parport.h: Remove wrong conversion from signed
 	int to __u16.

	* ftape/parport/bpck-fdc.h, ftape/parport/bpck-fdc.c: Add a new
 	field "failure" to bpck_fdc_t. It is set when bpck_fdc_connect()
 	failed, probably because the drive is no longer connected. If set,
 	bpck_fdc_grab() will fail, causing fdc_init() to call the hardware
 	detection pass again, and bail out if the drive really isn't
 	connected any longer. Decrease the verbosity of the connect
 	failure messages, so that ftape bails out in reasonable time, even
 	if tracing is set to ft_t_info.

	* ftape/lowlevel/ftape-ctl.c: Fix a bug in
 	ftape_get_drive_status() where ftape->new_tape was set to 0 again
 	when the tape drive was in error status. Didn't cause too much
 	harm, so far, but is needed to support unplugging of parallel port
 	devices and error recovery in case the drive gets unintentionally
 	disconneted during operation.

	* ftape/lowlevel/fdc-io.c: Set the data rate of the FDC to the
 	rate of the tape drive. They may be different in case the fdc
 	driver module has been unloaded intermidiately.

	* ftape/internal/fdc-internal.c: Added proper type conversion
 	between the module values and the fdc hardware
 	configuration. However, the insmod utility seems to be very broken
 	w.r.t. to negative module parameters ... :-(

	* ftape/parport/bpck-fdc.c: Change a trace level

	* ftape/parport/trakker.c: Fix a typo, add call to
 	ft_parport_destroy() in trakker_free(), instead of
 	parport_unregister_device().

	* ftape/parport/bpck-fdc.c: Let bpck_fdc_selete_reg() return an
 	error value to the caller. Add various checks for those return
 	values. Break infinite recursion in bpck_fdc_interrupt() in case
 	we are no longer connected. Fix bpck_fdc_grab() to check for a
 	connect error.

	* ftape/parport/fdc-parport.h: Added ft_parport_destroy() function
 	that unregisters the parport device and sets allocated[fdc->unit]
 	to -1.

	* include/linux/ftape.h: Add support for kmod instead of
 	kerneld. Define the macro FT_MODULE_AUTOLOAD in either case, so
 	the remainder of source tree can forget about this difference.

	* ftape/lowlevel/ftape-real-tracing.h: User
 	FTAPE_SEL(zftape->unit) for the trace message switch. zftape->unit
 	holds all minor bits, not only the device number.

	* ftape/lowlevel/ftape-io.c: In several places the return value of
 	ftape_report_raw_drive_status() was ignored. This was really bad
 	in case of hardware failure (e.g. an unplugged parallel port
 	device)

	* ftape/lowlevel/ftape-init.c: Added the __initfunc()
 	ftape_build_driver_list() that parses the ft_fdc_driver array and
 	replaces colons by '\0', and sets ft_fdc_driver_no to the number
 	of drivers separated by colons (by zero bytes after the function
 	has finished)

	* ftape/lowlevel/ftape-ctl.c: The hopefully last occurrence of a
 	"return" instead of "TRACE_EXIT"

	* ftape/lowlevel/fdc-io.h: Moved the hardware configuration back
 	to the low level fdc modules.

	* ftape/lowlevel/fdc-io.c: Moved the hardware configuration back
 	to the low level fdc modules. Rewrote the auto-loading etc. The
 	ft_fdc_driver[sel] parameter may be a colon separated list of
 	possible drivers for that device. If a known device fails, each
 	driver in the list is tried until one succeeds. Useful for
 	parallel port devices that can be plugged of.

	* ftape/internal/fdc-internal.c: Added IRQ autoprobing, if the IRQ
 	is known we cause a reset to be sure that the hardware is really
 	there.

Fri Jul 17 14:51:55 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h: Default initialization for all parameters
 	is "unset", i.e. "-1"

	* ftape/parport/fdc-parport.h: Forgot to remove the "#if 0" fake
 	to not compile parport support in.

	* ftape/parport/bpck-fdc.c: Changed id of bpck module from bpck to
 	bpck-fdc for module autoloading

	* ftape/parport/README: Fixed some examples.

	* ftape/lowlevel/ftape-tracing.c, ftape/lowlevel/ftape-init.c:
 	Initialize all field of the ft_tracings variable

	* ftape/internal/fdc-internal.c: Forgot to delete old module
 	parameters. We now pass the fdc info variable as "dev_id" to the
 	interrupt routine.

	* ftape/README: Tried to update the README file to reflect the
 	progress we made in supporting multiple tape drives.

	* MCONFIG: Added per-ftape device CONFIG_FT_ parameters

Fri Jul 17 14:50:34 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h: Default initialization for all parameters
 	is "unset", i.e. "-1"

	* ftape/parport/fdc-parport.h: Forgot to remove the "#if 0" fake
 	to not compile parport support in.

	* ftape/parport/bpck-fdc.c: Changed id of bpck module from bpck to
 	bpck-fdc for module autoloading

	* ftape/parport/README: Fixed some examples.

	* ftape/lowlevel/ftape-tracing.c, ftape/lowlevel/ftape-init.c:
 	Initialize all field of the ft_tracings variable

	* ftape/internal/fdc-internal.c: Forgot to delete old module
 	parameters. We now pass the fdc info variable as "dev_id" to the
 	interrupt routine.

	* ftape/README: Tried to update the README file to reflect the
 	progress we made in supporting multiple tape drives.

	* MCONFIG: Added per-ftape device CONFIG_FT_ parameters

Thu Jul 16 19:39:00 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/fdc-io.h, ftape/lowlevel/fdc-io.c,
 	ftape/internal/fdc-internal.c: Added magic number to the "struct
 	fdc_info" structure. Check for it in the low level interrupt
 	routines.

	* ftape/parport/trakker.h, ftape/parport/trakker.c,
 	ftape/parport/fdc-parport.h, ftape/parport/bpck-fdc.h,
 	ftape/parport/bpck-fdc.c: Add magic numbers to bpck_fdc and
 	trakker structures. Use "dev_id" passed to the interrupt routine
 	to get the pointer to the fdc structure. Add magic number checks
 	to the interrupt routines
	(especially for the fdc data)

	* ftape/parport/Makefile, ftape/parport/bpck-fdc-makecrc.c:
 	Comment alignment in header.

	* ftape/zftape/zftape-write.h, ftape/zftape/zftape-write.c,
 	ftape/zftape/zftape-vtbl.h, ftape/zftape/zftape-vtbl.c,
 	ftape/zftape/zftape-rw.h, ftape/zftape/zftape-rw.c,
 	ftape/zftape/zftape-read.h, ftape/zftape/zftape-read.c,
 	ftape/zftape/zftape-inline.h, ftape/zftape/zftape-init.c,
 	ftape/zftape/zftape-eof.h, ftape/zftape/zftape-eof.c,
 	ftape/zftape/zftape-ctl.h, ftape/zftape/zftape-ctl.c,
 	ftape/zftape/zftape-buffers.h, ftape/zftape/zftape-buffers.c,
 	ftape/lowlevel/ftape-write.h, ftape/lowlevel/ftape-write.c,
 	ftape/lowlevel/ftape-rw.h, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-real-tracing.h, ftape/lowlevel/ftape-read.h,
 	ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-proc.c,
 	ftape/lowlevel/ftape-io.h, ftape/lowlevel/ftape-io.c,
 	ftape/lowlevel/ftape-init.c, ftape/lowlevel/ftape-format.h,
 	ftape/lowlevel/ftape-format.c, ftape/lowlevel/ftape-ctl.h,
 	ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/ftape-calibr.h,
 	ftape/lowlevel/ftape-calibr.c, ftape/lowlevel/ftape-buffer.h,
 	ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/ftape-bsm.h,
 	ftape/lowlevel/ftape-bsm.c, ftape/lowlevel/fdc-isr.h,
 	ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-io.c, ftape/internal/fdc-internal.h,
 	ftape/internal/fdc-internal.c, ftape/internal/fc-10.h,
 	ftape/internal/fc-10.c: Renamed the following data types:

	struct ftape_struct       -> struct ftape_info, ftape_info_t
	struct fdc_info           -> struct fdc_info, fdc_info_t
	struct zftape_struct      -> struct zftape_info, zftape_info_t
	struct bpck_fdc, bpck_fdc -> struct bpck_fdc, bpck_fdc_t

	* ftape/Makefile: Moved bpck and trakker code into the "parport"
 	subdirectory.

	* ftape/parport/.cvsignore: Initial revision

	* ftape/parport/Makefile, ftape/parport/README,
 	ftape/parport/bpck-fdc-makecrc.c, ftape/parport/bpck-fdc-regset.h,
 	ftape/parport/bpck-fdc.c, ftape/parport/bpck-fdc.h,
 	ftape/parport/fdc-parport.h, ftape/parport/trakker.c,
 	ftape/parport/trakker.h: Moved trakker and bpck driver into a
 	single "parport" directory. Added "fdc-parport.h" which holds
 	generic code for module parameter parsing and resource allocation
 	for parallel ports. Added IRQ autoprobing to Bpck driver (for the
 	non PARPORT version)

Tue Jul 14 02:54:02 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h: Added CONFIG_ macros for threshold and
 	rate limit.

	* ftape/zftape/zftape-ctl.c:
	Reset the offline bit when a new cartridge is inserted.

	* ftape/lowlevel/ftape-init.c: Move threshold and rate limit
 	module parameter to ftape main module. Removed Bas' and Kai's
 	email addresses.

	* ftape/lowlevel/fdc-io.c: Move threshold and rate limit module
 	parameter to ftape main module. When registering a new fdc module
 	the named slot + the first free unnamed slot win

Tue Jul 14 02:54:02 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h: Added CONFIG_ macros for threshold and
 	rate limit.

	* ftape/zftape/zftape-ctl.c: Reset the offline bit when a new
 	cartridge is inserted.

	* ftape/lowlevel/ftape-init.c: Move threshold and rate limit
 	module parameter to ftape main module. Removed Bas' and Kai's
 	email addresses.

	* ftape/lowlevel/fdc-io.c: Move threshold and rate limit module
 	parameter to ftape main module. When registering a new fdc module
 	the named slot + the first free unnamed slot win

	* ftape/bpck/bpck-fdc.h, ftape/bpck/bpck-fdc.c: Move threshold and
 	rate limit module parameter to ftape main module. fixed a serious
 	bug where the write bit in the control register wasn't cleared
 	when reading single values in PS2 mode.

	* ftape/bpck/Makefile: Renamed makecrc.c to bpck-fdc-makecrc.c

	* ftape/bpck/.cvsignore: Added bpck-fdc-makecrc

	* ftape/bpck/Attic/makecrc.c, ftape/bpck/bpck-fdc-makecrc.c:
 	renamed

Mon Jul 13 22:12:27 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/bpck/bpck-fdc.c: Lots of changes. Basically, the whole
 	stuff should work now, with hardware ECC generation, hardware ECC
 	error detection (but software ECC error correction). CRC works,
 	but NOT when writing in EPP-16/32 mode. Hence use EPP-8 ONLY when
 	writing. Reading in EPP-16/32 is fine.

	* ftape/bpck/bpck-fdc.h: New enum bpck_fdc_error_t to indicate ECC
 	error as return value.

	* ftape/bpck/bpck-fdc-regset.h: Register 0x00 also indicates ECC
 	error when reading.

Thu Jul  2 14:04:58 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/bpck/bpck-fdc.h, ftape/bpck/bpck-fdc.c,
 	ftape/bpck/bpck-fdc-regset.h: Further clarification of which
 	register does what. WE ARE ABLE TO READ DATA FROM THE TAPE DRIVE
 	NOW!!!!!!

Mon Jun 29 12:15:27 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.x-beta-6

	* ftape/bpck/Makefile:
	Let bpck-fdc.c depend on bpck-crctab.h so that bpck-crctab.h can be
	created.

	* RELEASE-NOTES, ChangeLog: Updated for 4.x beta 6

Mon Jun 29 12:03:47 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h, MCONFIG: Bump version to 4.x beta 6

	* ftape/bpck/bpck-fdc.h, ftape/bpck/bpck-fdc.c: Fix software
 	interrupt polling. Make it compile with 2.0.33

	* ftape/Makefile, MCONFIG: Remove the support for MS binary obispo
 	module.

	* ftape/lowlevel/ftape-real-tracing.h: Don't 'AND' the TRACE_SEL
 	value with 0x3. ftape_tracings[4] holds the general trace channel.

	* ftape/bpck/.cvsignore: Initial revision

	* ftape/bpck/bpck-fdc.h, ftape/bpck/bpck-fdc.c: Memory and
 	register addressing now work for all known protocols
	(i.e. SPP, PS2, EPP8, EPP16, EPP32). All known protocols? What
 	about ECP? Who cares?

	Switching between protocols works also. Memory size is determined
 	automatically, CRC checksum feature is supported.

Sun Jun 21 15:07:00 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/bpck/bpck-fdc.h, ftape/bpck/makecrc.c,
 	ftape/bpck/Makefile, ftape/bpck/bpck-fdc.c, ftape/Makefile: Added
 	bpck directory, holding source code for bpck driver

Fri May 29 21:25:32 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/trakker/trakker.c: Merged fixes by Jochen Hoenicke
 	<Jochen.Hoenicke@Informatik.Uni-Oldenburg.DE> I had screwed up his
 	code (again an issue of disable/enable_irq)

	* ftape/lowlevel/fdc-io.c: Merged fixes supplied by Jochen
 	Hoenicke <Jochen.Hoenicke@Informatik.Uni-Oldenburg.DE> I forgot to
 	surround dor_reset(0) by disable/enable_irq() in fdc_disable ()

Thu May 28 07:51:47 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* RELEASE-NOTES: Updated

	* include/linux/ftape.h: Set version to 4.x beta 5

	* ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h: Change the
 	computation of the FDC transfer size. We now use the result bytes
 	returned by the read/write command to compute the transfer
 	size. The low-level fdc->ops->get_dma_residue() was renamed to
 	fdc->ops->terminate_dma() and isn't queried any longer about the
 	transfer size, but simply should terminate the dma transfer
	(i.e. disable the dma controller)

	* ftape/lowlevel/fdc-io.c: Fixed fdc_reset(). As
 	fdc_interrupt_wait() now is called with interrupts disabled and
 	returns with interrupts enabled we have to disable interrupts
 	again when looping over fdc_interrupt_wait(). Don't check for
 	fdc->isr_active in fdc_enable/disable_irq(). This would fail on
 	SMP boxes.

	* ftape/lowlevel/ftape-calibr.c: Reduce trace level to ft_t_flow

	* ftape/internal/fdc-internal.c: Renamed fdc_get_dma_residue() to
 	fdc_terminate_dma(). The computation of the transfer size now is
 	handled by ../lowlevel/fdc-isr.c

	* ftape/trakker/trakker.c: Renamed trakkker_get_dma_residue() to
 	trakker_terminate_dma(). The computation of the transfer size now
 	is handled by ../lowlevel/fdc-isr.c

	* ftape/obispo/obispo.h, ftape/obispo/obispo-public.c: Removed
 	some nasty comments; remove the eeprom stuff; moved computation of
 	the fdc transfer size to ../lowlevel/fdc-isr.c; rename
 	obispo_get_dma_residue() to obispo_terminate_dma().

1998-05-28  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release version ftape-4.x-beta-5

Thu May 28 06:59:08 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* RELEASE-NOTES: Updated

	* include/linux/ftape.h: Set version to 4.x beta 5

	* ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h: Change the
 	computation of the FDC transfer size. We now use the result bytes
 	returned by the read/write command to compute the transfer
 	size. The low-level fdc->ops->get_dma_residue() was renamed to
 	fdc->ops->terminate_dma() and isn't queried any longer about the
 	transfer size, but simply should terminate the dma transfer
	(i.e. disable the dma controller)

	* ftape/lowlevel/fdc-io.c: Fixed fdc_reset(). As
 	fdc_interrupt_wait() now is called with interrupts disabled and
 	returns with interrupts enabled we have to disable interrupts
 	again when looping over fdc_interrupt_wait(). Don't check for
 	fdc->isr_active in fdc_enable/disable_irq(). This would fail on
 	SMP boxes.

	* ftape/lowlevel/ftape-calibr.c: Reduce trace level to ft_t_flow

	* ftape/internal/fdc-internal.c: Renamed fdc_get_dma_residue() to
 	fdc_terminate_dma(). The computation of the transfer size now is
 	handled by ../lowlevel/fdc-isr.c

	* ftape/trakker/trakker.c: Renamed trakkker_get_dma_residue() to
 	trakker_terminate_dma(). The computation of the transfer size now
 	is handled by ../lowlevel/fdc-isr.c

	* ftape/obispo/obispo.h, ftape/obispo/obispo-public.c: Removed
 	some nasty comments; remove the eeprom stuff; moved computation of
 	the fdc transfer size to ../lowlevel/fdc-isr.c; rename
 	obispo_get_dma_residue() to obispo_terminate_dma().

Thu May 28 06:46:23 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h: Change the
 	computation of the FDC transfer size. We now use the result bytes
 	returned by the read/write command to compute the transfer
 	size. The low-level fdc->ops->get_dma_residue() was renamed to
 	fdc->ops->terminate_dma() and isn't queried any longer about the
 	transfer size, but simply should terminate the dma transfer
	(i.e. disable the dma controller)

	* ftape/lowlevel/fdc-io.c: Fixed fdc_reset(). As
 	fdc_interrupt_wait() now is called with interrupts disabled and
 	returns with interrupts enabled we have to disable interrupts
 	again when looping over fdc_interrupt_wait(). Don't check for
 	fdc->isr_active in fdc_enable/disable_irq(). This would fail on
 	SMP boxes.

	* ftape/lowlevel/ftape-calibr.c: Reduce trace level to ft_t_flow

	* ftape/internal/fdc-internal.c: Renamed fdc_get_dma_residue() to
 	fdc_terminate_dma(). The computation of the transfer size now is
 	handled by ../lowlevel/fdc-isr.c

	* ftape/trakker/trakker.c: Renamed trakkker_get_dma_residue() to
 	trakker_terminate_dma(). The computation of the transfer size now
 	is handled by ../lowlevel/fdc-isr.c

	* ftape/obispo/obispo.h, ftape/obispo/obispo-public.c: Removed
 	some nasty comments; remove the eeprom stuff; moved computation of
 	the fdc transfer size to ../lowlevel/fdc-isr.c; rename
 	obispo_get_dma_residue() to obispo_terminate_dma().

Wed May 27 14:14:56 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/obispo/obispo-public.c: Removed offending
 	comments. Shouldn't think that noisily (and probably think twice
 	before typing some nonsense into the computer)

	* ftape/trakker/Attic/trakker-mmap.c,
 	ftape/obispo/Attic/obispo-mmap.h: Not needed any more

	* ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-io.c: Change fdc_isr() to cope with strange
 	behavior of the Ditto EZ controller. The contents of the MSR isn't
 	valid after data transfers for some cycles.

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape-rw.c, ftape/zftape/zftape-read.c, ftape/zftape/zftape-inline.h, ftape/zftape/zftape-ctl.c:
	Check for zftape->vtbl_read and zftape->header_read (various places)

	* ftape/internal/fdc-internal.c:
	Don't use the trace macros in the interrupt grab handler.

	* ftape/obispo/obispo-public.c: Call _fc_par_handle_int(NULL)
 	before closing the API. Probably not needed.

	* ftape/trakker/trakker.c: Use "GLOBAL_TRACING" in trakker_interrupt()

Tue May 26 09:15:07 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-init.c:
	Fixed broken module handling with pre-2.1 kernels.

	* ftape/lowlevel/ftape-ctl.c:
	Change ftape_abort_aperation() to call ftape_dumb_stop() in any case
	to catch tape-still-running-after-signal cases.

	* ftape/internal/fdc-internal.c:
	Added a dummy handler to catch an interrupt during initialization

Mon May 25 14:40:41 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ChangeLog, ftape/obispo/obispo-public.c:
	Fixed typos in names of module parameters

	* MCONFIG: Production version

	* ftape/lowlevel/fdc-io.c: Undo previous change and always wait
 	RQM_DELAY usecs when waiting for the fdc to get ready

1998-05-25  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* release of ftape-4.x-beta-4

Mon May 25 14:38:55 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/obispo/obispo-public.c:
	Fixed typos in names of module parameters

	* MCONFIG: Production version

	* ftape/lowlevel/fdc-io.c:
	Undo previous change and always wait RQM_DELAY usecs when waiting for
	the fdc to get ready

Mon May 25 14:03:33 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* MCONFIG: Production version

	* ftape/lowlevel/fdc-io.c:
	Undo previous change and always wait RQM_DELAY usecs when waiting for
	the fdc to get ready

	* include/linux/ftape.h: Bumped to beta state

Mon May 25 11:07:26 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h: Bumped to beta state

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape-rw.c,
 	ftape/zftape/zftape-ctl.c: Rename ftape_get_deblock_buffer() to
 	fdc_get...() and also ftape_set_nr_buffers() to
 	fdc_set_nr_buffers()

	* ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-read.h, ftape/lowlevel/ftape-read.c,
 	ftape/lowlevel/ftape-format.c, ftape/lowlevel/ftape-ctl.c,
 	ftape/lowlevel/ftape-buffer.h, ftape/lowlevel/ftape-buffer.c: Set
 	ftape->old_segment to -1 when calling zap_buffers(). Rename
 	ftape_get_deblock_buffer() to fdc_get...() and also
 	ftape_set_nr_buffers() to fdc_set_nr_buffers()

	* ftape/lowlevel/fdc-io.c:
	Remove fdc_usec_wait(RQM_DELAY) from fdc_ready_out/in_wait(). They
	alreay wait for the RQM status ...

	Moved initial fdc_ready_out_wait() to fdc_result().

	* ftape/lowlevel/fdc-isr.c:
	Don't bail out if RQM isn't set on entry to result phase. This can
	be. Simply wait for RQM being set.

	* ftape/lowlevel/ftape-calibr.c: Increased trace levels

Mon May 25 02:34:59 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape-rw.c,
 	ftape/zftape/zftape-ctl.c: Rename ftape_get_deblock_buffer() to
 	fdc_get...() and also ftape_set_nr_buffers() to
 	fdc_set_nr_buffers()

	* ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-read.h, ftape/lowlevel/ftape-read.c,
 	ftape/lowlevel/ftape-format.c, ftape/lowlevel/ftape-ctl.c,
 	ftape/lowlevel/ftape-buffer.h, ftape/lowlevel/ftape-buffer.c: Set
 	ftape->old_segment to -1 when calling zap_buffers(). Rename
 	ftape_get_deblock_buffer() to fdc_get...() and also
 	ftape_set_nr_buffers() to fdc_set_nr_buffers()

	* ftape/lowlevel/fdc-io.c: Remove fdc_usec_wait(RQM_DELAY) from
 	fdc_ready_out/in_wait(). They alreay wait for the RQM status ...

	Moved initial fdc_ready_out_wait() to fdc_result().

	* ftape/lowlevel/fdc-isr.c: Don't bail out if RQM isn't set on
 	entry to result phase. This can be. Simply wait for RQM being set.

	* ftape/lowlevel/ftape-calibr.c: Increased trace levels

Sun May 24 16:53:52 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-write.c: Make zft_zap_write_buffers() less
 	verbose (don't report there are 0 hard errors pending)

	* ftape/zftape/zftape-ctl.c: Fixed a typo

	* ftape/obispo/obispo-public.c: Removed silly attempt to share the
 	parport with the printer. Didn't work out (yet). Don't give up
 	when parport_claim_or_block() fails, but retry until signal.

	* ftape/lowlevel/ftape-write.c: Increased the trace level of some
 	message, making ftape_loop_until_writes_done() a little less
 	verbose

	* ftape/lowlevel/ftape-rw.c: Increased the trace level of some
 	message, making ftape_dumb_stop() a little less verbose

	* ftape/lowlevel/ftape-ctl.c: Try to stop tape after signal even
 	if ftape->tape_running is not set.

	* ftape/lowlevel/fdc-io.c: Fix handling of missing drive polling
 	interrupt when disabling the fdc. Removed misleading trace
 	message.

	* ftape/internal/fdc-internal.c: Remove "#if 0"ed code fragments
 	(enable_irq() when loading module ...)

Fri May 22 22:43:00 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-write.c:
	Update the media defects history in ftape_hard_error_recovery()

	* ftape/obispo/obispo-public.c: first check whether we still own
 	the port in obispo_parport_reclaim() then abort in case we are
 	executing in an interrupt context.

	* modules/.cvsignore: Initial revision.

	* ftape/lowlevel/ftape-read.c: Remove mmap madness

	* ftape/lowlevel/ftape-write.c: Don't give up if wait_segment()
 	fails until we know the reason why this sometimes happens.

	* ftape/lowlevel/ftape-rw.c: Don't exit the wait_segment() loop
 	without enabling interrupts again.

	* ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/ftape-ctl.c: Remove
 	mmap madness. Try all other wakeup methods, even if a known wakeup
 	method fails.

	* ftape/lowlevel/fdc-isr.c: skip overrun errors when counting hard
 	errors.

	* ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-format.h, ftape/lowlevel/ftape-format.c, ftape/lowlevel/fdc-io.h:
	Remove mmap madness

	* ftape/lowlevel/fdc-io.c: Do not call fdc->ops->enable_irq() in
 	fdc_get(). Irqs are enabled by default.

	* ftape/obispo/obispo.h, ftape/obispo/Attic/obispo-mmap.c,
 	ftape/obispo/Makefile: Removed mmap madness.

	* ftape/obispo/obispo-public.c: Fix the software poll thingy

	* ftape/obispo/obispo-hw-int.S: Removed any real code. The ftape
 	driver already does irq locking properly.

	* ftape/trakker/trakker.c: New function trakker_write_buffer() to
 	support handling of hard errors.

	* ftape/zftape/zftape-init.c, ftape/zftape/zftape-ctl.c: Get rid
 	of mmap madness and implement the new FTFMT_MAGIC format command.

	* include/linux/mtio.h: Added new MTIOCFTFORMAT sub-command:
 	FTFMT_API_VERSION and add a new field "fmt_magic" to the
 	mtftformat struct. FTFMT_API_VERSION should return the FTFMT_MAGIC
 	number in the fmt_magic component.

	* include/linux/ftape-vendors.h, ftape/lowlevel/ftape-io.c: Add
 	new flag FT_CANT_FORMAT. At least the Ditto MAX drive happily
 	switches to format mode and write garbage to the tape as it can't
 	really format a cartridge, but doesn't properly generate an error
 	if one attempts to do so.

	* ftape/internal/fdc-internal.c:
	Undo change and call pause_tape in the main fdc_isr() function.

Sun May 10 13:41:17 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Makefile: removed the contrib/ tree from the kernel driver
 	distribution and make it a separate package

	* include/linux/zftape.h, include/linux/qic117.h,
 	include/linux/ftape.h, include/linux/ftape-vendors.h,
 	ftape/zftape/zftape_syms.c, ftape/zftape/zftape-write.h,
 	ftape/zftape/zftape-write.c, ftape/zftape/zftape-vtbl.h,
 	ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-rw.h,
 	ftape/zftape/zftape-rw.c, ftape/zftape/zftape-read.h,
 	ftape/zftape/zftape-read.c, ftape/zftape/zftape-inline.h,
 	ftape/zftape/zftape-init.h, ftape/zftape/zftape-init.c,
 	ftape/zftape/zftape-eof.h, ftape/zftape/zftape-eof.c,
 	ftape/zftape/zftape-ctl.h, ftape/zftape/zftape-ctl.c,
 	ftape/zftape/zftape-buffers.h, ftape/zftape/zftape-buffers.c,
 	ftape/zftape/Makefile, ftape/trakker/trakker.h,
 	ftape/trakker/trakker.c, ftape/trakker/trakker-mmap.c,
 	ftape/setup/ftape-setup.c, ftape/obispo/obispo.h,
 	ftape/obispo/obispo-public.c, ftape/obispo/obispo-mmap.h,
 	ftape/obispo/Attic/obispo-mmap.c, ftape/obispo/obispo-lib.o.gz.uu,
 	ftape/obispo/obispo-hw-int.S, ftape/obispo/obispo-api.h,
 	ftape/obispo/TODO, ftape/obispo/README, ftape/obispo/Makefile,
 	ftape/obispo/ChangeLog, ftape/obispo/COPYING,
 	ftape/obispo/.cvsignore, ftape/lowlevel/ftape_syms.c,
 	ftape/lowlevel/ftape-write.h, ftape/lowlevel/ftape-write.c,
 	ftape/lowlevel/ftape-tracing.h, ftape/lowlevel/ftape-tracing.c,
 	ftape/lowlevel/ftape-rw.h, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-real-tracing.h, ftape/lowlevel/ftape-read.h,
 	ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-proc.c,
 	ftape/lowlevel/ftape-io.h, ftape/lowlevel/ftape-io.c,
 	ftape/lowlevel/ftape-init.h, ftape/lowlevel/ftape-init.c,
 	ftape/lowlevel/ftape-format.h, ftape/lowlevel/ftape-format.c,
 	ftape/lowlevel/ftape-fake-tracing.h, ftape/lowlevel/ftape-ecc.h,
 	ftape/lowlevel/ftape-ecc.c, ftape/lowlevel/ftape-ctl.h,
 	ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/ftape-calibr.h,
 	ftape/lowlevel/ftape-calibr.c, ftape/lowlevel/ftape-buffer.h,
 	ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/ftape-bsm.h,
 	ftape/lowlevel/ftape-bsm.c, ftape/lowlevel/fdc-isr.h,
 	ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-io.c, ftape/internal/fdc-internal.h,
 	ftape/internal/fdc-internal.c, ftape/internal/fc-10.h,
 	ftape/internal/fc-10.c, ftape/Makefile, Rules.make, MCONFIG: Added
 	parport changes

Wed May  6 17:47:42 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/fdc-isr.c: Never mark overrun errors as hard
 	error.

	* ftape/zftape/zftape-write.h, ftape/zftape/zftape-write.c:
 	Finally Implemented hard write error recovery.

	* ftape/zftape/zftape-vtbl.c: Fixed a bug where the vtbl list
 	probably wasn't initialized correctly.

	* ftape/zftape/zftape-rw.h, ftape/zftape/zftape-rw.c,
 	ftape/zftape/zftape-read.h, ftape/zftape/zftape-read.c,
 	ftape/zftape/zftape_syms.c, ftape/zftape/zftape-init.h,
 	ftape/zftape/zftape-init.c: Removed the compression nonsense.

Tue May  5 23:09:43 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.h, ftape/zftape/zftape-ctl.c: Remove
 	compression support

	* ftape/zftape/zftape-buffers.h, ftape/zftape/zftape-buffers.c:
 	Add zft_vmalloc_once(&ptr) function. Only allocate if ptr == NULL

	* ftape/zftape/Makefile: Remove zftape_syms.o file.

	* ftape/lowlevel/ftape-write.h, ftape/lowlevel/ftape-write.c:
 	Implement helper function for hard error recovery.

	* ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-rw.h,
 	ftape/lowlevel/ftape-rw.c: Change to use a linked ring-list for
 	ftape's cyclic dma buffer list.

	* ftape/lowlevel/ftape_syms.c: Need to export fdc_pause_tape() and
 	fdc_disable/enable_irq()

	* ftape/lowlevel/ftape-format.c: Change to use a linked ring-list
 	for ftape's cyclic dma buffer list. Untested yet.

	* ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/ftape-ctl.c,
 	ftape/lowlevel/ftape-buffer.c: Change to use a linked ring-list
 	for ftape's cyclic dma buffer list.

	* ftape/lowlevel/ftape-bsm.c: Need to correct the cashed bad
 	sector map and the bsm_hash_ptr after adding new sectors.

	* ftape/lowlevel/fdc-isr.h, ftape/lowlevel/fdc-isr.c: Export the
 	pause_tape(). It is now called delayed after fdc_isr() has
 	completed.

	* ftape/lowlevel/fdc-io.h, ftape/lowlevel/fdc-io.c: Always call
 	fdc_interrupt_wait() with the interrupt
 	disabled. fdc_interrupt_wait() enables the interrupt again right
 	after putting the current thread on the wait list.

	* include/linux/zftape.h: Remove the minor device bits that flag
 	use of compression.

	* ftape/trakker/trakker.h, ftape/trakker/trakker.c,
 	ftape/trakker/trakker-mmap.c: Incorporate Jochen's latest changes

	* ftape/obispo/obispo.h, ftape/obispo/obispo-public.c: Don't allow
 	software polling while an interrupt is being executed on another
 	CPU. Don't really disable interrupts by calling
 	_fc_par_handle_int(NULL) as we'll loose interrupts in that case.

	* ftape/internal/fdc-internal.c: fdc-io now uses a linked buffer
 	list instead of a static array. Move the call to QIC_PAUSE or
 	MICRO_STEP_PAUSE out of fdc_isr() to the low-level fdc interrupt
 	routines. Needed because of MS obispo lib's software polling.

	* ftape/Makefile, MCONFIG: Removed CONFIG_ZFT_COMPRESSOR

Sun Apr 26 20:32:17 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/fdc-io.c: Leave interrupts disable until after
 	the dma controller AND fdc have been programmed.

	* ftape/lowlevel/ftape-read.c: No special case for empty segments
 	in ftape_read()

	* include/linux/ftape.h: Move some global "#if kernel_version"
 	conditionals to this file
	(i.e. kerneld <-> kmod, check presence of __init_data/func macros)

	* include/linux/ftape-vendors.h: Change utopic 120 ips value for
 	fast wind speed of Ditto Max values. It's actually no more than 85
 	ips, but: the data density of Ditto Max tapes is much higher than
 	for QIC-3020 tapes.

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape-read.c,
 	ftape/zftape/zftape-ctl.c: Use kmod instead of kerneld for newest
 	kernels.

	* ftape/zftape/zftape-init.c: Need to increment filep->f_count
 	when using mmap(). Thanks, Jochen.

	* ftape/trakker/trakker.h, ftape/trakker/trakker.c: Included
 	Jochen's fixes. Try to change according to my new SMP fixes. Hey,
 	Jochen, there is work for you.

	* ftape/lowlevel/ftape-rw.c, ftape/lowlevel/ftape-read.c,
 	ftape/lowlevel/ftape-proc.c, ftape/lowlevel/ftape-io.h,
 	ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-format.c,
 	ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/ftape-ctl.c,
 	ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-io.c: Fix Ditto Max timings. Rework the isr()
 	<-> non-IRQ level synchronization. Should work now with SMP
 	machines. Hopefully ... At least, it was foobar before. Maybe I
 	got rid of either the foo or the bar.

	* ftape/internal/fdc-internal.c: Introduce spin-locks. Use kmod
 	instead of kerneld for kernels > 2.1.<something>

Tue Apr 21 08:24:55 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Makefile: Exclude the Doc sub-directory for hacker releases.

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape-read.h,
 	ftape/zftape/zftape-read.c, ftape/zftape/zftape-ctl.h,
 	ftape/zftape/zftape-ctl.c: Introduce the zft_vtbl_read flag to
 	ease switching between raw and qic mode when the volume table
 	segment has been modified in raw mode.

	* ftape/lowlevel/ftape-read.c: Added max_floppy_side off by one
 	compensation.

Wed Mar 18 11:18:21 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-read.c: Remove the verbosity of the driver
 	with tracing == 4

	* ftape/zftape/zftape-init.c: vma->vm_dentry was replace by
 	vma->vm_file with 2.1.89

	* ftape/lowlevel/ftape-read.c: Return -EIO not -ENODATA on ECC
 	failure

	* ftape/zftape/zftape-init.c: vma->vm_dentry doesn't exist any
 	longer and was replaced by vma->vm_file with 2.1.89

Sat Mar 14 03:07:34 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape-read.c,
 	ftape/zftape/zftape-read.h, ftape/zftape/zftape-ctl.h,
 	ftape/zftape/zftape-ctl.c: New zft_read_volume_table()
 	function. When reading and writing segments in raw mode with the
 	MTIOCRD/WRFTSEG ioctl's, don't really read the header segment but
 	return it's cached version
	(i.e. zftape->hseg_buf). Mark the volume table dirty if segment 2
 	was touched, either be the ioctl or by zft_write()

	* ftape/lowlevel/ftape-read.c:
	ftape->used_header_segment was off by one

Thu Mar 12 18:39:42 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h: Update the timestamp

	* ftape/lowlevel/ftape_syms.c: Need to export
 	ftape_get_drive_status().

	* ftape/lowlevel/ftape-init.c: No need to call udelay_calibrate()
 	any longer

	* ftape/lowlevel/ftape-rw.h, ftape/lowlevel/ftape-ctl.h,
 	ftape/lowlevel/ftape-rw.c, ftape/lowlevel/ftape-ctl.c: Fix
 	open/close stuff with Ditto Max. New reverse seek strategy with
 	Ditto Max.

	* ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.c,
 	ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-io.h,
 	ftape/lowlevel/ftape-calibr.h, ftape/lowlevel/ftape-calibr.c: New
 	calibration code. Use jiffies ONLY. Get rid of ftape_udelay and
 	use udelay()

	* ftape/zftape/zftape-ctl.c: Fix the lock/unlock stuff with Ditto
 	Max

	* ftape/zftape/zftape-init.c: Forgot parameter names in
 	declaration of zft_seek()

	* ftape/obispo/obispo-public.c: Fix a serious bug in
 	get_dma_residue(): NOT buff->remaining holds the number of sectors
 	that should have been transfered, but
 	buff->sector_count. buff->remaining holds the number of sectors
 	'til end of segment, also counting bad sectors.

	* ftape/lowlevel/fdc-io.c:
	Remove "BUG:" message for recursive calls of fdc_reset(): there is
	always one cleanup reset when disabling the fdc 'cause non Ditto EZ
	controllers don't assert a polling interrupt without any selected
	floppy drive.

	* ftape/obispo/obispo-public.c: Reduce a trace level back to ft_t_flow.

	* ftape/lowlevel/fdc-io.c: Called fdc->ops->probe() with the wrong
 	device count. Fixed.

	* ftape/lowlevel/ftape-real-tracing.h: Define TRACE_SEL(minor) as
 	FTAPE_SEL(minor) to get only the three lsbits

	* ftape/lowlevel/fdc-isr.c: Call __fdc_issue_command() not
 	__fdc_command()

	* ftape/lowlevel/fdc-io.c: Forgot to change back an increased
 	trace level

	* ftape/lowlevel/ftape-io.c: Fix a bug in ftape_sleep(timeout). If
 	1 tick < timeout < 2 ticks then ftape_sleep wouldn't have slept at
 	all if jifffies was just about to wrap around. Therefore we have
 	to increase timeout by one tick to make sure that ftape_sleep()
 	sleeps at all.

	* ftape/lowlevel/ftape-read.c: Don't return -ENODATA on ECC
 	failure, but -EIO.

	* ftape/lowlevel/ftape-ctl.c: Add a comment

	* ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-io.c: Fix a bug where fdc_reset() was called
 	recursively. Issue a sense interrupt status for stray
 	interrupts. Is sometimes necessary, or the next command might fail
 	(was the reason for the infinite recursion of fdc_reset()). Add a
 	check that the pause command issued by the isr() succeeds by
 	rememebering the floppy track to seek to and comparing it with the
 	result of the sense interrupt status command.

	* ftape/zftape/zftape-init.c, ftape/zftape/zftape-ctl.h,
 	ftape/lowlevel/ftape-init.h: Don't try to be more clever than user
 	level programs about blocking SIGPIPE. Add a dummy llseek()
 	function that returns -ESPIPE.

	* ftape/trakker/trakker.h, ftape/trakker/trakker.c,
 	ftape/obispo/obispo.h, ftape/obispo/obispo-public.c: Use
 	fdc->irq_level instead of obispo/trakker->irq_level

Mon Mar  9 15:19:45 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-rw.c: Remove "#if TESTING" flags around
 	handling of Ditto fast seek problems.

	* ftape/lowlevel/ftape-format.c: Call cli()/sti() when starting to
 	format, not disable/enable_irq()

	* ftape/lowlevel/fdc-isr.c: Delay the sti() if formatting
 	cartridges. Ugly, but formatting floppy tape cartridges is crazy
 	anyways.

	* ftape/obispo/obispo-public.c: Don't need the TRACE stuff for
 	enable/disable_irq()

	* ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-bsm.c,
 	ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.c: Some TRACE and
 	test case statements

	* ftape/lowlevel/ftape-io.h, ftape/lowlevel/ftape-io.c: Added
 	experimental ftape_sleep_a_tick() macro that sleeps at least a
 	tick and thus gives control back to the scheduler. delays of less
 	than a tick are busy loops and eat cpu cycles.

	* ftape/lowlevel/ftape-rw.c, ftape/lowlevel/ftape-ctl.h,
 	ftape/lowlevel/ftape-ctl.c: Change the reverse seek code to cope
 	with Iomega Ditto poor reverse seek from EOT behavior.

	* ftape/zftape/zftape-rw.c: In zft_calc_seg_byte_coord() tape_pos
 	refers to the parameter of the function, not to zftape->tape_pos

	* ftape/zftape/zftape-ctl.c: Added  another TRACE statement

	* ftape/obispo/obispo-public.c: Started to implement parport
 	sharing with the printer driver (for 2.1.* with parport driver
 	ONLY)

	* ftape/obispo/TODO: Updated to reflect the latest changes.

Fri Mar  6 06:04:31 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.c: Correctly initialize zftape->unit
 	when allocating the zftape structure

	* ftape/lowlevel/ftape-real-tracing.h: Don't refer to
 	zftape->ftape->drive_sel for tracing purposes, but to
 	zftape->unit. zftape->ftape might be zero.

	* ftape/zftape/zftape-init.c, ftape/zftape/zftape-ctl.c: Fix some
 	typos for 2.0.*

	* ftape/trakker/trakker.c, ftape/trakker/trakker-mmap.c: Need to
 	include <linux/mm.h> for fancy mmap stuff

	* ftape/obispo/obispo.h: Remove obsolete CONFIG_FT_OBISPO_SELECT
 	define

	* ftape/obispo/obispo-public.c: Add protection against spurious
 	interrupts to obispo_interrupt() routine.

	* ftape/lowlevel/ftape-proc.c: Hack around missing
 	proc_dir_operations in 2.0.*

	* ftape/lowlevel/ftape-init.c: Use ft_tracings as module parms
 	also for 2.0.* kernels

	* ftape/lowlevel/fdc-io.h: Must check for fdc_infos[sel] != NULL
 	in ft_find_fdc_by_irq() !

Thu Mar  5 19:34:30 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.c: Initialize "zftape->unit" (clone of
 	the minor device number) only after checking whether a "mode
 	switch" between "raw mode" and "qic mode" has occured.

	* ftape/obispo/obispo-public.c: Switch between "FDC_TRACING" and
 	"GLOBAL_TRACING" as appropriate

	* ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-io.c: Don't auto-probe wildly if the user
 	didn't specify a low level driver for a specific device id. This
 	makes the mapping of the tape devices attached to the system to
 	the logical device ids deterministic which is a good thing.

	* ftape/lowlevel/ftape-ctl.c: No longer necessary to call
 	catch_stray_interrupts(). Only call ftape_get_drive_status() twice
 	if no cartridge is present (after attempting to close the door)

	* ftape/lowlevel/ftape-format.c: Change some cli() statements to
 	disable_irq() functions.

	* ftape/lowlevel/ftape-tracing.c, ftape/lowlevel/ftape-tracing.h,
 	ftape/lowlevel/ftape-real-tracing.h: Add the device id (0,1,2,3 or
 	4) to the TRACE messages. "4" means not belonging to specific tape
 	device, but the core driver.

	* ftape/internal/fdc-internal.c: Don't declare fdc_detect() as
 	"__init_func()" any more.

Wed Mar  4 23:22:04 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/qic117.h, include/linux/ftape-vendors.h,
 	include/linux/ftape.h, ftape/zftape/zftape-vtbl.c,
 	ftape/zftape/zftape-write.c, ftape/zftape/zftape-eof.c,
 	ftape/zftape/zftape-inline.h, ftape/zftape/zftape-read.c,
 	ftape/zftape/zftape-ctl.h, ftape/zftape/zftape-ctl.c,
 	ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-read.c,
 	ftape/lowlevel/ftape-proc.c, ftape/lowlevel/ftape-io.h,
 	ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-format.c,
 	ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/ftape-ctl.c,
 	ftape/lowlevel/ftape-bsm.c, ftape/lowlevel/fdc-isr.c,
 	ftape/lowlevel/fdc-io.h, ftape/lowlevel/fdc-io.c: Minor fixes and
 	beginning Ditto Max support.

	* ftape/obispo/obispo-hw-int.S: Added a comment

Tue Mar  3 15:40:02 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.h, ftape/zftape/zftape-ctl.c: Add
 	support for special Ditto Max tape operations
 	lock/unlock/load/unload/setpart

	* ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-ctl.h: Geeh!! 
	Help! the "fdc_info" struct and "struct ftape_struct" both had a
 	"current_cylinder" component and everything was hosed up. Took 4
 	hours until I found this error :-(

	* ftape/lowlevel/ftape-ctl.c: Allocation of the ftape_struct was
 	somewhat broken.

	* ftape/lowlevel/ftape-calibr.c: Remove silly cli()/sti() pair
 	around calibrate code. Sad. Would be nice to disable all interrupt
 	except the timer for a short while. Heavy interrupt traffic has a
 	bad impact on the calibration. Maybe revert to the old scheme. But
 	the new one is much nicer as it is highly portable, no longer
 	meddling with hardware timing chips.

	* ftape/lowlevel/fdc-io.c: Fixed silly bug where a parameter was
 	called fdc_info and mixed with the global fdc_infos struct

	* ftape/lowlevel/ftape-real-tracing.h: Cope with the
 	CONFIG_FT_NO_TRACE_AT_ALL switch

	* ftape/zftape/zftape-vtbl.c: zftape->vtbl has to be initialized
 	with INIT_LIST_HEAD after allocating the zftape_struct

	* ftape/zftape/zftape-init.c: ftape_kfree() expect a pointer to
 	the pointer to be freed.

	* ftape/zftape/zftape-ctl.c: Check for zftape->ftape != NULL
 	before accessing components of the ->ftape component.

	* ftape/zftape/zftape_syms.c, ftape/zftape/zftape-write.h,
 	ftape/zftape/zftape-write.c, ftape/zftape/zftape-vtbl.h,
 	ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-rw.h,
 	ftape/zftape/zftape-rw.c, ftape/zftape/zftape-read.h,
 	ftape/zftape/zftape-read.c, ftape/zftape/zftape-inline.h:
 	Transformed the entire stuff to support multiple tape drives
 	simultanously. Doesn't work yet, compiles, though.

	* ftape/zftape/zftape-inline.h: file zftape-inline.h was initially
 	added on branch FTAPE_4_XX_ALPHA_1_OBISPO.

	* ftape/zftape/zftape-init.h, ftape/zftape/zftape-init.c,
 	ftape/zftape/zftape-ctl.h, ftape/zftape/zftape-eof.c,
 	ftape/zftape/zftape-eof.h, ftape/zftape/zftape-ctl.c,
 	ftape/zftape/zftape-buffers.h, ftape/zftape/zftape-buffers.c,
 	ftape/trakker/trakker.h, ftape/trakker/trakker.c,
 	ftape/trakker/trakker-mmap.c, ftape/obispo/obispo.h,
 	ftape/obispo/obispo-mmap.h, ftape/obispo/obispo-public.c,
 	ftape/obispo/Attic/obispo-mmap.c, ftape/lowlevel/ftape_syms.c,
 	ftape/lowlevel/ftape-write.h, ftape/lowlevel/ftape-tracing.h,
 	ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-rw.h,
 	ftape/lowlevel/ftape-tracing.c, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-read.h, ftape/lowlevel/ftape-real-tracing.h:
 	Transformed the entire stuff to support multiple tape drives
 	simultanously. Doesn't work yet, compiles, though.

	* ftape/lowlevel/ftape-real-tracing.h: file ftape-real-tracing.h
 	was initially added on branch FTAPE_4_XX_ALPHA_1_OBISPO.

	* ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-io.h,
 	ftape/lowlevel/ftape-proc.c, ftape/lowlevel/ftape-io.c,
 	ftape/lowlevel/ftape-format.h, ftape/lowlevel/ftape-init.c,
 	ftape/lowlevel/ftape-fake-tracing.h,
 	ftape/lowlevel/ftape-format.c: Transformed the entire stuff to
 	support multiple tape drives simultanously. Doesn't work yet,
 	compiles, though.

	* ftape/lowlevel/ftape-fake-tracing.h: file ftape-fake-tracing.h
 	was initially added on branch FTAPE_4_XX_ALPHA_1_OBISPO.

	* ftape/lowlevel/ftape-ecc.h, ftape/lowlevel/ftape-ecc.c,
 	ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/ftape-calibr.h,
 	ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/ftape-calibr.c,
 	ftape/lowlevel/ftape-buffer.h, ftape/lowlevel/ftape-buffer.c,
 	ftape/lowlevel/ftape-bsm.h, ftape/lowlevel/ftape-bsm.c,
 	ftape/lowlevel/fdc-isr.h, ftape/lowlevel/fdc-isr.c,
 	ftape/lowlevel/fdc-io.h, ftape/lowlevel/fdc-io.c,
 	ftape/internal/fdc-internal.c, ftape/internal/fc-10.c,
 	ftape/internal/fc-10.h: Transformed the entire stuff to support
 	multiple tape drives simultanously. Doesn't work yet, compiles,
 	though.

Thu Feb 26 17:48:18 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-io.c: Don't try to lock/unlock the door if
 	no cartridge is present. After opening/closing the door place a
 	call ftape_get_drive_status() to update the cartridge present
 	flag. Also, especially when closing the door, wait one second and
 	then poll the drive until the door really has closed. The tape
 	drive annoyingly remains in the "ready" state when the door is
 	being closed.

	* ftape/lowlevel/ftape-ctl.c: Don't try to lock/unlock the door
 	before closing it. locking can only be attempted when the drive is
 	ready and a cartridge is present, though due to a bug in the
 	firmware it is sometimes possible to lock an open door.

	* ftape/zftape/zftape-ctl.c: Clear the force lock switch with
 	mt_offl and mt_reset

	* include/linux/qic117.h: Corrected drive state mask for
 	TOGGLE_LOCK command

	* include/linux/qic117.h, include/linux/ftape.h,
 	include/linux/ftape-vendors.h, ftape/zftape/zftape-ctl.c,
 	ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-proc.c,
 	ftape/lowlevel/ftape-io.h, ftape/lowlevel/ftape-io.c,
 	ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-io.c: Changes to support the Ditto Max with its
 	EZ controller. Door locking and partition support for this drive.

Tue Feb 17 18:48:10 1998  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/fdc-isr.c: Fixed a silly bug introduced while
 	trying to cope with overrun errors at the end of a segment with
 	zero dma residue.

Sat Dec 13 14:09:44 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* modules/.cvsfun, include/linux/ftape.h,
 	ftape/zftape/zftape-init.c, ftape/zftape/zftape-init.h,
 	ftape/zftape/zftape-ctl.h, ftape/zftape/zftape-ctl.c,
 	ftape/trakker/trakker.h, ftape/trakker/trakker.c,
 	ftape/trakker/README, ftape/trakker/trakker-mmap.c,
 	ftape/setup/ftape-setup.c, ftape/lowlevel/ftape-write.c,
 	ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-tracing.c, ftape/lowlevel/ftape-tracing.h,
 	ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-io.c,
 	ftape/lowlevel/ftape-proc.c, ftape/lowlevel/ftape-init.c,
 	ftape/lowlevel/ftape-init.h, ftape/lowlevel/ftape-ctl.c,
 	ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/fdc-isr.h,
 	ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/fdc-isr.c,
 	ftape/lowlevel/fdc-io.h, ftape/lowlevel/fdc-io.c,
 	ftape/internal/fdc-internal.c, ftape/internal/fdc-internal.h,
 	ftape/internal/README, ftape/README, ftape/Makefile, Rules.make:
 	Merged the changes form another branch

	* MCONFIG: No fc-10 module any longer, FT_NR_BUFFERS no longer
 	needed

	* MCONFIG: Support for obispo options.

	* Rules.make: Don't bail out if a dependency file cannot be
 	created. Add rules to produce assembly %.s files form %.S files.

	* include/linux/ftape.h, ftape/trakker/trakker.h,
 	ftape/trakker/trakker-mmap.c, ftape/trakker/trakker.c,
 	ftape/trakker/README: Strarted to implement multiple tape drive
 	support. Very incomplete.

	* ftape/trakker/README: file README was initially added on branch
 	FTAPE_4_XX_ALPHA_1_OBISPO.

	* ftape/setup/ftape-setup.c, ftape/obispo/README: Strarted to
 	implement multiple tape drive support. Very incomplete.

	* ftape/obispo/README: file README was initially added on branch
 	FTAPE_4_XX_ALPHA_1_OBISPO.

	* ftape/lowlevel/ftape-tracing.h, ftape/lowlevel/ftape_syms.c,
 	ftape/lowlevel/ftape-tracing.c, ftape/lowlevel/ftape-ctl.h,
 	ftape/internal/fdc-internal.h, ftape/internal/README,
 	ftape/internal/fdc-internal.c: Strarted to implement multiple tape
 	drive support. Very incomplete.

	* ftape/internal/README: file README was initially added on branch
 	FTAPE_4_XX_ALPHA_1_OBISPO.

	* ftape/Makefile, ftape/README: Strarted to implement multiple
 	tape drive support. Very incomplete.

	* ftape/README: file README was initially added on branch
 	FTAPE_4_XX_ALPHA_1_OBISPO.

	* ftape/obispo/obispo-public.c, ftape/obispo/Makefile,
 	ftape/obispo/obispo-hw-int.S: New version of the api library that
 	moves the irq enable/disable stuff out of the api. Will help to
 	support SMP systems.

	* ftape/obispo/obispo-hw-int.S: file obispo-hw-int.S was initially
 	added on branch FTAPE_4_XX_ALPHA_1_OBISPO.

Thu Dec 11 14:49:51 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/obispo/obispo.h, ftape/obispo/obispo-public.c,
 	ftape/obispo/obispo-mmap.h, ftape/obispo/Attic/obispo-mmap.c,
 	ftape/obispo/obispo-lib.o.gz.uu, ftape/obispo/obispo-api.h: switch
 	0603 API

Mon Dec  8 18:37:25 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.h, ftape/zftape/zftape-init.c,
 	ftape/zftape/zftape-ctl.c, ftape/zftape/zftape-init.h: Merged in
 	signal stuff changes

	* ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-tracing.h,
 	ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-tracing.c,
 	ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-proc.c, ftape/lowlevel/ftape-init.h,
 	ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-init.c,
 	ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/ftape-buffer.c,
 	ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/fdc-isr.h,
 	ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-io.c: Changes in the signal stuff for 2.1.68ff

Fri Dec  5 17:59:30 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-init.c, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-init.c,
 	ftape/lowlevel/ftape-init.h, ftape/lowlevel/ftape-ctl.c,
 	ftape/lowlevel/fdc-io.c: Tried again to cope with the changed
 	signal interface of 2.1.68

Thu Dec  4 10:56:17 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-init.c, ftape/lowlevel/ftape-tracing.h,
 	ftape/lowlevel/ftape-init.h, ftape/lowlevel/ftape-ctl.c,
 	ftape/lowlevel/fdc-io.c: Account for changes in signal handling
 	stuff in 2.1.68

Sun Nov 30 19:09:51 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* modules/.cvsfun: file .cvsfun was initially added on branch
 	FTAPE_4_XX_ALPHA_1_OBISPO.

	* ftape/obispo/obispo-public.c, ftape/obispo/obispo.h,
 	ftape/obispo/obispo-mmap.h, ftape/obispo/Attic/obispo-mmap.c,
 	ftape/obispo/obispo-lib.o.gz.uu, ftape/obispo/obispo-api.h,
 	ftape/obispo/Makefile, ftape/obispo/TODO, ftape/obispo/ChangeLog,
 	ftape/obispo/COPYING, ftape/obispo/.cvsignore: added MS obispo
 	code

	* ftape/obispo/.cvsignore, ftape/obispo/obispo.h,
 	ftape/obispo/obispo-public.c, ftape/obispo/obispo-mmap.h,
 	ftape/obispo/Attic/obispo-mmap.c, ftape/obispo/obispo-lib.o.gz.uu,
 	ftape/obispo/obispo-api.h, ftape/obispo/Makefile,
 	ftape/obispo/TODO, ftape/obispo/ChangeLog, ftape/obispo/COPYING:
 	cvs fool

	* ftape/setup/ftape-setup.h, ftape/setup/.cvsignore,
 	ftape/setup/Makefile, ftape/setup/ftape-setup.c: Ftape kernel
 	command line configuration options

	* ftape/Makefile: Add trakker and internal and setup
 	subdirectories

	* MCONFIG: Add trakker configuration options

	* include/linux/ftape.h: Moved most of the configuration option
 	safe-guards to the sub-modules header files.

	* ftape/zftape/zftape-ctl.c: Need to call ftape_zap_read_buffers()
 	with active fdc_config_info

	* ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-rw.h,
 	ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-read.c,
 	ftape/lowlevel/ftape-read.h, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-proc.c,
 	ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/ftape-format.c,
 	ftape/lowlevel/ftape-init.c, ftape/lowlevel/ftape-calibr.c,
 	ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/ftape-buffer.c,
 	ftape/lowlevel/ftape-buffer.h, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.c,
 	ftape/lowlevel/Makefile: Changed to support multiple tape drive
 	without unloading of modules.

	* ftape/trakker/Makefile, ftape/trakker/trakker.c,
 	ftape/trakker/trakker.h, ftape/internal/fc-10.h,
 	ftape/internal/fdc-internal.c, ftape/internal/fdc-internal.h,
 	ftape/internal/Makefile, ftape/internal/fc-10.c,
 	ftape/internal/.cvsignore: Moved trakker and internal fdc code to
 	separate subdirs

Sun Nov 30 04:23:24 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/setup/ftape-setup.h, ftape/setup/.cvsignore,
 	ftape/setup/Makefile, ftape/setup/ftape-setup.c: Ftape kernel
 	command line configuration options

	* ftape/Makefile: Add trakker and internal and setup
 	subdirectories

	* MCONFIG: Add trakker configuration options

	* include/linux/ftape.h: Moved most of the configuration option
 	safe-guards to the sub-modules header files.

	* ftape/zftape/zftape-ctl.c: Need to call ftape_zap_read_buffers()
 	with active fdc_config_info

	* ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-rw.h,
 	ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-read.c,
 	ftape/lowlevel/ftape-read.h, ftape/lowlevel/ftape-rw.c,
 	ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-proc.c,
 	ftape/lowlevel/ftape-ctl.h, ftape/lowlevel/ftape-format.c,
 	ftape/lowlevel/ftape-init.c, ftape/lowlevel/ftape-calibr.c,
 	ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/ftape-buffer.c,
 	ftape/lowlevel/ftape-buffer.h, ftape/lowlevel/fdc-io.h,
 	ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.c,
 	ftape/lowlevel/Makefile: Changed to support multiple tape drive
 	without unloading of modules.

	* ftape/trakker/Makefile, ftape/trakker/trakker.c,
 	  ftape/trakker/trakker.h, ftape/internal/fc-10.h,
 	  ftape/internal/fdc-internal.c, ftape/internal/fdc-internal.h,
 	  ftape/internal/Makefile, ftape/internal/fc-10.c,
 	  ftape/internal/.cvsignore:
	Moved trakker and internal fdc code to separate subdirs

Sat Nov 29 02:30:02 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/Attic/fdc-internal.c: Moved to "internal" subdir

Fri Nov 28 19:06:21 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-write.c:
	Call zft_vmalloc_once() instead of vmalloc()

	* ftape/trakker/trakker-mmap.c, ftape/trakker/trakker.c,
 	  ftape/trakker/trakker.h, ftape/trakker/.cvsignore,
 	  ftape/trakker/Makefile:
	Moved to separate subdirectories

	* include/linux/ftape.h, ftape/zftape/zftape_syms.c,
 	  ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-write.c,
 	  ftape/zftape/zftape-rw.h, ftape/zftape/zftape-read.c,
 	  ftape/zftape/zftape-read.h, ftape/zftape/zftape-rw.c,
 	  ftape/zftape/zftape-ctl.c, ftape/zftape/zftape-init.h,
 	  ftape/zftape/zftape-buffers.c, ftape/lowlevel/Attic/trakker.c,
 	  ftape/lowlevel/Attic/trakker.h,
 	  ftape/lowlevel/Attic/trakker-mmap.c,
 	  ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-write.h,
 	  ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-read.h,
 	  ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-proc.c,
 	  ftape/lowlevel/ftape-ecc.c, ftape/lowlevel/ftape-buffer.c,
 	  ftape/lowlevel/ftape-buffer.h, ftape/lowlevel/fdc-isr.c,
 	  ftape/lowlevel/fdc-io.h, ftape/lowlevel/fdc-io.c,
 	  ftape/lowlevel/Attic/fdc-internal.c,
 	  ftape/lowlevel/Attic/fc-10.h, ftape/lowlevel/Attic/fc-10.c,
 	  ftape/lowlevel/Makefile, ftape/compressor/zftape-compress.c:
	Rewrote to get rid of silly double memcpy():

	user buffer -> deblock buffer -> dma buffer

	We now use

	user buffer -> dma buffer

	using an additional (fourth) dma buffer for the internal fdc verions;
	for parallel port drives this even reduces the amount of needed
	buffers by 29k.

	* ftape/Makefile: Add new trakker and fc-10 subdirectories

	* ftape/lowlevel/ftape-read.c:
	Forgot to rename ftape_read_segment_fraction() to ftape_read_segment()

	* ftape/zftape/zftape-write.c, ftape/zftape/zftape_syms.c,
 	  ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-rw.c,
 	  ftape/zftape/zftape-rw.h, ftape/zftape/zftape-read.c,
 	  ftape/zftape/zftape-read.h, ftape/zftape/zftape-ctl.c,
 	  ftape/zftape/zftape-init.h, ftape/zftape/zftape-buffers.c,
 	  ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-read.h,
 	  ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-write.h,
 	  ftape/lowlevel/ftape-read.c, ftape/lowlevel/fdc-io.h,
 	  ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/ftape-buffer.h,
 	  ftape/lowlevel/fdc-io.c, ftape/lowlevel/Attic/fdc-internal.c,
 	  ftape/lowlevel/Makefile, ftape/compressor/zftape-compress.c:	
	Change the fdc_ops interface such that we can benefit from the ECC
	co-processor of some of the parallel port drives. Change the entire
	dma-buffer stuff such that we no longer have to copy all data twice.

	Previous setup: userdata -> deblock_buffer -> dma_buffer

	New setup: userdata -> dma_buffer

	where one additional dma buffer is used to deblock the data. Similar
	for reading.

	* ftape/lowlevel/Attic/trakker-mmap.c,
 	  ftape/lowlevel/Attic/trakker.c, ftape/lowlevel/Attic/trakker.h,
 	  ftape/lowlevel/Attic/fc-10.c, ftape/lowlevel/Attic/fc-10.h:
	Moved into to separate sub-directories of $(TOP)/ftape/

	* ftape/lowlevel/Attic/trakker.c, ftape/lowlevel/ftape_syms.c,
 	  ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-read.c,
 	  ftape/lowlevel/ftape-ecc.c, ftape/lowlevel/fdc-io.h,
 	  ftape/lowlevel/fdc-io.c, ftape/lowlevel/Attic/fdc-internal.c:
	Modified so hardware ECC computation can be used. Seems to work, but
	needs cosmetic changes (fold it into the fdc_ops->read/write functions)

Tue Nov 25 02:02:37 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Doc/texi/ftape.texi, Doc/dvi/fix-makeinfo.sh, RELEASE-NOTES, include/linux/ftape.h:
	Bump version to 3.04d

Mon Nov 24 14:17:09 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h: Merged 3.04 bug fixes

Mon Nov 24 14:14:33 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h, ftape/zftape/zftape-vtbl.c,
 	  contrib/ftformat/ftfmt-tapelib.c,
 	  contrib/ftformat/ftfmt-options.c:
	Merged 3.04 bug fixes

	* ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-ctl.c:
	Merged 3.04 bug fixes

	* contrib/ftformat/ftformat.c, contrib/ftformat/ftfmt-tapelib.c,
 	  contrib/ftformat/ftfmt-tapelib.h,
 	  contrib/ftformat/ftfmt-options.c:
	Merged msync bug fixes

	* include/linux/ftape.h:
	exchange #elsif by #elif. Why didn't cpp complain?

	* ftape/zftape/zftape-vtbl.c:
	Need to call zft_reset_position() when overwriting old volumes at BOT

Sun Nov 23 21:07:28 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/ftfmt-tapelib.c:
	The use of msync() was completely broken. As the man-page correctly
	states the start of the to-be-synced area must be a multiple of
	page-size. Looking at the Linux msync implementation reveals that
	always entire pages are synced. The previous setup would fail until
	accidentally the start pointer given to msync() a multiple of
	PAGE_SIZE. And then the following PAGE_SIZE bytes would have been
	synced with the parport drive which would lead to wrong results when
	more than one buffer was needed for a tape track (i.e. TR-3 catridges)

	* contrib/ftformat/ftfmt-options.c:
	Error messages were misleading when giving wrong arguments the -M switch

Sat Nov 22 17:09:24 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* MCONFIG:
	Enable CONFIT_FT_PROC_FS. This is alpha software so we are allowed to
	cause kernel Oopses. Enable CONFIG_FT_FULL_DEBUG as well.

Fri Nov 21 11:39:14 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/fdc-io.c:
	If fdc_register() fails when allocating the buffers, then deinstall
	the fdc-ops also, otherwise the next attempt to register fdc
	operations will fail.

Sun Nov 16 15:18:44 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/compressor/zftape-compress.c:
	Include the ftape version in the load banner

	* include/linux/ftape.h, Doc/texi/ftape.texi, Doc/dvi/fix-makeinfo.sh, RELEASE-NOTES:
	Update version to 3.04c

	* ftape/lowlevel/fdc-io.c: fdc_probe(): undo previous change :-(

Sat Nov 15 03:30:55 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* patches/2.x.x/floppy.c.dif, include/linux/ftape.h,
 	  ftape/zftape/zftape-ctl.c, ftape/lowlevel/ftape-write.c,
 	  ftape/lowlevel/ftape-format.c, contrib/scripts/texi2www,
 	  contrib/ftformat/ftformat.c, contrib/ftformat/ftfmt-tapelib.h,
 	  contrib/ftformat/ftfmt-tapelib.c, Doc/texi/ftape.texi,
 	  Doc/dvi/fix-makeinfo.sh, RELEASE-NOTES:
	Included ftape-3.04b bugfixes.

Fri Nov 14 18:13:03 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-ctl.c: Fix a typo.

	* ftape/lowlevel/ftape-write.c:
	Be careful to loop_until_writes_done() when switching from "writing"
	to "deleting" and vice versa.

	* ftape/lowlevel/ftape-format.c, contrib/ftformat/ftfmt-tapelib.c:
	wait_segment() may fail sometimes at the end of a tape track. Until I
	know why I treat it as a bad segment.

	* contrib/scripts/texi2www: No, it doesn't work with perl-4

	* ftape/zftape/zftape-ctl.c:
	Only the superuser may send raw qic-117 commands to the drive, the
	MTIOCFTFMT ioctl need not test the write protect bit except when
	starting to format a tape track.

	* ftape/lowlevel/fdc-io.c:
	fdc_probe(): the DUMPREGS has a result length of 10, not 1.

	* contrib/ftformat/ftformat.c, contrib/ftformat/ftfmt-tapelib.h,
 	  contrib/ftformat/ftfmt-tapelib.c:
	Handle those cases properly where the tape drive wrongly detects a
	cartridge type it can't write to: open in O_RDONLY mode first, switch
	to O_RDWR mode after sending the "set rate of format" command to the
	tape drive.

	* patches/2.x.x/floppy.c.dif:
	The previous floppy.c patch was broken, causing the floppy driver to
	release i/o regions it never had allocated.

	* include/linux/ftape.h, Doc/texi/ftape.texi,
 	  Doc/dvi/fix-makeinfo.sh, RELEASE-NOTES:
	Update to version 3.04b

Thu Nov 13 23:44:25 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/fdc-internal.c:
	Some more functions could be declared "static"

	* RELEASE-NOTES, ChangeLog:
	Add changes for new 4.xx development version

Thu Nov 13 23:11:01 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-init.c, ftape/lowlevel/trakker.h,
 	  ftape/lowlevel/trakker.c, ftape/lowlevel/trakker-mmap.c,
 	  ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape_syms.c,
 	  ftape/lowlevel/ftape-rw.c, ftape/lowlevel/ftape-read.c,
 	  ftape/lowlevel/ftape-format.c, ftape/lowlevel/ftape-init.c,
 	  ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/fdc-isr.h,
 	  ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/fdc-isr.c,
 	  ftape/lowlevel/fdc-io.h, ftape/lowlevel/fdc-io.c,
 	  ftape/lowlevel/fdc-internal.c, ftape/lowlevel/fc-10.c,
 	  ftape/lowlevel/Makefile, ftape/Configure.help.ftape,
 	  ftape/Config.in, Rules.make, README.TRAKKER, MCONFIG:
	Add Jochen Hoenicke's changes to support the Colorado Trakker

	* ftape/zftape/zftape-init.c, ftape/lowlevel/trakker.h,
 	  ftape/lowlevel/trakker.c:
	Initial revision of Olaf Hoenicke's changes to support the Colorado
	trakker

	* ftape/lowlevel/trakker.c:
	file trakker.c was initially added on branch FTAPE_4_XX_PARALLEL.

	* ftape/lowlevel/trakker.h:
	file trakker.h was initially added on branch FTAPE_4_XX_PARALLEL.

	* ftape/lowlevel/trakker-mmap.c:
	Initial revision of Olaf Hoenicke's changes to support the Colorado
	trakker

	* ftape/lowlevel/trakker-mmap.c:
	file trakker-mmap.c was initially added on branch FTAPE_4_XX_PARALLEL.

	* ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-write.c,
 	  ftape/lowlevel/ftape-rw.c, ftape/lowlevel/ftape-init.c,
 	  ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-ctl.c,
 	  ftape/lowlevel/ftape-format.c, ftape/lowlevel/ftape-buffer.c,
 	  ftape/lowlevel/fdc-isr.h, ftape/lowlevel/fdc-io.h,
 	  ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-internal.c,
 	  ftape/lowlevel/fdc-io.c, ftape/lowlevel/fc-10.c:
	Initial revision of Olaf Hoenicke's changes to support the Colorado
	trakker

	* ftape/lowlevel/fdc-internal.c:
	file fdc-internal.c was initially added on branch FTAPE_4_XX_PARALLEL.

	* ftape/lowlevel/Makefile, ftape/Configure.help.ftape,
 	  ftape/Config.in, Rules.make, README.TRAKKER:
	Initial revision of Olaf Hoenicke's changes to support the Colorado
	trakker

	* README.TRAKKER:
	file README.TRAKKER was initially added on branch FTAPE_4_XX_PARALLEL.

Wed Nov 12 22:33:59 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* Release of ftape-3.04a (bug fix)
	
	* RELEASE-NOTES: update for release of 3.04a

	* BUGS:
	Add "Harry G. McGavran Jr." <hgm@lanl.gov> reported that my texi2www
	doesn't work for perl-4 and perl-5.004

Tue Nov 11 15:06:46 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* Doc/texi/ftape.texi, Doc/dvi/fix-makeinfo.sh, Doc/dvi/Makefile:
	Bump version to 3.04a

	* ftape/lowlevel/ftape-ctl.c:
	Try to compensate a bug in the HP Colorado T3000's firmware: it
	doesn't set the write protect bit for QIC80/QIC40 cartridges.

	* ftape/lowlevel/ftape-io.c: Check for impossible drive status 0xff in
	ftape_report_raw_drive_status(). This can occur when there are
	hardware problems (drive selection?) with some on-board FDC
	controllers.

	* ftape/lowlevel/ftape-ctl.c:
	Fix an "infinite loop can't be killed by signal" bug in
	ftape_get_drive_status()

Fri Nov  7 15:02:13 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* Release of ftape-3.04
	
	* Doc/texi/Installation.texi: Correct some line breaks.

	* TODO, RELEASE-NOTES, README, BUGS: Spell checks

	* MCONFIG: Final update for release of 3.04

	* Doc/texi/ftape.texi: Spell checkered

	* ftape/zftape/zftape-vtbl.c:
	2.x compatibility: don't treat the space AFTER EOD as another volume
	when detecting a cartridge written by 2.x ftape.

Thu Nov  6 00:52:23 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h:
	Update the time stamp for final release of ftape-3.04. Removed
	hex. representation of numbers from preprocessor directives as some
	versions of the GNU compiler seem to have problems (?)

	* ftape/zftape/zftape-write.c:
	Removed some silly "const"s from parameters that weren't pointers.

	* ftape/zftape/zftape-init.c:
	"Re-unified" the two versions of zft_mmap() for 2.0.* and 2.1.*
	kernels into a single function. Two separate functions were a silly
	idea; already has lead to unneccessary bugs.

	* ftape/lowlevel/ftape-init.c:
	Remove the "infinite" loop when allocation of the dma buffers
	failed. Loop was killable by a signal. Bail out if first attempt
	fails! (back to old behavior)

	* Doc/texi/ftape.texi, Doc/texi/Documentation.texi, Doc/texi/Bugs.texi:
	Add new http location of the ftape faq.

	* Doc/texi/Testing.texi:
	Add the retensioning hint to the concept index.

	* Doc/dvi/fix-makeinfo.sh: Add the new location of the ftapefaq.

	* TODO: Add formatting with Colorado Jumbo 350 drives.

	* RELEASE-NOTES:
	Small update (time stamps and such) for the final 3.04 release.

	* BUGS:
	Add note about formatting with Colorado Jumbo 350 which seems to be
	broken.

Fri Oct 31 00:51:56 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/vtblc/vtblc.c:
	Daylight saving fix by Andreas Muck <postmaster@koala.rhein-neckar.de>

Wed Oct 29 15:55:15 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release of ftape-3.04-beta-7
	
	* include/linux/ftape.h, RELEASE-NOTES:
	Update timestamp for release of 3.04-beta-7

	* Doc/texi/ftape.texi, Doc/texi/Testing.texi,
 	  Doc/texi/QuickInstall.texi, Doc/texi/Loading.texi,
 	  Doc/texi/Installation.texi, Doc/texi/Implementation.texi,
 	  Doc/texi/Documentation.texi:
	Update, should be synchronized with the remainder of the package now.

	* contrib/gnumt/mt.c:
	"main()" should have return type "int", not "void"

	* Doc/.cvsignore: initial revision

Tue Oct 28 14:31:06 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/mtio.h: Updated to latest kernel release.

	* ftape/zftape/zftape-vtbl.h:
	Change the DUMP_VOLINFO macro to dump at most the first 20 chars of
	the volume label which isn't neccesarily 0-terminated.

	* ftape/Configure.help.ftape:
	Update the section about CONFIG_FT_PROC_FS to reflect changing from
	/proc/ftape/ directory to /proc/ftape file.

	* contrib/scripts/listtape.sh, contrib/scripts/listtape.pl,
 	  contrib/scripts/Makefile:
	Auto-probe for perl, perl4, perl5, bash or sh when installing
	listtape.[sh,pl]

	* TODO: Updated.

	* MCONFIG:
	Helper program can be installed relative to an installation prefix
	(i.e. /usr or /usr/local)

	* RELEASE-NOTES: Include new slow-seek fallback

Tue Oct 28 00:13:02 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-init.c:
	"struct file_operations" has changed between 2.1.59 and 2.1.60. Add
	preprocessor conditionals to reflect these changes.

	* ftape/lowlevel/ftape-rw.c:
	Added slow-seek fallback facility to ft_start_tape() if tape can't be
	positioned at desired location after 3 unsuccessful retries.

	* ftape/.cvsignore: Initial revision, ignore KDE's .directory entries

	* contrib/tests/README, contrib/tests/overshoot.sh:
	Added fast seek overshoot testing

	* contrib/scripts/README: Updated to reflect changes

	* contrib/scripts/listtape.sh:
	Use the TAPE environment variable, /dev/tape if $TAPE is not set.

	* contrib/scripts/Attic/listtape, contrib/scripts/listtape.pl:
	Renamed listtape to listtape.pl

Mon Oct 27 23:59:58 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/scripts/MAKEDEV.ftape:
	Fixed a typo that prevented installation of the nzqft devices

	* contrib/scripts/Makefile: initial revision

	* contrib/gnumt/Makefile:
	Install ftmt under $(BINDIR), yet another global variable set in
	MCONFIG.

	* contrib/Makefile:
	Add the scripts subdir (listtape is now installed in BINDIR)

	* TODO, README, MCONFIG, INSTALL, Ftape-FAQ, BUGS:
	Spellcheck and minore updates

	* .cvsignore: initial revision

Fri Oct 24 20:16:20 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release of ftape-3.04-beta-6

	* ftape/zftape/zftape-init.c:
	Initialize the vm_ops field with a 0-filled dummy struct to compensate
	the sys_msync() kernel bug.

	* contrib/ftformat/ftfmt-tapelib.c:
	Need to pass "-1" as the parameter value to qic_simple_command() to
	indicate that no parameter is needed. Fixed.

	* ftape/lowlevel/ftape-proc.c:
	Forgot a semicolon at the end of a struct :-(

Fri Oct 24 14:05:02 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* MCONFIG:
	Fix some pathnames and comment out CONFIG_FT_PROCFS for release of
	3.04-beta-6

	* contrib/gnumt/Makefile, contrib/ftformat/Makefile, MCONFIG:
	Added "MANDIR" variable.

	* contrib/ftformat/ftformat.man: Initial revision

	* contrib/ftformat/ftfmt-options.c: Fixed some typos.

	* ftape/zftape/zftape-vtbl.c:
	Fixed yet another bug when extracting volumes from extra-lenght
	(i.e. 2.2GB) cartridges. Should work now, but I'm unable to test it.

Thu Oct 23 22:56:19 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/zftape/zftape-vtbl.c:
	Fixed a typo that broke ftape-2.x read compatibility.

Tue Oct 21 14:39:31 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* patches/1.2.13/wrapper.h, patches/1.2.13/linux-1.2.13.dif.2,
 	  ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-proc.c,
 	  Doc/texi/Installation.texi, TODO, Rules.make, MCONFIG, INSTALL:
	Merged patches supplied by
	"Harry G. McGavran Jr. " <mcgavran@rt66.com> to support 1.2.13 again.
	Needed to modify Rules.make to work properly with MODVERSIONS &
	1.2.13. Don't compile ftape-proc.c with 1.2.13. Instruct the user to
	RTFM when using 1.2.13 kernels (in INSTALL). Modify installation
	manual to reflect 1.2.13 changes.

	* contrib/vtblc/vtblc.c: Bug fixes/changes proposed by
	Andreas Muck <postmaster@koala.rhein-neckar.de>
	Use localtime instead of GMT. Call tzset() and initialize tm_isdst in
	decode_date(). Use "%T %D" instead of locale's %C.

	* contrib/vtblc/vtblc.c:
	Removed the "const" from the "date" argument to "set_date()" 'cause
	libc-5 doesn't define the date argument to strptime() as "const".

	* contrib/vtblc/getsubopt.c, contrib/ftformat/getsubopt.c:
	Changed the function definition to be a proto-type.

	* include/linux/zftape.h, include/linux/ftape.h,
 	  ftape/zftape/zftape-init.c, ftape/lowlevel/ftape-init.c:
	Changed the load banner of zftape to display the ftape version string
	of the ftape version it belongs to. Discard separate relese number of
	zftape as proposed by Francois Laagel <laagel@hrnet.fr>.

	* contrib/scripts/listtape:
	Use the TAPE environment variable in first place, "/dev/tape" if $TAPE
	is unset. By Nick Holloway <Nick.Holloway@alfie.demon.co.uk>.

Sat Oct 18 16:09:36 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/ftformat.c, contrib/ftformat/ftfmt-tapelib.c:
	Switch to unbuffered IO for stdout/stderr. Some drives don't allow the
	physical revers/forward commands in format mode. They respond with an
	"Command illegal or unimplemented in format mode" error. Skip the
	erasure of the old format in this case.

	* Doc/html/.cvsignore: Add the "BUGS" file

	* BUGS: Inital revision

Fri Oct 17 23:01:53 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/fdc-isr.c:
	Added fix for  pre 82077 fdc when verifying a cartridge after
	formatting, supplied by Olaf Titz <olaf@bigred.inka.de>

	* ftape/lowlevel/ftape-read.c:
	Add test to compensate for faulty formatted cartrigdes reported by Dima
	Brodsky in ftape_decode_header_segments()

	* contrib/ftformat/ftfmt-tapelib.c, contrib/ftformat/ftfmt-options.c:
	Added fixes and changes proposed by Jochen Hoenicke
	<Jochen.Hoenicke@Informatik.Uni-Oldenburg.DE> (typos, teaching me how
	to manipulate bitfields :-), and small msync change to support his
	tracker patch)

	* ftape/zftape/zftape-vtbl.c:
	list_empty() macro (inline function?) is meaningless with zftape, use
	zft_vtbl_empty macro instead.

	* ftape/lowlevel/ftape_syms.c: ftape procfs entries aren't exported

Thu Oct 16 23:37:32 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-write.c:
	Undo change in determining when we should start the tape. Fix Starting
	of the tape with WRITE_SINGLE

	* ftape/lowlevel/ftape-proc.c:
	No longer create an ftape directory, but only a file that contains all
	the data.

	* ftape/lowlevel/ftape-buffer.c:
	Don't be too noisy if allocation of dma buffers fail.

	* contrib/vtblc/vtblc.c:
	Allow open of the ftape devices in read-only mode if invoked to simply
	dump the volume table contents.

	* contrib/scripts/MAKEDEV.ftape: Ask user if devices already exist

	* contrib/gnumt/mt.c:
	The signature returned by a floppy tape drive is at most 16 bits,
 	not 24

	* contrib/ftformat/ftfmt-tapelib.c:
	Compensate for automatic type conversion problems with gcc

	* Doc/texi/ftape.texi, Doc/texi/Testing.texi,
 	  Doc/texi/QuickInstall.texi, Doc/texi/Introduction.texi,
 	  Doc/texi/Loading.texi, Doc/texi/Installation.texi,
 	  Doc/texi/Implementation.texi, Doc/texi/Documentation.texi,
 	  Doc/texi/Bugs.texi:
	Miscellanous updates, document the changed proc interface

	* Doc/html/Makefile:
	Add the "BUGS" file to the external file references

	* Doc/dvi/fix-makeinfo.sh: Updated for new macros/changed time stamps

	* RELEASE-NOTES: Tell Emacs that this is a -*-Text-*- file

	* README: Add a hint to read the "BUGS" file

	* MCONFIG: Add option for amd-K6, add a hint to the "BUGS" file

Fri Oct 10 12:14:11 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release of ftape-3.04-beta-5

	* include/linux/zftape.h, include/linux/ftape.h, RELEASE-NOTES,
 	  README, MCONFIG, INSTALL:
	Update timestamps for release of ftape-3.04-beta-5

	* contrib/ftformat/ftfmt-tapelib.c:
	Search also for clusters of bad blocks when tuning the bad sector map

	* Doc/texi/Installation.texi: Added link to the isapnptools home page.

	* ftape/lowlevel/ftape-setup.c: Fixed a typo.

	* ftape/lowlevel/fdc-io.c:
	Communication with the isr() still seems to be broken when the isr
	stops the tape; added a trace statement to get notified in this case.

	* contrib/ftformat/ftfmt-tapelib.c:
	Lowered allowed bad sectors per segment threshold from 16 to 8;
	implement bit pattern tuning for bsm: 101 -> 111

	* MCONFIG:
	ARCH_OPT commented out by default; only needed on Alpha, if at all

Thu Oct  9 15:47:11 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/fdc-isr.c: Fixed a typo.

Thu Oct  9 15:43:09 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape-vendors.h:
	Finally add new vendor id 0382 for Eagle TR-3

	* ftape/lowlevel/ftape-setup.c:
	Add mini-max check to kernel bootup options. Correct typos.

	* ftape/lowlevel/fdc-isr.c:
	always mark sectors bad on no_data_errors when verifying

	* ftape/lowlevel/fdc-isr.c: always mark sectors bad on no_data_errors

	* contrib/ftformat/ftfmt-options.c:
	Improved online documentation with examples.

	* TODO:
	Add a reminder to include the isapnptools to the requirements section.

	* MCONFIG:
	Add "do-it-yourself" configuration for those people whithout a kernel
	source tree. Add processor specific CFLAGS.

Tue Oct  7 09:32:28 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/mtio.h:
	Remove ":32" bitfield from ft_bsm in "struct ftfmtverify"

	* include/linux/ftape-vendors.h:
	Add 0x004c0 vendor id for "AIWA TD-S1600"

	* ftape/lowlevel/ftape-setup.c:
	Add __initdata and __initcode stuff for recent kernel versions.

	* ftape/lowlevel/fdc-isr.c:
	Don't retry on "no data errors" when verifying a cartridge, only if
	the previous sector was also an error.

	* ftape/lowlevel/Makefile: Add "ftape-setup.o" if CONFIG_FTAPE=y

Mon Oct  6 04:34:43 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/ftformat.c, contrib/ftformat/ftfmt-tapelib.c:
	Argh, the get_parms() ioctl doesn't set QIC_TAPE_WIDE. Compensate for
	it by using the tape_status of the MTIOCGET ioctl.

	* ftape/lowlevel/ftape-read.c: Forgot to remove a trace statement

Sun Oct  5 22:25:11 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/zftape.h, include/linux/ftape.h, RELEASE-NOTES:
	Release of version 3.04-beta-3

	* ftape/lowlevel/ftape-rw.c, ftape/lowlevel/fdc-isr.c:
	Forgot to reset some trace-levels after testing.

	* ftape/Configure.help.ftape, ftape/Config.in: Fixed typos.

Sun Oct  5 19:19:33 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/zftape.h, include/linux/qic117.h,
 	  include/linux/mtio.h, include/linux/ftape.h,
 	  include/linux/ftape-vendors.h,
 	  include/linux/ftape-header-segment.h,
 	  ftape/zftape/zftape_syms.c, ftape/zftape/zftape_syms.h,
 	  ftape/zftape/zftape-write.c, ftape/zftape/zftape-write.h,
 	  ftape/zftape/zftape-vtbl.h, ftape/zftape/zftape-vtbl.c,
 	  ftape/zftape/zftape-rw.h, ftape/zftape/zftape-rw.c,
 	  ftape/zftape/zftape-read.h, ftape/zftape/zftape-read.c,
 	  ftape/zftape/zftape-init.h, ftape/zftape/zftape-init.c,
 	  ftape/zftape/zftape-eof.h, ftape/zftape/zftape-ctl.h,
 	  ftape/zftape/zftape-eof.c, ftape/zftape/zftape-ctl.c,
 	  ftape/zftape/zftape-buffers.c, ftape/zftape/zftape-buffers.h,
 	  ftape/zftape/Makefile, ftape/lowlevel/ftape_syms.h,
 	  ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape-write.h,
 	  ftape/lowlevel/ftape-tracing.h, ftape/lowlevel/ftape-write.c,
 	  ftape/lowlevel/ftape-tracing.c, ftape/lowlevel/ftape-setup.c,
 	  ftape/lowlevel/ftape-rw.h, ftape/lowlevel/ftape-rw.c,
 	  ftape/lowlevel/ftape-read.h, ftape/lowlevel/ftape-read.c,
 	  ftape/lowlevel/ftape-proc.h, ftape/lowlevel/ftape-proc.c,
 	  ftape/lowlevel/ftape-io.h, ftape/lowlevel/ftape-io.c,
 	  ftape/lowlevel/ftape-init.h, ftape/lowlevel/ftape-init.c,
 	  ftape/lowlevel/ftape-format.h, ftape/lowlevel/ftape-format.c,
 	  ftape/lowlevel/ftape-ecc.h, ftape/lowlevel/ftape-ecc.c,
 	  ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/ftape-ctl.h,
 	  ftape/lowlevel/ftape-buffer.h, ftape/lowlevel/ftape-calibr.c,
 	  ftape/lowlevel/fdc-isr.h, ftape/lowlevel/ftape-bsm.h,
 	  ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/fdc-io.h,
 	  ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fdc-io.c,
 	  ftape/lowlevel/fc-10.c, ftape/lowlevel/Makefile,
 	  ftape/Configure.help.ftape, ftape/Makefile, ftape/ftape.txt,
 	  ftape/Config.in, contrib/vtblc/vtblc.h, contrib/vtblc/vtblc.c,
 	  contrib/vtblc/Makefile, contrib/tests/README,
 	  contrib/swapout/Makefile, contrib/scripts/listtape.sh,
 	  contrib/scripts/listtape, contrib/scripts/MAKEDEV.ftape,
 	  contrib/scripts/README, contrib/ftformat/ftformat.h,
 	  contrib/ftformat/ftfmt-tapelib.h, contrib/ftformat/ftformat.c,
 	  contrib/ftformat/ftfmt-options.c,
 	  contrib/ftformat/ftfmt-options.h, contrib/ftformat/Makefile,
 	  contrib/ftformat/ftfmt-bsm.h, Makefile, Rules.make, TODO,
 	  MCONFIG, INSTALL:
	Copyright notice, some other small changes necessary to do the kernel
	integration.

	* contrib/ftformat/ftfmt-tapelib.c:
	Ignore error when sending SET_RATE_OR_FORMAT, as well as error when
	sending SET_N_FORMAT_SEGMENTS.

	* ftape/lowlevel/ftape-bsm.c, contrib/ftformat/ftfmt-bsm.c:
	Fixed a sever bug. Must multiply the third argument of memmove bye 3
	to get the actual byte count in put_bad_sector_entry() :-(

	* README:
	Thought a README would be a good idea. This is the first file I search
	for when trying to install new packages on my own system.

	* ftape/zftape/compressor/Attic/zftape-compress.h,
 	  ftape/zftape/compressor/Attic/zftape-compress.c,
 	  ftape/zftape/compressor/Attic/lzrw3.h,
 	  ftape/zftape/compressor/Attic/lzrw3.c,
 	  ftape/zftape/compressor/Attic/Makefile,
 	  ftape/zftape/compressor/Attic/.cvsignore,
 	  ftape/compressor/zftape-compress.h,
 	  ftape/compressor/zftape-compress.c, ftape/compressor/lzrw3.h,
 	  ftape/compressor/lzrw3.c, ftape/compressor/Makefile,
 	  ftape/compressor/.cvsignore:
	Renamed

Fri Oct  3 23:49:03 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-proc.c:
	Forgot to remove a space from the start of " tape qualitiy statistics"

	* ftape/lowlevel/ftape-setup.c, ftape/lowlevel/fdc-io.c:
	Make the max. FDC data rate and the initial FDC threshold configurable
	during kernel configuration.

	* ftape/Configure.help.ftape, ftape/ftape.txt, ftape/Config.in:
	Additions to sync with current ftape release.

	* ftape/lowlevel/ftape-rw.c:
	Increase the start offset if ftape_start_tape() fails repeatedly

	* ftape/lowlevel/ftape-proc.c:
	Must include <asm/segment.h> for 2.1.28 and earlier.
	Fix broken /proc/ftape/controller output

	* ftape/lowlevel/ftape-init.c:
	Must not reference ftape_tracing when compiled with "-DNO_TRACE_AT_ALL"

	* ftape/lowlevel/fdc-io.c: "in_interrupt()" wasn't there until 2.1.30

	* ftape/zftape/zftape-vtbl.c:
	zft_find_volume() was broken when used with full cartridges, should
	not return the constant "eot_vtbl" when at EOT, but the dynamically
	allocated "eom_vtbl".

	* contrib/ftformat/ftformat.c, contrib/ftformat/ftfmt-tapelib.c,
 	  contrib/ftformat/ftfmt-options.c:
	Add "TR-3" and "TR-1" symbols to the qic-standard option (synonymous
	to "QIC-80/WIDE", and "QIC-3020/WIDE".

	Fix "--verify-only" option (did erase the cartridge when used with
	"--force", bad :-)

Tue Sep 30 13:14:02 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape/lowlevel/ftape-rw.c:
	history.overrun_errors has type "unsigned", overrun_count_offset was
	of type "signed int" which caused problems with negative result of the
	subtraction of both values.

	* ftape/lowlevel/ftape-proc.c:
	Remvoe obsolete "#ifdef 0"s, tune the history output a little bit.

	* ftape/lowlevel/fdc-io.c:
	Move "restore_flags()" past "update_dsr()" in fdc_reset().

	* MCONFIG: Exchanged "ifdef $(SMP)" by "ifdef SMP" :-(

Fri Sep 26 22:12:38 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Doc/texi/Documentation.texi, Doc/texi/QuickInstall.texi,
 	  Doc/texi/Bugs.texi, Doc/html/Makefile, Doc/html/.cvsignore:
	Rename FAQ to Ftape-FAQ

Fri Sep 26 18:52:18 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release of second beta version, ftape-3.04-beta-2
	
	* include/linux/zftape.h, include/linux/ftape.h, RELEASE-NOTES:
	Update the time stamp for the release of ftape-3.04-beta-2

	* ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-read.c,
 	  ftape/lowlevel/ftape-ecc.c, ftape/lowlevel/ftape-bsm.c:
	Add small bug fixes by Jochen Hoenicke.

	* ftape/lowlevel/ftape-proc.c:
	Always print the error history, even if empty.

	* Ftape-FAQ, Attic/FAQ: Renamed FAQ to Ftape-FAQ

	* ftape/lowlevel/fdc-isr.c:
	We REALLY need to retry on no_data_errors. Otherwise the fdc gets
	totally confused and won't find any tape sector for the remainder of
	the tape track.

	* ftape/zftape/zftape-init.c:
	In 2.1.56 the mmap() file operation no longer takes the inode as
	argument. Instead, access the inode via filep->f_dentry->d_inode.

	* contrib/ftformat/ftformat.c, contrib/ftformat/ftfmt-options.c:
	Don't autoprobe with "--verify-only", use the FTFMT_SET_PARMS
	operation even with "--verify-only" to clear the bad sector map of the
	kernel driver.

	* Rules.make: Let object files depend on $(LINUX_LOCATION)/.config

Sat Sep 20 02:27:31 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* INSTALL: Updated to reflect the changed directory layout.

	* ftape/zftape/zftape_syms.c: Same change as for ftape_syms.c

	* ftape/lowlevel/ftape-init.c:
	ftape_tracing is exported as kernel symbol. This is ugly when using
	verioned symbols cause ftape_tracing is a module parameter as
	well. Introduce new variable ft_tracing as placeholder

	* ftape/lowlevel/ftape_syms.c:
	Finally managed to cope with versioned symbols when using
	2.0.*. FT_KSYM(sym) had to be defined as X(##sym) instead of X(sym).

	* ftape/lowlevel/ftape-proc.c: Forgot to remove a trace statement

	* RELEASE-NOTES, Doc/texi/Testing.texi, Doc/texi/Loading.texi,
 	  Doc/texi/Installation.texi:
	Updated for the changed directory layout and proc interface.

	* ftape/zftape/compressor/.cvsignore: *** empty log message ***

	* ftape/lowlevel/ftape-proc.c:
	Added the __init_func() macro to ftape_proc_init(). Surround
	ftape_proc_destroy() by an "#ifdef MODULE"

	* ftape/lowlevel/ftape-init.c:
	Needed to rename the ftape_tracing parameter to ft_tracing. Otherwise
	the checksum from the kernel symbol ftape_tracing would be part of the
	name of thats parameter

	* ftape/zftape/Makefile, ftape/Makefile, Rules.make, Makefile, MCONFIG:
	Hacked until it work for both, 2.0.30 and 2.1.55

	* ftape/Config.in: Kernel configuration file

	* contrib/scripts/animtape: fixed a silly bug in this silly script

Fri Sep 19 17:21:04 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Rules.make:
	Fixed dependency generation, add NODEP to uninstall target, don't
	touch include/linux/modversions.h

	* Makefile:
	Suppress dependency generation for "make uninstall" and remove the
	ftape docdir when uninstalling

	* include/linux/modules/.cvsignore, include/linux/.cvsignore:
	Ignore temporary modversions files

	* include/linux/Attic/modversions.h: Unneeded in the repository

	* ftape/zftape/compressor/lzrw3.h,
 	  ftape/zftape/compressor/zftape-compress.c,
 	  ftape/zftape/compressor/zftape-compress.h,
 	  ftape/zftape/compressor/lzrw3.c,
 	  ftape/zftape/compressor/Makefile:
	Needed to created a different subdirectory for a second multi object
	file module when including it in the kernel source tree.

	* ftape/zftape/Makefile, ftape/zftape/zftape-init.c,
 	  ftape/lowlevel/ftape-setup.c, ftape/lowlevel/fdc-io.h,
 	  ftape/lowlevel/ftape-init.c, ftape/lowlevel/fdc-io.c,
 	  ftape/lowlevel/Makefile, ftape/Makefile, contrib/vtblc/Makefile,
 	  contrib/swapout/Makefile, contrib/ftformat/Makefile,
 	  contrib/Makefile, Doc/info/Makefile, Doc/html/Makefile,
 	  Rules.make, RELEASE-NOTES, Makefile, MCONFIG:
	Several changes to prepare for kernel inclusion of the package

	* include/linux/Attic/modversions.h: Empty dummy file.

	* ftape/zftape/Attic/zftape-compress.h,
 	  ftape/zftape/Attic/lzrw3.h,
 	  ftape/zftape/Attic/zftape-compress.c,
 	  ftape/zftape/Attic/lzrw3.c:
	Moved to compressor subdirectory

	* ftape/zftape/zftape_syms.h, ftape/zftape/zftape-write.h,
 	  ftape/zftape/zftape_syms.c, ftape/zftape/zftape-vtbl.h,
 	  ftape/zftape/zftape-write.c, ftape/zftape/zftape-rw.h,
 	  ftape/zftape/zftape-vtbl.c, ftape/zftape/zftape-read.c,
 	  ftape/zftape/zftape-read.h, ftape/zftape/zftape-rw.c,
 	  ftape/zftape/zftape-eof.h, ftape/zftape/zftape-init.c,
 	  ftape/zftape/zftape-init.h, ftape/zftape/zftape-ctl.c,
 	  ftape/zftape/zftape-ctl.h, ftape/zftape/zftape-eof.c,
 	  ftape/zftape/Attic/zftape-compress.h,
 	  ftape/zftape/Attic/zftape-compress.c,
 	  ftape/zftape/Attic/lzrw3.h, ftape/zftape/zftape-buffers.c,
 	  ftape/zftape/zftape-buffers.h, ftape/zftape/Attic/lzrw3.c,
 	  ftape/zftape/Makefile, ftape/zftape/.cvsignore,
 	  ftape/lowlevel/ftape-write.c, ftape/lowlevel/ftape-write.h,
 	  ftape/lowlevel/ftape_syms.c, ftape/lowlevel/ftape_syms.h,
 	  ftape/lowlevel/ftape-tracing.c, ftape/lowlevel/ftape-tracing.h,
 	  ftape/lowlevel/ftape-rw.c, ftape/lowlevel/ftape-rw.h,
 	  ftape/lowlevel/ftape-setup.c, ftape/lowlevel/ftape-proc.h,
 	  ftape/lowlevel/ftape-read.c, ftape/lowlevel/ftape-read.h,
 	  ftape/lowlevel/ftape-io.h, ftape/lowlevel/ftape-proc.c,
 	  ftape/lowlevel/ftape-init.c, ftape/lowlevel/ftape-init.h,
 	  ftape/lowlevel/ftape-io.c, ftape/lowlevel/ftape-ecc.h,
 	  ftape/lowlevel/ftape-format.c, ftape/lowlevel/ftape-format.h,
 	  ftape/lowlevel/ftape-ecc.c, ftape/lowlevel/ftape-calibr.h,
 	  ftape/lowlevel/ftape-ctl.c, ftape/lowlevel/ftape-ctl.h,
 	  ftape/lowlevel/ftape-buffer.c, ftape/lowlevel/ftape-buffer.h,
 	  ftape/lowlevel/ftape-calibr.c, ftape/lowlevel/fdc-isr.h,
 	  ftape/lowlevel/ftape-bsm.c, ftape/lowlevel/ftape-bsm.h,
 	  ftape/lowlevel/fdc-isr.c, ftape/lowlevel/fc-10.h,
 	  ftape/lowlevel/fdc-io.c, ftape/lowlevel/fdc-io.h,
 	  ftape/lowlevel/.cvsignore, ftape/lowlevel/Makefile,
 	  ftape/lowlevel/fc-10.c, ftape/Makefile:
	Renamed driver/ftape to ftape/lowlevel and driver/zftape to
	ftape/zftape to prepare for kernel inclusion.

Thu Sep 18 20:25:49 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Doc/info/Makefile, Doc/html/Makefile, Doc/dvi/Makefile:
	Improved TeXinfo source dependency. make clean now only deletes the
	symlinks to the TeXinfo source. Subsequent "make all" will not remake
	the documentation if the TeXinfo source has not been modified. "make
	realclean" will remove the formatted documentation.

	* Doc/Makefile: Removed obsolete install.doc target

Thu Sep 18 19:22:04 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Doc/info/Makefile, Doc/html/Makefile, Doc/dvi/Makefile:
	Don't attempt to install the documentation if DOCDIR or INFODIR isn't
	defined

	* MCONFIG: Added default paths to install the documentation in.

	* RELEASE-NOTES: Update to latest changes

	* Doc/info/Makefile, Doc/html/Makefile:
	Install the documentation under /usr/doc/ftape by default.

	* Doc/html/.cvsignore: Add qic117.h file.

	* Doc/Makefile: Removed reference to sgml sub-directory

	* driver/ftape/ftape-init.c, driver/ftape/ftape-setup.c,
 	  driver/ftape/fdc-io.h, driver/ftape/ftape-ctl.c,
 	  driver/ftape/fdc-io.c:
	Add a new parameter "ft_fdc_rate_limit" to limit the maximal data rate
	of the fdc if it is to be expected that the rate will be reduced by
	the driver anyway

	* driver/ftape/ftape-write.c:
	Fixed a trace message in write_segment(). Report the segment id of the
	segment being retried, not the arg to write_segment().

	* driver/ftape/fdc-isr.c: Forgot to reset a trace level after testing.

	* driver/zftape/zftape-ctl.c:
	Always write a file mark when closing the device in QIC mode, even
	after catching a signal.

	* driver/zftape/zftape-rw.c:
	Fixed a but in calc_tape_pos(). Segment id was off by one when
	counting backwards.

	* contrib/scripts/animtape: Make it scalable.

	* contrib/scripts/listtape.sh:
	Bourne shell equivalent of listtape. Some people don't understand perl
	scripts.

	* contrib/scripts/listtape: Fixed a typo

	* contrib/vtblc/vtblc.c:
	Enclose the tape label with double quotes when using --print

	* contrib/ftformat/ftfmt-options.c: Fixed a typo.

	* contrib/vtblc/vtblc.h, contrib/ftformat/ftformat.h,
 	  contrib/vtblc/getsubopt.c, contrib/vtblc/Makefile,
 	  contrib/ftformat/getsubopt.c, contrib/ftformat/Makefile:
	libc-5 doesn't have getsubopt()

	* Doc/texi/ftape.texi, Doc/texi/Loading.texi,
 	  Doc/texi/QuickInstall.texi, Doc/texi/Testing.texi,
 	  Doc/texi/Introduction.texi, Doc/texi/Installation.texi,
 	  Doc/texi/Implementation.texi, Doc/texi/Documentation.texi,
 	  Doc/texi/Bugs.texi:
	Should be uptodate now. Still missing is real documentation for
	ftformat and vtblc.

	* Doc/sgml/Attic/linuxdoc-sgml.sty, Doc/sgml/Attic/qwertz.sty,
 	  Doc/sgml/Attic/ftape.tex, Doc/sgml/Attic/isolatin.sty,
 	  Doc/sgml/Attic/ftape.sgml, Doc/sgml/Attic/copying.sgml,
 	  Doc/sgml/Attic/Makefile:
	Totally unneeded and useless for now

	* Doc/html/Footer:
	Image and anker have to be in the same line, otherwise netscape will
	draw a "continuation bar"

	* Doc/dvi/fix-makeinfo.sh:
	Added macros for the FAQ maintainer and HOWTO maintainer

	* Doc/dvi/Makefile:
	Install the dvi documentation under /usr/doc/ftape/dvi by default

	* Doc/Makefile: Modified the uninstall target.

Wed Sep 17 12:37:19 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/vtblc/vtblc.c:
	QIC starts counting days of the month starting at zero, but
	"struct tm" counts from 1 to 31.

	* driver/ftape/ftape-read.c, driver/ftape/ftape-format.c,
 	  driver/ftape/fdc-isr.c:
	buffer_overrun/_underrun buffer states were unused, removed them.

	* driver/ftape/ftape-write.c:
	ftape_write_segment(): restart the runner even with an empty
	segment. Otherwise we might hang. We have N buffers. If the tape is
	stopped or paused, and the N-th buffer was an empty segment, then the
	tape never was started and the driver gave the typical "wait for empty
	segment failed" message.

	* driver/ftape/ftape-rw.c:
	Reset overrun_count_offset if no error occurred for a long time

	* driver/ftape/ftape-io.c:
	ft_data_rate was halfed twice in ftape_half_data_rate() -- bug was
	introduced by previous changes.

	* driver/ftape/ftape-rw.h, driver/ftape/fdc-io.h:
	Moved definition of "buffer_struct" to fdc-io.h 'cause it is needed
	by fdc_setup_read_write() and fdc_setup_formatting()

	* driver/ftape/fdc-io.c: Clean up of fdc_setup_fdc_and_dma()

	* contrib/scripts/listtape: Quote the $ chars (perl script)

	* contrib/ftformat/ftfmt-tapelib.c:
	get_format_parms(): variable fmt wasn't used

	* FAQ, MCONFIG: Added note about Ditto 2GB

Thu Sep 11 08:33:24 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Release of ftape-3.04-beta-1

	* include/linux/ftape.h, include/linux/zftape.h, RELEASE-NOTES,
 	  TODO, MCONFIG:
	Updated for the beta release of ftape-3.04

	* driver/ftape/fdc-isr.h, driver/ftape/fdc-isr.c,
 	  driver/ftape/fdc-io.c:
	Handle the cases where the fdc a pauses the tape. The fdc seeks in the
	background without signalling busy. We must wait for the interrupt
	that signals the completion of the seek if ft_hide_interrupt is
	set. We do this in fdc_command() because almost all fdc traffic takes
	this execution path.

	* driver/ftape/ftape-io.c: Deleted a superfluous empty line

	* driver/ftape/ftape-rw.c: Fixed a typo

	* contrib/vtblc/vtblc.c, contrib/vtblc/vtblc.h,
 	  contrib/vtblc/Makefile, contrib/vtblc/.cvsignore:
	Initial revision

	* contrib/Makefile: Add vtblc subdir

	* include/linux/ftape.h, include/linux/zftape.h, RELEASE-NOTES, TODO:
	update

	* driver/ftape/fdc-io.c:
	The driver <-> isr communication is broken. Try to cope with this with
	another cli()/sti() pair in fdc_result()

	* driver/ftape/fdc-isr.c:
	Sometimes there is a zero dma residue when getting an overrun error in
	the last sector?? Compensate. Don't retry on the first overrun error.
	Separate the verification handling from the ordinary read stuff 'cause
	it looked too ugly.

	* driver/zftape/zftape-vtbl.c:
	Use actual blocksize when in raw mode, use vtbl->count for volume label

	* contrib/ftformat/ftfmt-tapelib.c:
	Need to add 1900 to year of "struct tm" before passing it to
	FT_TIME_STAMP() macro

	* contrib/ftformat/ftfmt-options.c:
	Suboption arrays need a trailing "NULL" string.

	* contrib/scripts/listtape, contrib/scripts/texi2www,
 	  contrib/scripts/README, contrib/scripts/animtape,
 	  contrib/scripts/MAKEDEV.ftape:
	animtape is new (create an animation sequence of tape
	cartridges). Copyright updates, option parsing.

Tue Sep  9 15:12:43 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* driver/zftape/zftape-write.c: Fixed a multi-trace statement

	* driver/zftape/zftape-rw.c: Fixed a bug in zft_calc_tape_pos()

	* driver/zftape/zftape-ctl.c:
	zft_open(): add a call to zft_init_driver() when the driver was opened
	in raw mode and then re-opened in normal mode. The contents of the
	header segments might have changed after being used in raw mode.

	* driver/ftape/ftape-rw.c, driver/ftape/ftape-io.h,
 	  driver/ftape/ftape-io.c, driver/ftape/fdc-io.h,
 	  driver/ftape/ftape-init.c, driver/ftape/fdc-io.c:

	The correct method to cope with overrun errors is to increase the FIFO
	threshold. Only reduce the data-rate when the threshold cannot be
	increased any further!

	* contrib/ftformat/ftformat.c, contrib/ftformat/ftfmt-tapelib.h,
 	  contrib/ftformat/ftfmt-tapelib.c:
	When used with --verify-only query the kernel for the correct setting
	to write to the header segment.

	* MCONFIG: Added an SMP option.

Sun Sep  7 01:38:48 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* FAQ:
	Merged the start of a FAQ independently created by Tim Jones, and a
	comment on it made by Michael Hamilton.

	* TODO: Little updates

Wed Sep  3 17:38:26 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* Doc/html/Makefile:
	Update to reflect changed location of texi2www and MAKEDEV.ftape

	* MCONFIG:
	Exchanged parse $(LINUX_LOCATION)/include/linux/version.h for the
	kernel version instead of using $(uname -r)

Wed Sep  3 16:23:05 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/scripts/README: Added entries for MAKEDEV.ftape and texi2www

	* Makefile: Updated to reflect renaming of MAKEDEV.ftape

	* contrib/scripts/texi2www, contrib/scripts/MAKEDEV.ftape,
	  Attic/MAKEDEV.ftape:
	Renamed

	* contrib/texi2www/Attic/texi2www:
	Moved to the contrib/scripts/ directory

	* contrib/ftformat/ftformat.c, contrib/ftformat/ftfmt-options.h,
 	  contrib/ftformat/ftfmt-tapelib.c,
 	  contrib/ftformat/ftfmt-options.c:
	Some cosmetic changes.

	* contrib/ftformat/Makefile: Add -O to COMPILE

	* driver/zftape/zftape-rw.c, driver/zftape/zftape-rw.h,
 	  driver/zftape/zftape-vtbl.c, driver/zftape/zftape-ctl.c:
	zft_calc_tape_pos() only needs the segment id now.

	* driver/zftape/zftape-vtbl.h:
	remove next_vtbl component from the internal zft_volinfo struct

	* driver/zftape/zftape_syms.c: Remove unnecessary symbols

	* driver/zftape/zftape-buffers.c:
	Use it like kmalloc(size, priority), not vice versa :-(

	* driver/ftape/ftape-proc.c: Specify a field width for some printk()s

	* driver/ftape/ftape-ctl.c:
	Don't print a message to the kernel log when the cartridge is write
	protected.

	* driver/ftape/fc-10.c:
	Use the macros defined in fdc-io.h. FIXME: it shouldn't be necessary
	to enable the fdc at the end of probe_fc10() as this is done by
	fdc_reset().

	* contrib/tests/README, contrib/tests/bsftest.sh,
 	  contrib/tests/weof.c, contrib/scripts/README,
 	  contrib/scripts/listtape:
	Initial revision

	* contrib/gnumt/mt.c:
	Removed already commented out formatting stuff, MTIOCFTCMD
	ioctl. Don't print an error when MTIOCVOLINFO/GETSIZE fails as zftape
	is the only driver supporting these ioctls.

	* include/linux/list.h: This is missing in 2.0.30

	* Doc/html/Makefile:
	Finally got the dependencies right, and got rid of some broken symlink
	constructions.

	* Doc/html/.cvsignore: *** empty log message ***

	* Doc/html/up-arrow.gif, Doc/html/missing-arrow.gif,
 	  Doc/html/next-arrow.gif, Doc/html/prev-arrow.gif:

	Moved here from ../icons/*arrow*

	* Doc/icons/Attic/prev-arrow.gif, Doc/icons/Attic/up-arrow.gif,
 	  Doc/icons/Attic/missing-arrow.gif,
 	  Doc/icons/Attic/next-arrow.gif:
	Moved to the html subdir

Tue Sep  2 16:50:19 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* driver/ftape/ftape-ctl.c, driver/ftape/fdc-io.c:
	Shit happens: fixed a bug already present in ALL!! previous ftape
	versions: fdc_ready_wait() did check the FDC_READY bit, but forgot
	about the FDC_BUSY bit. Therefore new commands could be issued during
	the result phase! Happened in ftape_dumb_stop() on a slow machine.

	Also: need to reset the ft_interrupt_seen flag in fdc_reset() before
	calling fdc_interrupt_wait() and surround the reset code with a
	cli()/sti() pair. FIXME if the latter isn't really necessary.

	* driver/zftape/zftape-rw.c: Fixed another multi-line trace message

	* driver/ftape/ftape_syms.c: Removed all unnecessary symbols

Tue Sep  2 13:08:07 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* driver/ftape/ftape_syms.c: Removed all unnecessary symbols

	* include/linux/zftape.h, include/linux/ftape.h, RELEASE-NOTES:
	Filled in the current date.

	* ChangeLog:
	Changed to allow formatting of yet unformatted cartridges (in contrast
	to re-formatting of already formatted cartridges): if the qic standard
	is unknown, don't attempt to set the data rate. Instead, export
	ftape_calibrate_data_rate() as ksym and call it from FTFMTSETPARMS
	with the appropriate (i.e. desired) qic standard.

Tue Sep  2 11:30:59 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* driver/zftape/zftape-ctl.c, driver/ftape/ftape_syms.c,
 	  driver/ftape/ftape-read.h, driver/ftape/ftape-read.c,
 	  driver/ftape/ftape-io.h, driver/ftape/ftape-io.c,
 	  driver/ftape/ftape-ctl.h, driver/ftape/ftape-ctl.c:

	Changed to allow formatting of yet unformatted cartridges (in contrast
	to re-formatting of already formatted cartridges): if the qic standard
	is unknown, don't attempt to set the data rate. Instead, export
	ftape_calibrate_data_rate() as ksym and call it from FTFMTSETPARMS
	with the appropriate (i.e. desired) qic standard.

Mon Sep  1 23:18:32 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* include/linux/ftape.h, include/linux/zftape.h:
	Add date RCS tag to FTAPE_VERSION and ZFTAPE_VERSION for beta
	releases.

	* contrib/ftformat/ftfmt-tapelib.c:
	Print the newline before printing the error message in
	verify_cartridge().

	* driver/ftape/ftape-ctl.c:
	Add a missing newline for wakeup mismatch error message.

	* driver/ftape/ftape-format.c:
	verify_segment() shouldn't return an error when a segment has not a
	single good sector. This is why we verify, isn't it?

	* driver/ftape/ftape-rw.c: Removed a space at end of line ... silly.

Mon Sep  1 18:22:49 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* driver/zftape/zftape-ctl.c:
	mtiocwrftseg(): only wait for writes to complete when called with
	MT_FT_WR_SINGLE

	* contrib/ftformat/ftfmt-tapelib.c:
	Use MT_FT_WRITE_SINGLE when writing the last header segment to
	actually flush the buffers to tape.

	Always update the statistics in the header segment, even when the
	header segment haven't been read.

	* contrib/ftformat/ftfmt-bsm.c:
	Fixed a silly bug: forgot a "return;" in put_bsm_entry()

Mon Sep  1 14:04:19 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/ftformat.c, contrib/ftformat/ftfmt-tapelib.c:
	Moved the last low level qic command to ftfmt-tapelib.c

Mon Sep  1 12:06:49 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/ftfmt-options.c: Removed another annoying printf

	* Doc/texi/Testing.texi, Doc/texi/ftape.texi,
 	  Doc/texi/Loading.texi, Doc/texi/QuickInstall.texi,
 	  Doc/texi/Installation.texi, Doc/texi/Implementation.texi,
 	  Doc/texi/Bugs.texi:
	Started removing references to sftape and ftape-format. Update of
	MTWEOF documentation to reflect the changes of the VFS interface of
	zftape. Some additional index entries. Added a reference to the FAQ to
	the "Reporting Bugs" directory.

	* Doc/html/Makefile: Link the FAQ to the html dir.

	* Doc/dvi/Makefile: Let ftape.dvi depend on ../texi/ftape.texi

	* Doc/dvi/fix-makeinfo.sh: Add macro @ft2

	* RELEASE-NOTES: Fixed a typo.

	* FAQ: Make it look a little nicer (had a look at glibc's FAQ)

Sun Aug 31 22:01:28 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* tests/bsftest.sh, tests/weof.c, tests/.cvsignore:
	Initial revision. Very preliminary.

	* TODO, RELEASE-NOTES: Update for release of 3.04

	* MCONFIG:
	Let all *.o files depend on the toplevel MCONFIG file. This is
	necessary as MCONFIG set variables that result in different inclusions
	of header files etc.

	* Doc/dvi/Makefile: Remove *.texi.new files before creating them.

	* Doc/dvi/.cvsignore: Add ALL tmp files to .cvsignore

	* contrib/Makefile:
	Call the subdir clean: and realclean: target with NODEP=true to
	prevent endless regeneration of .*.d dependency files.

	* contrib/ftformat/ftfmt-tapelib.h, contrib/ftformat/ftformat.c,
 	  contrib/ftformat/ftfmt-tapelib.c:
	Commented out unnecessary printf() calls and added a final message
	after formatting has been finished successfully.

	* contrib/gnumt/Makefile: Added dummy realclean: target

	* contrib/swapout/.cvsignore, contrib/swapout/Makefile:
	Changed to support per-file dependencies.

	* driver/zftape/zftape-write.c, driver/zftape/zftape-write.h,
 	  driver/zftape/zftape-vtbl.c, driver/zftape/zftape-vtbl.h,
 	  driver/zftape/zftape-init.h, driver/zftape/zftape-read.c,
 	  driver/zftape/zftape-rw.c, driver/zftape/zftape-rw.h,
 	  driver/zftape/zftape-ctl.c, driver/zftape/zftape-eof.c,
 	  driver/zftape/zftape-eof.h, driver/zftape/zftape-buffers.c,
 	  driver/zftape/zftape-buffers.h:
	renamed ftape-hseg.h to ftape-header-segment.h and format_type to
	ft_format_type.

	Changes the volume table code to use a doubly linked list that
	dynamically grows as needed instead of the old static array.

	* driver/ftape/ftape-bsm.h, driver/ftape/ftape-ctl.h,
 	  driver/ftape/ftape-read.c:
	renamed ftape-hseg.h to ftape-header-segment.h and format_type to
	ft_format_type

	* driver/ftape/ftape-format.c:
	Experimentally surround the initial fdc setup with a cli/restore_flags
	pair.

	* driver/ftape/ftape-bsm.c: Some minor changes.

	* driver/ftape/fdc-io.c:
	Hold the cli() a bit longer when setting up the fdc for
	formatting. Have to think more about it.

	* driver/ftape/fdc-isr.c:
	Don't retry on no-data errors when verifying. This we might some
	sectors mark as bad that are actually good, but this is better than
	the other way round.

	* include/linux/Attic/ftape-hseg.h,
 	  include/linux/ftape-header-segment.h:
	Renamed ftape-hseg.h to ftape-header-segment.h

Sat Aug 30 14:30:33 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/ftfmt-tapelib.c, contrib/ftformat/ftformat.c,
 	  contrib/ftformat/ftfmt-bsm.c:
	Forgot to initialize the bad sector map. Renamed init_bsm() from
	init_bad_sector_map().

	* contrib/ftformat/.cvsignore, contrib/ftformat/Makefile:
	Added new source files and the new per-file dependency creation. Add
	the .*.d mask to .cvsignore

	* contrib/ftformat/ftformat.h, contrib/ftformat/ftformat.c,
 	  contrib/ftformat/ftfmt-tapelib.h,
 	  contrib/ftformat/ftfmt-options.c,
 	  contrib/ftformat/ftfmt-options.h,
 	  contrib/ftformat/ftfmt-tapelib.c, contrib/ftformat/ftfmt-bsm.c,
 	  contrib/ftformat/ftfmt-bsm.h:
	Finally a working version. Cleaned it up and broke it into several
	smaller pieces.

Wed Aug 27 20:51:27 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* driver/ftape/fdc-isr.c:
	Several small changes that or may not change something. Reduce indent
	level in handle_fdc_busy().

	* driver/ftape/ftape-ctl.c: Need to call virt_to_phys() for mmap().

	* driver/ftape/ftape-format.c:
	setup_format_buffer() didn't initialize buff->next_segment correctly.
	ftape_veriy_segment() didn't call ftape_abort_operation() and did
	initialize bsm to NULL, not *bsm to zero.

	* driver/ftape/ftape-tracing.h, driver/ftape/ftape-tracing.c:
	No need to path the trace level to ftape_trace_call() and
	ftape_trace_exit()! Check for it in the macro, and unneeded trace
	instances will be optimized away.

	* include/linux/mtio.h: Add write/read mode defines

	* include/linux/Attic/ftape-hseg.h: Removed wrong comment

	* driver/zftape/zftape-ctl.c:
	Renamed "union ftfmt_arg" to "union fmt_arg"

	* driver/zftape/Makefile, driver/ftape/Makefile, driver/Makefile,
 	  Makefile:
	Added rule for per source file dependency file to MCONFIG, include
	these files here, and remove .dep, depend and dep targets.

	* contrib/ftformat/ftformat.c:
	It finally works again (for QIC-80, non wide, non TR-1 cartridges)

	* MCONFIG: Added rule for per source file dependency file.

	* FAQ: Q:
	Where is the FAQ?
	A:
	Here!

	* Doc/dvi/fix-makeinfo.sh:
	Use one "sed" incocation with multiple substitution expressions, not
	multiple "sed" invocations with one substitution expression.

	* Doc/dvi/Makefile: Fixed dependencies, rewrote main target

	* driver/zftape/.cvsignore, driver/ftape/.cvsignore,
 	  contrib/swapout/.cvsignore, contrib/gnumt/.cvsignore,
 	  contrib/ftformat/.cvsignore, Doc/info/.cvsignore,
 	  Doc/dvi/.cvsignore:
	New, makes life much easier.

Fri Aug 22 21:29:17 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/ftformat.c:
	Implemented formatting. Still todo: verifying.

	* driver/zftape/zftape-ctl.c:
	tracks_per_cartridge is only a ONE byte value.

	* contrib/ftformat/ftformat.c:
	The auto-detection code should be ready now. It remains to code the
	formatting itself.

	* driver/zftape/zftape-ctl.c:
	report_operation() doesn't return a status (in mtioc_ftcmd)

Tue Aug 19 12:36:31 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/ftformat.c: First real auto-detect code.

	* driver/zftape/zftape-init.h, driver/zftape/zftape-eof.h,
 	  driver/ftape/ftape-bsm.h, driver/ftape/ftape-ctl.h,
 	  driver/ftape/Makefile:
	Moved include file ftape-hseg.h to include/linux/ftape-hseg.h

Sun Aug 17 23:50:12 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/ftformat.c:
	Started to work on the auto-detection code

	* driver/ftape/ftape-ctl.c:
	Removed extra "\n" from last line of multi-line trace messages.

	* include/linux/ftape-vendors.h: Add tape speed of 80 ips to Ditto 2GB

	* include/linux/Attic/ftape-hseg.h, driver/ftape/Attic/ftape-hseg.h:
	Renamed

Sat Aug 16 23:39:53 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* Makefile: Add a 'dep` target (as shortcut for depend:)

	* contrib/gnumt/mt.c:
	GOTSCHA!! Fixed a bug already there in the GNU cpio package: the
	remote tape server (/etc/rmt) support was broken: rtapelib.c returns
	the number of bytes returned by /etc/rmt after an ioctl, not zero!!
	"-1" in case of an error, BUT: everything >= 0 is perfectly in right
	and does NOT signal an error.

	* contrib/Makefile: Add depend: dummy target

	* driver/ftape/ftape-proc.c:
	Reflect changes in directory layout: Include <linux/qic117.h>, instead
	of "qic117.h"

	* driver/ftape/ftape-io.c:
	Undo change to wakeup_drive() don't try to de-select it if wakeup
	failed.

	* driver/ftape/fdc-isr.c, driver/ftape/fdc-io.c:
	ft_interrupt_seen isn't cleared any longer by fdc_command() if
	fdc_command() is called from inside the isr.

	* driver/zftape/zftape-init.c:
	change mmap stuff to work with recent dcache changes

Wed Aug  6 03:20:07 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/ftformat.c:
	Wrote tape_open() (and tape_close()) routine that performs basic
	checks after opening the tape device in r/w mode. Checks if we have a
	floppy tape device, if there is a cartridge inserted. Also tries to
	perform the mmap of the dma buffer.

	* include/linux/ftape-vendors.h:
	Added a nil-entry as last line to the vendor struct.

Mon Aug  4 14:35:33 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/ftformat/Makefile, contrib/ftformat/ftformat.c:
	First code skeleton for the user level formatting program. Mmap works!

	* driver/ftape/ftape-init.c:
	Removed last reference to sftape, decrease trace level to ft_t_bug
	while trying to get the dma buffers.

	* include/linux/zftape.h, include/linux/ftape.h,
 	  driver/ftape/ftape-tracing.h:
	Move FT_SIGNAL_EXIT() to ftape-tracing.h. Make the ftape and zftape
	version strings available to user level programs.

	* driver/ftape/ftape-ctl.c:
	ftape_mmap() would map all dma buffer to the start of the user
	buffer. Fixed.

	* ChangeLog: *** empty log message ***

	* include/linux/zftape.h, include/linux/ftape.h,
 	  include/linux/mtio.h, include/linux/qic117.h,
 	  include/linux/ftape-vendors.h, driver/zftape/zftape_syms.c,
 	  driver/zftape/zftape_syms.h, driver/zftape/zftape-write.c,
 	  driver/zftape/zftape-write.h, driver/zftape/zftape-rw.h,
 	  driver/zftape/zftape-vtbl.c, driver/zftape/zftape-vtbl.h,
 	  driver/zftape/zftape-read.c, driver/zftape/zftape-read.h,
 	  driver/zftape/zftape-rw.c, driver/zftape/zftape-eof.c,
 	  driver/zftape/zftape-eof.h, driver/zftape/zftape-init.c,
 	  driver/zftape/zftape-init.h, driver/zftape/zftape-ctl.c,
 	  driver/zftape/zftape-ctl.h, driver/zftape/zftape-compress.h,
 	  driver/zftape/zftape-buffers.h, driver/zftape/zftape-compress.c,
 	  driver/zftape/lzrw3.c, driver/zftape/lzrw3.h,
 	  driver/zftape/zftape-buffers.c, driver/zftape/Makefile,
 	  driver/ftape/ftape-tracing.h, driver/ftape/ftape-write.c,
 	  driver/ftape/ftape-write.h, driver/ftape/ftape_syms.c,
 	  driver/ftape/ftape_syms.h, driver/ftape/ftape-setup.c,
 	  driver/ftape/ftape-tracing.c, driver/ftape/ftape-read.h,
 	  driver/ftape/ftape-rw.c, driver/ftape/ftape-rw.h,
 	  driver/ftape/ftape-proc.c, driver/ftape/ftape-proc.h,
 	  driver/ftape/ftape-read.c, driver/ftape/ftape-io.c,
 	  driver/ftape/ftape-io.h, driver/ftape/Attic/ftape-hseg.h,
 	  driver/ftape/ftape-format.h, driver/ftape/ftape-init.c,
 	  driver/ftape/ftape-init.h, driver/ftape/ftape-ecc.c,
 	  driver/ftape/ftape-ecc.h, driver/ftape/ftape-format.c,
 	  driver/ftape/ftape-ctl.c, driver/ftape/ftape-ctl.h,
 	  driver/ftape/ftape-buffer.h, driver/ftape/ftape-calibr.c,
 	  driver/ftape/ftape-calibr.h, driver/ftape/ftape-bsm.h,
 	  driver/ftape/ftape-buffer.c, driver/ftape/ftape-bsm.c,
 	  driver/ftape/fdc-io.h, driver/ftape/fdc-isr.c,
 	  driver/ftape/fdc-isr.h, driver/ftape/fc-10.c,
 	  driver/ftape/fc-10.h, driver/ftape/fdc-io.c,
 	  driver/ftape/Makefile, driver/Makefile,
 	  contrib/swapout/Makefile, contrib/gnumt/Makefile,
 	  contrib/gnumt/mt.c, contrib/ftformat/Makefile, contrib/Makefile,
 	  Doc/texi/Makefile, Doc/info/Makefile, Doc/html/Makefile,
 	  Doc/dvi/Makefile, Doc/Makefile, Makefile, TODO, MCONFIG:
	Moved all the *.h .c files to driver/ftape and zftape/*.c zftape/*.h
	to driver/zftape. Updated Makefiles to reflect this change

	* Attic/mtio.h, Attic/qic117.h, Attic/ftape.h, Attic/ftape_syms.c,
 	  Attic/ftape_syms.h, Attic/ftape-vendors.h, Attic/ftape-write.c,
 	  Attic/ftape-write.h, Attic/ftape-setup.c, Attic/ftape-tracing.c,
 	  Attic/ftape-tracing.h, Attic/ftape-rw.h, Attic/ftape-read.c,
 	  Attic/ftape-read.h, Attic/ftape-rw.c, Attic/ftape-proc.c,
 	  Attic/ftape-proc.h, Attic/ftape-io.h, Attic/ftape-io.c,
 	  Attic/ftape-init.h, Attic/ftape-init.c, Attic/ftape-hseg.h,
 	  Attic/ftape-ecc.h, Attic/ftape-format.c, Attic/ftape-format.h,
 	  Attic/ftape-ctl.h, Attic/ftape-ecc.c, Attic/ftape-ctl.c,
 	  Attic/ftape-calibr.c, Attic/ftape-calibr.h, Attic/ftape-bsm.c,
 	  Attic/ftape-bsm.h, Attic/ftape-buffer.c, Attic/ftape-buffer.h,
 	  Attic/fdc-isr.h, Attic/fdc-io.h, Attic/fdc-isr.c,
 	  Attic/fdc-io.c, Attic/fc-10.c, Attic/fc-10.h:
	Moved into driver/ftape resp. driver/zftape

	* TODO: Just  a reminder for myself

	* RELEASE-NOTES:
	Updated for ftape-3.03b and added a preliminary update for ftape-3.04

	* Makefile, MCONFIG:
	Removed reference to the sftape and the ftape-format module. Added
	ftape-format.c to the list of ordinary source file in `Makefile'

	* contrib/gnumt/mt.c:
	Removed formatting support, will be a separate program

	* Attic/mtio.h, Attic/ftape-format.h, Attic/ftape-init.c,
 	  Attic/ftape_syms.c, Attic/fdc-isr.c, Attic/ftape-format.c:
	ftape-format no longer exists as a separate module; the low level
	formatting stuff is now folded into the ftape.o module, the ioctl
	interface into zftape.o. Is a lot cleaner this way. Moved most of the
	complicated stuff to the user space formatting process (auto probing,
	mode switching, computation of the sector coordinates, reading/writing
	of header segments)

	* Attic/ftape-read.h, Attic/ftape-write.h, Attic/ftape-read.c,
 	  Attic/ftape-io.c:
	Cosmetic changes, changed one comment or two and crowded the place
	with some space chars.

Sun Aug  3 18:09:21 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* Attic/mtio.h: Updated formatting ioctls

	* Attic/ftape_syms.c: Added ftape_mmap

	* Attic/ftape.h, Attic/ftape-tracing.h, Attic/ftape-write.c,
 	  Attic/ftape-setup.c, Attic/ftape-tracing.c, Attic/ftape-rw.h,
 	  Attic/ftape-rw.c, Attic/ftape-read.c, Attic/ftape-read.h,
 	  Attic/ftape-io.c, Attic/ftape-ctl.h, Attic/ftape-ecc.c,
 	  Attic/ftape-ctl.c, Attic/ftape-bsm.c, Attic/ftape-calibr.c,
 	  Attic/fdc-isr.c, Attic/fdc-io.h, Attic/fdc-io.c, Attic/fc-10.c:
	There are about 160 occurences  of "if (result < 0) return result;"
	Defined this as a macro. Defined FT_SIGNAL_EXIT(mask) to check for a
	signal and abort the current function in this case.

	* Attic/ftape-init.c, Attic/ftape-buffer.c:
	Loop until killed by signal when trying to allocate the dma buffers if
	we are a loadable module. We sleep 1/20 of a second before we try
	again. Mark dma buffers as reserved for mmap use.

Fri Aug  1 10:45:25 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* Attic/ftape_syms.c, Attic/mtio.h, Attic/ftape-proc.c,
 	  Attic/ftape-read.c, Attic/ftape-io.h, Attic/ftape-io.c,
 	  Attic/ftape-ctl.h, Attic/ftape-ctl.c, Attic/fdc-io.c:
	New MTIOCFTSETPARMS/GETPARMS ioctl in preparation for new formatting
	code. Needed to make ftape_qic_std modifyable via this ioctl,
	therefore ftape_qic_std was included into the ftape_info structure,
	settable via the ftape_set_parms() function.

Wed Jul 30 02:05:22 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/swapout/swapout.c: Cosmetic.

	* contrib/gnumt/mt.c:
	Added support for zftape's new MTIOCFTCMD ioctl to send raw qic-117
	commands to the drive, well this is really only intended for testing
	purposes.

	* contrib/gnumt/Makefile:
	Add the FTAPE_LOCATION to the include path to get the local include
	files correctly.

	* Attic/mtio.h:
	Added struct for sending raw qic-117 commands to the drive. Well, not
	really raw: the new ioctl handles commands + args and even commands
	that cause an answer by the tape drive (report_operation()). This has
	been done in preparation for the new, modified, better, galactic
	formatting code.

	* Attic/ftape-rw.c:
	Tried to fix infinite loops. At least ftape_wait_segment() had kind of
	a bug; it would never return -EINTR with a pending signal, but
	ftape_read_segment_fraction() expects this.

	* Attic/ftape-read.c: Some cosmetic in ftape_read_segment_fraction()

	* Attic/ftape-io.h, Attic/ftape-io.c:
	Fixed a bug in ftape_ready_wait(): when the tape is already in the
	ready state, don't return -EINTR whith a signal pending when we didn't
	sleep.

	* Attic/ftape-ctl.c:
	Only try to stop tape in ftape_disble() when the killing signal was
	sigint. A pending SIGKILL would cause too many tape operations to fail

	* Attic/fdc-io.c:
	Re-enable dma gate on std fdc when exiting and the std fdc shared
	either irq or dma with us.

Fri Jun  6 02:45:12 1997  Claus-Justus Heine  <Heine@physik.rwth-aachen.de (Claus-Justus Heine)>

	* Attic/fdc-io.c:
	We really need to catch a lonely stray interrupt in fdc_init(). Only,
	we should reset the number of the expected stray interrupts to
	zero. Once it has been reported the the number of expected stray
	interrupts was exploding.

Tue Jun  3 15:35:26 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape-vtbl.c, zftape/zftape-read.c:
	Finally fixed EOD handling. ftape-3.03a was broken: let people read
	past EOD.

	* zftape/zftape-write.c:
	Replace a 0xaa55aa55 by the corresponding macro "FT_HSEG_MAGIC"

	* ftape-vendors.h, ftape-read.c, ftape-hseg.h:
	Added experimental support for Ditto 2GB. The thing was figured out by
	Jochen Hoenicke <Jochen.Hoenicke@Informatik.Uni-Oldenburg.DE>. It was
	simply an encrypted bad sector map :-).

	* fdc-io.c:
	Disable the primary fdc controller not only when we use the same
 	dma (2) channell, but also when we use the same irq (6). This
 	seems to enable using Ditto Dash with with these settings
 	(reported by mannetje@best.ms.philips.com)

	* MCONFIG:
	Install the modules under /lib/modules/$(uname -r)/misc by default,
	not /lib/modules/misc. Add compile tyle switch for experimental
	Ditto 2GB support.

Thu May 29 19:05:39 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape-write.c: Exchange 0xaa55aa55 by the macro FT_HSEG_MAGIC

	* Doc/html/Makefile: Delete all symlinked files on "make realclean"

	* ftape-vendors.h, ftape-read.c, ftape-hseg.h:
	Start adding support for Ditto 2GB

	* Doc/html/Makefile:
	Remove all symlinked files when doing "make realclean"

Thu May 29 16:59:12 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape-vtbl.c, zftape/zftape-init.c,
 	  zftape/zftape-read.c, zftape/zftape-ctl.c, zftape/Makefile,
 	  sftape/sftape-init.c, sftape/Makefile, ftape-format/Makefile,
 	  contrib/gnumt/mt.c, ftape-bsm.c, ftape.h, mtio.h, Makefile,
 	  MCONFIG:
	Fixes to make it at least COMPILE with a 1.2.13 kernel.

	* ftape-vendors.h: Add tape speed for Iomega 700 and add new vendor for
	"PERTEC MyTape 3200"

	* ftape-ctl.c:
	Finally remove that confusing "unknown tape length" message

Tue May 20 14:50:33 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* .: Release version 3.03a

	* contrib/texi2www/texi2www:
	Add the title of the "up" node to the page header

	* Doc/html/Makefile:
	Symlink some header files into the html dir to access them with
	hyperlinks.

	* zftape/zftape-rw.c, contrib/kdtime/Attic/pidfile.h,
 	  contrib/kdtime/Attic/pidfile.c, contrib/kdtime/Attic/Makefile,
 	  contrib/kdtime/Attic/kdtime.c, contrib/Makefile,
 	  Doc/texi/ftape.texi, Doc/texi/QuickInstall.texi,
 	  Doc/texi/Loading.texi, Doc/texi/Introduction.texi,
 	  Doc/texi/Installation.texi, Doc/texi/Implementation.texi,
 	  Doc/texi/Documentation.texi, Doc/dvi/fix-makeinfo.sh, MCONFIG:
	Removed contrib/kdtime/kdtime. Was too much of a hack

Fri May 16 16:10:43 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape-format/ftape-format.c:
	I'm stupid. Finally hopefully really fixed formatting support for
	QIC-3010/3020.

Thu May 15 12:36:49 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/gnumt/mt.c: Make the output look nicer

	* fdc-io.c: typo

Wed May 14 09:55:20 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape-compress.c, zftape/zftape.h,
 	  ftape-format/ftape-format.h, Doc/texi/ftape.texi,
 	  Doc/dvi/fix-makeinfo.sh, ftape.h:
	Bump version to 3.03a (ftape.o), 2.03a (zftape.o), 1.00a
	(zft-compressor.o), 1.01 (ftape-format.o)

Wed May 14 09:19:19 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/Attic/Makefile.kernel, sftape/Attic/Makefile.kernel,
 	  patches/2.x.x/Attic/Configure-Ftape.help,
 	  patches/2.x.x/Attic/Makefile.char,
 	  patches/2.x.x/Attic/Config.in.char, Attic/Makefile.kernel,
 	  Attic/Config.in:
	Not needed for the separate module, need to rewrite them anyways for
	the forthcoming kernel version of ftape

Wed May 14 09:06:37 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* RELEASE-NOTES: Add release notes for bug-fix release 3.03a.

Tue May 13 17:06:22 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape-vendors.h:
	Added "Ditto 800" to ALL entries with 0x8880 vendor id

Tue May 13 15:42:05 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape-init.c, zftape/zftape-compress.c,
 	  ftape-format/ftape-format.c:
	Learned something new: even if we use can_unload() we must use
	MOD_INC_USE_COUNT at least once to set the flag MODE_USED_ONCE.
	Otherwise auto-un-loading won't work properly.

	* zftape/Makefile: Fix a type (TAG -> TAGS)

	* ftape-ctl.c: Added a comment

Tue May 13 14:16:56 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/swapout/Makefile, contrib/kdtime/Makefile,
 	  contrib/gnumt/Makefile, contrib/Makefile:
	Added copyright notice

	* zftape/zftape-write.c, zftape/zftape-vtbl.h, zftape/zftape-rw.h,
 	  zftape/zftape-vtbl.c, zftape/zftape-rw.c:
	Renamed zft_get_kdtime() to zft_get_time() and set default time to the
	59th second of the 59th minute of Sylvester 2097.

	* contrib/Makefile: Small cleanups.

	* Doc/texi/Installation.texi, Doc/texi/ftape.texi,
 	  Doc/texi/Documentation.texi:
	Documented uninstall target

	* zftape/Makefile, sftape/Makefile, ftape-format/Makefile,
 	  contrib/swapout/Makefile, contrib/kdtime/Makefile,
 	  contrib/gnumt/Makefile, Doc/texi/Makefile, Doc/sgml/Makefile,
 	  Doc/info/Makefile, Doc/html/Makefile, Doc/dvi/Makefile,
 	  Doc/Makefile, Makefile:
	Small cleanups.

	* MCONFIG:
	Moved SBINDIR variable from contrib/Makefile herein. Changed
 	definition of KERNELD_TIME feature to allow omitting compilation
 	of the kdtime utility. KERNELD_TIME commented out by default.

Mon May 12 11:17:06 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape-vtbl.c:
	Corrected hiding of old compression map volume. Forgot to add VTBL_EXT
	offset to EXT_ZFTAPE_CMAP index.

Mon May 12 09:44:51 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/texi2www/texi2www:
	Footnote back-reference hyper-link was broken. Fixed.

	* Doc/texi/Testing.texi:
	Add explanation and example about variable block size mode (zftape
	versus sftape)

	* Doc/texi/ftape.texi:
	Set FTDATE to "May 1997" and FTVERSION to 3.03 (forgot this for the
	main release)

	* Doc/dvi/fix-makeinfo.sh: Set date to May 1997

	* Doc/texi/Loading.texi:
	Clarify that the module locks itself in memory while the device is
 	open.

	* INSTALL: Replace reference to 'Testing' by `Testing ftape'

Mon May 12 08:08:12 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape-format/ftape-format.c:
	Fixed wrong detection of QIC-40 cartridges in select_format()

Sun May 11 19:19:10 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape-format/ftape-format.c:
	Refuse to format 1100ft "TR-1 Extra" cartridges with drives that don't
	support the "select format" QIC-117 command

	* zftape/zftape-ctl.c:
	Remove call to kdtime daemon to fetch current time when formatting

Sun May 11 19:02:48 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* ftape-format/ftape-format.c:
	Added support? for "TR-1 Extra" cartridges.  Set 1100ft format
 	instead of "variable length" format. What a mess!

	* Doc/html/Footer: Added some </P> end tags

Fri May  9 22:25:13 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape-vtbl.c:
	Hide the cmap volume to cope with taper's intolerance against
	non-taper volumes.

	* zftape/zftape-write.c:
	zftape_flush_buffers() had trace level set to ft_t_noise instead of
	ft_t_info

	* zftape/zftape-read.c:
	Fix a bug in handing of EOD when reading: return 0 when reading the
	first time past EOD, return 0 when reading the second time past EOD,
	return -EIO the third time.

	* Doc/texi/ftape.texi, Doc/texi/Loading.texi,
 	  Doc/texi/QuickInstall.texi, Doc/texi/Testing.texi,
 	  Doc/texi/Installation.texi, Doc/texi/Implementation.texi:
	Added a note not to use a kernel with ftape support compiled into the
	kernel image

	* MCONFIG: Add just another alternative for Ditto Dash's FDC_OPT

	* INSTALL:
	Add a note not to run a kernel with ftape support compiled into the
	kernel image

Mon May  5 01:25:05 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape-rw.c:
	zft_get_kdtime() was the one that caused the negative ftape_function_nest_level

	* zftape/zftape-compress.c, ftape-tracing.h, ftape-io.c,
 	  ftape-tracing.c, ftape-ctl.c, ftape-init.c, ftape-calibr.c,
 	  fdc-isr.c:
	Added some unnecessary "return" statements (without value) while
	tracing a negative function nest level. ftape_function_nest_level is
	again signed to find such `leaks'

	* fdc-io.c: Changed trace level of interrupt_wait() to ft_t_fdc_dma

Wed Apr 30 12:09:18 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-ctl.c:
	Lock module in memory when MTCOMPRESSION is active. Only respect
	MTCOMPRESSION when used with the non-compression devices.

	* Doc/texi/Loading.texi:
	Document module locking when MTCOMPRESSION is active

Wed Apr 30 10:52:19 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape.h, zftape/zftape-init.c, zftape/zftape-compress.c,
 	  sftape/sftape.h, sftape/sftape-init.c,
 	  ftape-format/ftape-format.h, ftape-format/ftape-format.c,
 	  ftape.h, ftape-init.c:
	Bump version to 3.03

	* Doc/dvi/Makefile:
	Finally fix the dependency of ftape.dvi from BROKENMAKEINFO

	* INSTALL, Doc/texi/QuickInstall.texi, Doc/texi/Documentation.texi:
	replace references to Doc/bin/texi2www by contrib/texi2www/texi2www

	* contrib/swapout/swapout.c, contrib/kdtime/kdtime.c,
 	  contrib/gnumt/mt.c:  
	Include RCS revision into the executable file

	* RELEASE-NOTES, README.PCI, INSTALL, ChangeLog: Spell-checkered

Wed Apr 30 07:10:42 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* Doc/texi/Introduction.texi, Doc/html/Makefile:
	Add reference to RELEASE-NOTES to documentation. Make it an url
 	when using html

	* Makefile:
	Added a `distclean:' target. Removes all backup files produced by
	emacs (i.e. *~) Use with caution ...

	* RELEASE-NOTES: Added two or three blank lines ...

	* contrib/texi2www/texi2www: Moved here from Doc/bin directory

	* sftape/sftape-read.c:
	Fix wrong handling of EOT condition. afio had problems with it.

	* zftape/Makefile, sftape/Makefile:
	Delete `default:' target because this seems to have a special meaning
	for `make'?

	* ftape-format/ftape-format.c:
	Cleanups to select_tape_format(). Set parms correctly for QIC-40
 	now (this is untested)

	* ftape-format/Makefile:
	Delete `default:' target because this seems to have a special
 	meaning for `make'?

	* contrib/gnumt/mt.c: Retension the cartridge before formatting it.

	* contrib/gnumt/mt.1: Spell checked

	* Doc/texi/QuickInstall.texi, Doc/texi/ftape.texi,
 	  Doc/texi/Installation.texi, Doc/texi/Implementation.texi,
 	  Doc/texi/Documentation.texi:
	Minor changes. Added note about formatting QIC-40 cartridges

	* Doc/html/Makefile:
	Update because texi2www has been moved to the contrib directory

	* Doc/dvi/Makefile: Create dvi file with `all:' target

	* Doc/Makefile: Removed `bin/' subdir

	* ftape-ctl.c:
	Initialize ft_drive_max_rate to zero in init_driver() This will
	trigger auto probing of the maximal usable transfer rate.

Tue Apr 29 23:10:30 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-io.c: Don't mention poll delay duration when tracing <= 4

	* ftape-bsm.c: Fixed debug code

	* MCONFIG: Prepared for final release

	* INSTALL: Add note not to move this package to the kernel source tree

	* RELEASE-NOTES: Added empty lines to increase readability

Fri Apr 25 22:25:23 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-rw.h, ftape-rw.c:
	Undo change to ft_location structure: don't use bit-fields.

Fri Apr 25 03:50:23 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape.h, zftape/zftape-compress.c, zftape/zftape-init.c,
 	  sftape/sftape.h, sftape/sftape-init.c,
 	  ftape-format/ftape-format.h, ftape-format/ftape-format.c,
 	  ftape.h, ftape-init.h:
	Bumped version to *.03-beta-2

	* RELEASE-NOTES, INSTALL: Spell-checks

Fri Apr 25 03:17:37 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Doc/texi/Testing.texi:
	Added a note why motion commands don't immediately result in tape
	motion

	* Doc/texi/Loading.texi: Fixed a page break

	* zftape/zftape.h, zftape/zftape-rw.h:
	Change the tape label to "Ftape - The Linux Floppy Tape Project!"
 	when erasing a cartridge!

	* Doc/texi/QuickInstall.texi, Doc/texi/Testing.texi,
 	  Doc/texi/ftape.texi, Doc/texi/Introduction.texi,
 	  Doc/texi/Loading.texi, Doc/texi/Installation.texi,
 	  Doc/texi/Implementation.texi, Doc/texi/Documentation.texi,
 	  Doc/texi/Bugs.texi:
	Hopefully final update of the `Testing' subsection. Tried to make
 	the printed manual look more nicely. FIXME. My English is UGLY.

	* Doc/info/Makefile:
	Removed `install.local' and `install.global' targets. `install.doc'
	now installs into the chosen info directory

	* Doc/info/dir:
	Add a local menu entry such that it is possible to include Doc/info
	into the private INFOPATH environment variable

	* Doc/html/Footer:
	Added `Up', `Prev', `Next' and `This' buttons, using the newly
	introduced substitution support of Doc/bin/texi2www

	* Doc/dvi/fix-makeinfo.sh:
	Fixed a bug introduced by adding of new macro substitutions

	* Doc/dvi/Makefile:
	BROKENMAKEINFO: target depends now on TeXinfo source, dvi target
	depends now only on BROKENMAKEINFO

	* Doc/bin/texi2www:
	Added label within menus. Activating the `up' button now jumps to the
	menu item corresponding to the current node. Added `this', `prev',
	`next' and `up' substitution to the footer code. This is used in
	ftape's footer to jump directly to the corresponding item in the main
	menu.

Tue Apr 22 12:41:29 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-init.c, sftape/sftape-init.c:
	Fix module locking: Don't decrease USE_COUNT if module already busy
	when trying to open it.

Tue Apr 22 12:10:16 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-vtbl.h, zftape/zftape-vtbl.c:
	Remove shadow of global variable zft_eof_map

	* zftape/zftape-init.c: Remove shadow of global variable old_sigmask

	* zftape/zftape-compress.c:
	Fixed a bug that could cause a kernel Oops: Must check for maximal
 	allowed block size to prevent writing over the bounds of the
 	zftc_buf buffer

	* sftape/sftape-read.c: Removed shadow of global variable sft_eofm

	* ftape-format/ftape-format.c:
	Remove global variables spt and tpc. Use ft_tracks_per_tape and
 	ft_segments_per_track instead after initializing them with
 	ft_decode_header_segment().

	* contrib/kdtime/kdtime.c:
	Use KDHDR macro to determine size of kerneld message
 	header. Include the kerneld.h from the Linux source tree specified
 	in MCONFIG

	* contrib/swapout/Makefile, contrib/kdtime/Makefile,
 	  contrib/gnumt/Makefile, contrib/Makefile:  
	Include top-level MCONFIG to get location of Linux source tree

	* qic117.h: Define the qic117 command set as an enum (-eration)

	* ftape-write.c, ftape-write.h: segment ids are signed.

	* ftape-rw.c, ftape-rw.h:
	Removed fast start struct (nowhere needed) segment ids are signed.

	* ftape-read.h, ftape-read.c: Used signed data type for segment ids

	* ftape-proc.c: Use size_t for strlen result

	* ftape-io.h, ftape-io.c:
	Rewrote the ftape_command() and ftape_parameter() thing. Was a bit
	unclean before.

	* ftape-ecc.h: Replaced unsigned char by __u8

	* ftape-ctl.h, ftape-ctl.c:
	used_header_segment etc. are again signed data types.

	* ftape-calibr.h, ftape-calibr.c:
	Replaced ushort by __u16. Make all timeout quantities unsigned

	* ftape-buffer.c: Use size_t for dmaalloc

	* ftape-bsm.h, ftape-bsm.c:
	All segment ids are signed quantifiers now. Makes life easier

	* fdc-isr.c:
	Removed some shadowing variable declarations (detected by -Wshadow)

	* fdc-io.h, fdc-io.c:
	removed volatile from fdc_mode_enum typedef. Use unsigned for all
	timeout values. Make ftape_current_cylinder volatile

	* fc-10.c: Exchanged ushorts by __u16

	* Makefile:
	Don't rely on the executable bit of MAKEDEV.ftape, run it explicitly
	with $(SHELL)

	* MCONFIG: make KERNELD_TIME definition available to subdir Makefiles

Fri Apr 18 15:23:48 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-ctl.c, zftape/zftape-read.c,
 	  zftape/zftape-compress.c, zftape/zftape-buffers.c:
	Fixed a big in fetch_segment that was caused by comparison of an
	unsigned value against zero

	* Doc/texi/Installation.texi, Doc/dvi/Makefile, ftape-tracing.h,
 	  ftape.h, ftape-rw.h, ftape-tracing.c, ftape-io.c, ftape-init.c,
 	  ftape-bsm.c, ftape-ctl.c, fdc-isr.c, fdc-io.h, fdc-io.c:
	started cleaning up my signed <-> unsigned mess

Thu Apr 17 16:03:33 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* Doc/texi/Loading.texi, zftape/zftape-ctl.c: Fixed a typo

	* zftape/zftape.h: Bump version to 2.03-beta-1

	* sftape/sftape.h: Bump version to 1.03-beta-1

	* ftape-format/ftape-format.h: Bump version to 1.00-beta-1

	* Doc/texi/ftape.texi, Doc/texi/Installation.texi:
	Added note about CONFIG_FT_PROC_FS

	* Doc/info/Makefile, Doc/html/Makefile:
	Remove *.texi when doing `make clean'

	* Doc/dvi/Makefile:
	Remove *.texi and BROKENMAKEINFO when doing `make clean'

	* Makefile: Removed silly "Hello World" from the doc target

	* ftape.h: Bump versions to 3.03-beta-1

	* MCONFIG:
	Add comment about CONFIG_FT_PROC_FS and comment out that little nice
	MODVERSIONS feature

	* mtio.h: Updated to kernel version 2.1.35

	* Doc/texi/Makefile, Doc/sgml/Makefile, Doc/info/Makefile,
 	  Doc/html/Makefile, Doc/dvi/Makefile, Doc/Makefile, Makefile:
	added a realclean target. I don't want to delete the pre-formatted
	document file with `make clean'

	* zftape/zftape-rw.c, zftape/zftape-ctl.c:
	Implemented kind of variable block size support. Needed to change
	zft_set_flags() slightly.

	* zftape/zftape-read.c: Just added a comment.

	* contrib/gnumt/mt.c:
	All ioctls have been moved to mtio.h, so there is no longer need for
	inclusion of ftape-format/ftape-format.h

	* Doc/texi/Testing.texi, Doc/texi/ftape.texi,
 	  Doc/texi/Installation.texi, Doc/texi/Loading.texi,
 	  Doc/texi/Indices.texi, Doc/texi/Implementation.texi,
 	  Doc/texi/Documentation.texi:
	Some updates. Rewrote kerneld section to make clear which commands
	lead to locking of the module stack.

	* Doc/dvi/Makefile:
	Replaced Usage.texi by Loading.texi, Testing.texi and
 	Implementation.texi

	* Doc/dvi/fix-makeinfo.sh:
	Added a couple of macros. Broken makeinfo ...

	* Makefile:
	Don't remove mtio.h by `make clean' because it is no longer a symlink
	to patches/2.x.x/mtio.h

	* ftape-hseg.h:
	Don't include <linux/types.h> Will make it easier to include to
	outside the kernel.

	* RELEASE-NOTES:
	Set date to today, add note about module locking when block size has
	been changed

	* Doc/texi/Implementation.texi:
	ioctl definition is now in mtio.h, no longer in zftape.h

	* zftape/zftape.h, sftape/sftape.h:
	Moved version macro into the __KERNEL__ section

	* patches/2.x.x/Attic/mtio.h: Moved to top of source tree

	* ftape-format/ftape-format.h: Only include <linux/ftape.h>

	* contrib/gnumt/mt.c: Changed MTIOCGETSET to MTIOCRDFTSEG

	* ftape.h: Moved ftape version macro into the __KERNEL__ section

	* mtio.h: Moved here from patches/2.x.x/mtio.h

	* zftape/zftape-compress.c:
	Forgot to revert an  `#if 0' after finishing testing.

	* zftape/zftape.h:
	So sorry, but MTIOCSETSEG was just to ugly a name. Renamed to
 	MTIOCWRFTSEG (write floppy tape segment). renamed `struct
 	mtsegment' to `struct mtftseg'. I doubt that anybody had made use
 	of these ioctls.

	* contrib/gnumt/mt.1:
	Added note about additional output of `mt status' when using zftape

	* Doc/texi/Testing.texi: This one still needs to be updated.

	* Doc/texi/QuickInstall.texi, Doc/texi/ftape.texi,
 	  Doc/texi/Introduction.texi, Doc/texi/Loading.texi,
 	  Doc/texi/Documentation.texi, Doc/texi/Installation.texi,
 	  Doc/texi/Bugs.texi:
	These should be mostly up to date now.

	* Doc/texi/Implementation.texi:
	This should be mostly up to date now. Added all new ioctls, noted
	changed behavior of ioctls

	* Doc/info/Makefile, Doc/html/Makefile:
	Split Usage.texi into Loading.texi Testing.texi and
 	Implementation.texi

	* Doc/bin/texi2www:
	Macro parsing was still broken. Maybe I should have fixed makeinfo
	instead ...
	@quotation environment wasn't properly implemented.
	Tried to fix missing insertion of paragraphs for @table environment

	* ftape.h: Fixed a typo

Wed Apr 16 18:35:46 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* Doc/bin/texi2www:
	Finally fixed macro parsing. Changed the menu code to use the
 	HTML-3 <TABLE> element. Looks _much_ nicer. Fixed paragraph (<P>)
 	handling for @tables (descriptive lists)

	* Doc/texi/ftape.texi, Doc/texi/Installation.texi,
 	  Doc/texi/QuickInstall.texi, Doc/texi/Documentation.texi,
 	  Doc/texi/Indices.texi:
	Various updates

	* Doc/texi/Testing.texi, Doc/texi/Loading.texi,
 	  Doc/texi/Implementation.texi:
	Split Usage.texi into the chapters Loading, Testing and
	Implementation. Added MTIOCFTFORMAT documentation

	* Doc/texi/Attic/Usage.texi:
	Split into the chapters Loading, Testing and Implementation

	* Doc/texi/ftape.texi, Doc/texi/Attic/Usage.texi,
 	  Doc/texi/Installation.texi, Doc/texi/Copying.texi,
 	  Doc/texi/Bugs.texi:
	Added macros for ftape version etc.

Mon Apr 14 10:13:29 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape.h, sftape/sftape.h, ftape-format/ftape-format.h:
	Set date to today

	* Doc/dvi/Makefile: Fixed typo

	* ftape.h: Set date to today

Sat Apr 12 16:08:49 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-compress.c:
	Forgot to change some zft_cmpr_ prefixes to zftc_ prefixes (buddy
 	conditional compiling)

	* ftape-format/ftape-format.c: IMPORTANT:
	Have to map 4 segments on certain tape tracks at BOT AND!!!!!!!
 	EOT as bad. Also, I swapped the 0.315in cartridge case with the
 	0.25in cartridge case :-( :-( :-(

	Corrected.

	* ftape-format/Makefile: Cosmetic (order of rules in the file)

	* Doc/texi/ftape.texi, Doc/texi/QuickInstall.texi,
	  Doc/texi/Usage.texi, Doc/texi/Installation.texi,
	  Doc/texi/Introduction.texi, Doc/texi/Bugs.texi,
	  Doc/texi/Documentation.texi:
	Spell-checkered (ispell)

Sat Apr 12 07:58:21 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/gnumt/mt.c: Start verifying at segment 0 not 8

	* Doc/texi/ftape.texi, Doc/texi/Usage.texi,
 	  Doc/texi/Introduction.texi, Doc/texi/Makefile,
	  Doc/texi/QuickInstall.texi, Doc/texi/Documentation.texi,
 	  Doc/texi/Installation.texi, Doc/texi/Bugs.texi:
	Some updates, a multitable and some formatting

	* Doc/info/Makefile: Updated for additional TeXinfo files

	* Doc/html/Makefile: Added footer support to html target

	* Doc/html/Footer:
	New. Adds a link back to the Top node from the bottom of every sub
 	node.

	* Doc/dvi/fix-makeinfo.sh: Now handle it in one BIG pipe

	* Doc/dvi/Makefile: Updated for additional TeXinfo source

	* Doc/bin/texi2www:
	This differs now in the following points from the original:

	- multitable support (Yeah!)
	- macro parsing (makeinfo is broken in this respect) :-(
	- Links to footnotes
	- Copyright notice on first page
	- <P> support fixed. Now it DOES insert a paragraph when it finds a
	  double newline
	- add @url and @email tags from TeXinfo-3.9
	- now can handle environments enclosed by @something{} commands

	* Doc/Makefile:
	Fixed @include statements for TeXinfo source, needed to introduce
 	additional files.

	* Makefile: Removed --no-print-directory from install target

	* MAKEDEV.ftape:
	Changed back again to $((1+2)) construct, removed `expr'. Don't
 	create links /dev/ftape -> /dev/rft0

	* INSTALL: Add reference to QuickInstallation chapter of documentation

Thu Apr 10 12:03:20 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* Doc/texi/ftape.texi, Doc/texi/QuickInstall.texi,
 	  Doc/texi/Usage.texi, Doc/texi/Introduction.texi,
 	  Doc/texi/Makefile, Doc/texi/Indices.texi,
 	  Doc/texi/Installation.texi, Doc/texi/Copying.texi,
 	  Doc/texi/Bugs.texi, Doc/sgml/linuxdoc-sgml.sty,
 	  Doc/sgml/qwertz.sty, Doc/sgml/ftape.tex, Doc/sgml/isolatin.sty,
 	  Doc/sgml/Makefile, Doc/sgml/ftape.sgml, Doc/info/Makefile,
 	  Doc/info/dir, Doc/html/Makefile, Doc/dvi/Makefile,
 	  Doc/dvi/fix-makeinfo.sh, Doc/bin/texi2www, Doc/Makefile,
 	  Makefile, INSTALL: 
	Restructured Documentation directory, changed to use texi2www by
 	Tim Singletary.

	* zftape/zftape-write.c, zftape/zftape-init.h,
 	  zftape/zftape-read.c, zftape/zftape-init.c,
 	  zftape/zftape-compress.h, zftape/zftape-ctl.c,
 	  zftape/zftape-compress.c:
	Traced "modules aren't locked bug". Was a silly thing introduced
 	by the use of the `can_unload' feature of post 2.1.18 modutils. My
 	can_unload() did check that the header segments etc. were
 	up to date, but didn't check if the device was opened by the
 	user. @&%/$\?!$¶"° :-<

	* ftape-format/ftape-format.c:
	Keep module locked initially until init_module() has finished. Not
 	very important, I think.

	* MCONFIG, zftape/Makefile, sftape/Makefile,
 	  ftape-format/Makefile, Makefile:
	Changed dependencies dependence: now dependencies are refreshed if
 	one of the source or header files is modified. Shouldn't concern
 	anybody but me.

	Fixed usage of `install' command: `silly me' didn't didn't specify
	permissions and ownership.

	* contrib/kdtime/kdtime.c, contrib/kdtime/Makefile:
	Added pidfile `/var/run/kdtime.pid'. This makes it possible to run
 	kdtime for example from modprobe (with /etc/conf.modules
 	configuration)

	* contrib/gnumt/mt.1:
	Document `ftformat command'. Make the meaning of MTBSF etc. a bit
 	clearer (hopefully).

	* contrib/gnumt/mt.c:
	Changed printf slightly for status command. Now reports at least
 	that it has found a floppy tape drive if drive vendor is unknown.

	* contrib/kdtime/pidfile.c, contrib/kdtime/pidfile.h:
	Stolen from sysklogd-1.3. Used to inhibit multiple invocations of
 	kdtime

	* Doc/texi/ftape.texi, Doc/texi/Usage.texi,
 	  Doc/texi/Installation.texi, Doc/texi/Copying.texi,
 	  Doc/sgml/copying.sgml, Doc/info/dir, Doc/icons/toc.gif,
 	  Doc/icons/up-arrow.gif, Doc/icons/prev-arrow.gif,
 	  Doc/icons/prev.gif, Doc/icons/next-arrow.gif,
 	  Doc/icons/next.gif, Doc/icons/missing-arrow.gif, Doc/Makefile:
	Moved documentations to Doc directory

Sun Apr  6 17:28:06 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* fdc-isr.c, fdc-io.c:
	Finally fix the interrupt_wait() stuff. Don't forget to set
 	TASK_RUNNING after having tried to sleep (maybe we didn't sleep at
 	all!). Restore the ft_interrupt_seen variable when exiting the isr
 	routine. THIS was the cause of the "unexpected schedule exit
 	pseudo bug".

	* ftape-ctl.c:
	Added a ftape_dumb_stop() to ftape_disable() when tape is still
	running after having been killed by a signal.

Sun Apr  6 10:09:18 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/Makefile, sftape/Makefile, ftape-format/Makefile:
	Let the file .depend on the sources and headers.

	* zftape/zftape-write.c, zftape/zftape-vtbl.h,
 	  zftape/zftape-vtbl.c, zftape/zftape-rw.c, zftape/zftape-read.c,
 	  zftape/zftape-init.h, zftape/zftape-init.c, zftape/zftape-eof.c,
 	  zftape/zftape-ctl.c, zftape/zftape-compress.c,
 	  zftape/zftape-buffers.c, sftape/sftape-write.c,
 	  sftape/sftape-init.c, sftape/sftape-read.c, sftape/sftape-eof.c,
 	  sftape/sftape-ctl.c, ftape-format/ftape-format.c, ftape-write.c,
 	  ftape-tracing.h, ftape-setup.c, ftape-rw.h, ftape-rw.c,
 	  ftape-read.c, ftape-io.c, ftape-ecc.c, ftape-calibr.c,
 	  ftape-bsm.c, fc-10.c:
	Removed the last occurences of numeric trace levels. Removed
 	macros TRACEi and TRACElx in favour of the simple TRACE.

	* fdc-isr.h, fdc-isr.c, fdc-io.h, fdc-io.c:
	Finally found and fixed the "unexpected schedule" pseudo
 	bug. Removed unused variable fdc_confused. Fixed
 	ftape_expected_stray_interrupts growing ad infinity. New function
 	fdc_command_for_isr() that does NOT set ft_interrupt_seen to 0
 	(this was the reason for "unexpected schedule exit")

	* ftape-init.c: Moved dma memory allocation to ftape-buffer.c

	* INSTALL: Fixed typos.

	* ftape-ctl.h, ftape-ctl.c:
	Change the global data structure to contain the actual and the
 	maximal transfer rate for fdc and tape drive. To be displayed by
 	the proc code. Prepend multi-line traces with a KERN_INFO in each
 	line because omitting seems to have confused a sysklogd daemon in
 	at least one case

	* Makefile:
	Add the ftape-buffer.c and the ftape-proc.c file, let .depend
 	depend on the sources and header files.

	* MCONFIG:
	Move pathname definitions to the top, new option CONFIG_FT_PROC_FS
 	to determine whether the proc interface should be compiled.

	* MAKEDEV.ftape:
	Install tape devices with mode 600 (r/w only for the owner)

	* ftape_syms.c:
	Export new function ftape_set_nr_buffers() and new variable proc_ftape
	for procfs support.

	* ftape-proc.h, ftape-proc.c: Proc interface for ftape

	* ftape-buffer.h, ftape-buffer.c: Dynamic dma buffer allocation

Fri Apr  4 10:11:40 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* info/ftape.texi, info/Usage.texi, info/Installation.texi:
	First (or second) attempts to update the documentation.

	* ftape-format/ftape-format.c:
	Fixed formatting for long tapes. The buffer switching algorithm
 	was broken, introduced new global variable next_format_segment to
 	remember the starting segment for the next dma buffer.

	* INSTALL:
	Added some quick installation hints. Hopefully this file is more
	readable now.

	* fdc-io.c:
	Don't bail out if check_region() fails and BROKEN_FLOPPY_DRIVER is
	defined. The kernel floppy driver should be fixed!

	* MCONFIG:
	Moved the FDC_OPT configuration to the top of the file because this is
	the most important setting.

Wed Mar 26 22:49:19 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* patches/2.x.x/floppy.c.dif:
	Initial version of a patch that makes the floppy driver check
 	whether another module already uses the floppy controller

	* info/Attic/kernel-patches.texi, info/Attic/compilation.texi,
 	  info/Attic/devices.texi, info/ftape.texi, info/Usage.texi,
 	  info/Linux-1.2.13.texi, info/Makefile, info/Introduction.texi,
 	  info/Installation.texi:
	Started updating the documentation

	* MAKEDEV.ftape:
	Finally exchanged the bash $[ ... ] constructs against `expr'
	statements. Oh, yes, I know. This already was suggested by Guido
	Muesch *_AGES_* ago.

	* zftape/Makefile, sftape/Makefile, ftape-format/Makefile,
 	  contrib/swapout/Makefile, contrib/kdtime/Makefile,
 	  contrib/Makefile, Makefile, MCONFIG:
	Added an install: target to all Makefiles

Fri Mar 21 11:32:18 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape-compress.c, ftape-format/ftape-format.c:
	Keep the module initially unlocked, not locked.

Fri Mar 21 10:01:16 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape.h: Set version to 2.03

	* sftape/sftape.h: Set version to 1.03

	* ftape-format/ftape-format.c, contrib/gnumt/mt.c:
	MTIOCFTFORMAT, operation FTFMT_PROGRESS, now returns -EAGAIN when
 	runner is aborting and buff->status != error. This provides means
 	to signal the user level program that the formatting isr code
 	might have missed a segment or some sectors and the user level
 	program should retry formatting the track.

	* ftape-format/ftape-format.h: Set version to 1.00.

	* RELEASE-NOTES: Add release notes for version 3.03

	* ftape.h: Set version to 3.03

	* ftape-write.c:
	Don't call ftape_abort_operation() in write_segment() when runner is
	stopping because this also zaps the dma buffers.

	* ftape-rw.c:
	Undo change to ftape_dumb_stop(): again set ft_runner_status to idle

	* ftape-ctl.c:
	Call ftape_abort_operation() instead of ftape_dumb_stop() when tape is
	still winding when closing the tape device.

	* fdc-io.c:
	Added `udelay(10)' before resetting fdc. Does this fix the `drive may
	hang messages'?

	* fdc-isr.c: Set buff->status = error when error during formatting

Mon Mar 10 17:48:00 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* zftape/zftape-ctl.c:
	Consult the kdtime daemon for the current time when finishing
	formatting a tape

	* ftape-format/ftape-format.c:
	Changed numeric trace level to symbolic (1 <-> ft_t_err)

	* zftape/zftape-ctl.c:
	Allocate the header segment buffer before trying to format a
	cartridge. Call zft_init_driver() in any case after MTRESET.

	* ftape-ctl.c: Changed numeric trace level against symbolic

Mon Mar 10 14:03:30 1997  Claus-Justus Heine  <claus@momo.math.rwth-aachen.de (Claus-Justus Heine)>

	* contrib/gnumt/Makefile:
	Add location of kernel source tree as make variable

	* ftape-format/ftape-format.c,
	  ftape-format/ftape-format.h,
	  contrib/gnumt/mt.c:
	Change mtftformat structure: remove fields tpc and spt, pass this
	values in ftfmt_trk and ftfmt_seg (formerly ftfmt_track and
	ftfmt_segment).

	* zftape/zftape-rw.c:
	int zft_erase(): update label only if erasing old ftape (sftape)
 	  cartridge.

	* fdc-io.c: Tell me the status of jagvi if unexpected  schedule exit.

	* MCONFIG:
	Added the location of the kernel source tree as a make variable.

Sun Mar  9 23:51:37 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-ctl.c, fdc-isr.c:
	Call some trace macros with the ft_trace_t enum types instead of
	numbers.

	* ftape_syms.c:
	Only export tracing stuff when CONFIG_NO_TRACE_AT_ALL is NOT
	defined.

	* ftape-tracing.h:
	Forgot to set pair of `"' when CONFIG_FT_NO_TRACE_AT_ALL was defined.

	* ftape-rw.c: Don't set the runner_state to idle in ftape_dumb_stop().

	* ftape-format/ftape-format.c, ftape-read.c:
	Forgot to re-set the state after calling ftape_abort_operation() which
	sets the driver state to `idle'

	* contrib/gnumt/Makefile, contrib/gnumt/mt.c:
	Include <linux/mtio.h> directly, add DEFTAPE to Makefile. Was
	necessary because glibc comes with its own header-files that doesn't
	include the latest  kernel hacks.

	* zftape/Makefile, sftape/Makefile, ftape-format/Makefile, Makefile:
	Let object files depend on MCONFIG

Thu Mar  6 16:12:22 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape_syms.c, zftape/zftape-ctl.c, zftape/zftape-ctl.h:
	Updated for new Makefile scheme.

	* contrib/gnumt/mt.c: Include ftape-format.h, not ftfmt-format.h

	* contrib/Makefile: Added kdtime subdir.

	* ftape-format/ftape-format.c: Small fixes to make it compile

	* contrib/kdtime/kdtime.c,
	  contrib/kdtime/kdtime,
	  contrib/kdtime/Makefile:
	Kerneld daemon to pass the broken down time as returned by the
	gmtime() libc function back to the kernel.

	* zftape/Attic/Makefile.module, zftape/Makefile,
	  sftape/Attic/Makefile.module, sftape/Makefile,
	  ftape-format/Attic/Makefile.module, ftape-format/Makefile,
	  Attic/Makefile.module, Makefile, MCONFIG: 
	Renamed Makefile.module instances to Makefile. The package won't
	include optional kernel inclusion anymore; this will be done
	separately.

Wed Mar  5 23:35:30 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape_syms.c, Attic/Makefile.module, ftape-init.c:
	use can_unload for kernel that support it. Prepare for kernel
 	inclusion by adding ifdef's for CONFIG_SFTAPE/ZFTAPE/FTAPE_FORMAT
 	etc.

	* ftape-bsm.h, ftape-bsm.c: Include ftape-hseg.h instead of ftape-fsl.h

	* ftape-hseg.h:
	Fixed a bug in the FTAPE_TIME_STAMP macro (misspelling * <-> +)

	* zftape/zftape-ctl.c:
	Change registration of formatting routine to prepare for kernel
 	inclusion.

	* zftape/zftape-init.h: Include ftape-hseg.h instead of ftape-fsl.h

	* zftape/Attic/Makefile.module, zftape/zftape-write.c,
	  zftape/zftape-vtbl.h, zftape/zftape-vtbl.c, zftape/zftape-rw.h,
	  zftape/zftape-rw.c, zftape/zftape-read.c:
	Added experimental code for using the kerneld message channels to
 	obtain broken up time stamps from user space. Needs special
 	kerneld daemon that sends us the result of gmtime().

	* zftape/zftape_syms.c:
	Changed conditional compilation macros. No longer necessary to define
	symbols twice

	* zftape/zftape-init.c, zftape/zftape-compress.c:
	Use can_unload for kernels that support it

	* sftape/sftape-eof.c, sftape/sftape-init.h,
	  sftape/Attic/Makefile.module: 
	Changed includes of ftape-fsl.h to ftape-hseg.h

	* contrib/gnumt/mt.c:
	Moved definition of QIC data encoding to ftape-hseg.h and renamed
	FTFMT_TIME_STAMP to FTAPE_TIME_STAMP

	* ftape-format/Attic/ftfmt-init.h,
	  ftape-format/Attic/ftfmt-format.h,
	  ftape-format/Attic/ftfmt-init.c,
	  ftape-format/Attic/ftfmt-format.c, ftape-format/ftape-format.c,
	  ftape-format/ftape-format.h, ftape-format/Attic/Makefile.module:
	Renamed ftfmt-... to ftape-... and removed ftfmt-init.c/h

Tue Mar  4 12:44:16 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-read.c, zftape/zftape-rw.c, zftape/zftape-init.c,
	  zftape/zftape-init.h, zftape/zftape-eof.c, zftape/zftape-eof.h,
	  ftape-format/Attic/ftfmt-format.h,
	  ftape-format/Attic/ftfmt-format.c: 
	Changed to use the macros defined in ftape-hseg.h

	* ftape_syms.c:
	Changed conditional compilation (different kernel versions).

	* ftape-read.c, ftape-rw.h, ftape-ctl.h, ftape-bsm.c:
	Updated to benefit from new definitions in ftape-hseg.h

	* ftape-io.h:
	Removed declaration of ftape_interrupt_wait() as this routine belongs
	to fdc-io.c

	* Attic/ftape-fsl.h: Removed. Contents moved to new file ftape-hseg.h

	* ftape-hseg.h:
	New. Contains the offsets to different values in the header
 	segment as well as the format code defs and QIC-80 time and date
 	encoding

	* fdc-io.h, fdc-isr.c, fdc-io.c:
	Introduce new global variable jagvi_ftape (just another global
 	variable in ftape) to test my idea of getting that unexpected
 	schedule exit bug.

Thu Feb 27 15:19:22 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* Attic/Makefile.module: Added ftape-format to clean target

Thu Feb 27 03:40:28 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape.h, ftape_syms.c, ftape-rw.c, ftape-read.c, ftape-io.c,
 	  ftape-init.c, ftape-ecc.c, ftape-ctl.c, ftape-ctl.h,
 	  ftape-calibr.c, fdc-io.h, fdc-isr.c, fdc-io.c, Makefile.module:
	removed references to macro FTAPE_SEL, is now a global
	variable. Finished eliminating VFS interface from the hardware module.

	* zftape/zftape_syms.c, zftape/zftape-write.c, zftape/zftape-rw.c,
 	  zftape/zftape-rw.h, zftape/zftape-read.h, zftape/zftape-read.c,
 	  zftape/zftape-init.c, zftape/zftape-init.h, zftape/zftape-eof.c,
 	  zftape/zftape-eof.h, zftape/zftape-ctl.c, zftape/zftape-ctl.h,
 	  zftape/zftape-compress.c, zftape/zftape-buffers.c,
 	  zftape/Makefile.module:
	Removed remaining references to "ftape-interface.h"

	* sftape/sftape.h, sftape/sftape-write.c, sftape/sftape-write.h,
 	  sftape/sftape-rw.c, sftape/sftape-rw.h, sftape/sftape-read.c,
 	  sftape/sftape-read.h, sftape/sftape-init.c,
 	  sftape/sftape-init.h, sftape/sftape-eof.c, sftape/sftape-eof.h,
 	  sftape/sftape-ctl.c, sftape/sftape-ctl.h:
	VFS interface has been removed from the hardware base module to
	zftape/sftape

	* contrib/gnumt/mt.c:
	change include of "vendors.h" to "ftape-vendors.h"

	* ftape-format/ftfmt-init.c, ftape-format/ftfmt-init.h,
 	  ftape-format/ftfmt-format.h, ftape-format/ftfmt-format.c:	
	Minor cleanup.

Wed Feb 26 17:48:18 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-vtbl.c, zftape/zftape-vtbl.h, zftape/zftape-rw.c,
 	  zftape/zftape-rw.h, zftape/zftape-eof.c,
 	  zftape/zftape-buffers.c:
	Updated to name space changes

	* zftape/zftape.h: Define the zftape startup version string as a macro

	* zftape/zftape-write.h, zftape/zftape-read.h,
 	  zftape/zftape-write.c, zftape/zftape-init.h,
 	  zftape/zftape-read.c, zftape/zftape-ctl.h, zftape/zftape-init.c,
 	  zftape/zftape-ctl.c:	
	The interface to the kernel VFS layer has been moved to the
	sftape/zftape front ends

	* patches/2.x.x/mtio.h: rename vendors.h ftape-vendors.h

	* ftape-format/ftfmt-format.c:
	Renamed "byte" to "__u8", some other name space changes

	* Makefile.module: Updated to compile the renamed files.

	* qic117.h, ftape.h, ftape_syms.c, ftape-rw.h, ftape-setup.c,
 	  ftape-rw.c, ftape-io.c, ftape-io.h, ftape-bsm.h, fdc-isr.c,
 	  ftape-bsm.c, fdc-io.h, fdc-io.c, fc-10.c:	
	Removed "typedef __u8 byte" from ftape.h. Maybe silly. Was a nice
 	name but I don't think that we should shadow such a basic type.

	* ftape-write.c, ftape-read.c, ftape-ctl.c, ftape-ctl.h:
	Moved the VFS interface code to the sftape/zftape submodules

	* Attic/ftape-interface.c, Attic/ftape-interface.h:
	No ftape_register() is necessary any more.

	* Attic/tracing.h, Attic/vendors.h, Attic/kernel-interface.c,
 	  Attic/kernel-interface.h, Attic/tracing.c, ftape-tracing.h,
 	  ftape-vendors.h, ftape-init.h, ftape-tracing.c, ftape-init.c,
 	  ftape-ecc.c, ftape-ecc.h, ftape-calibr.c, ftape-calibr.h,
 	  Attic/ecc.c, Attic/ecc.h, Attic/calibr.c, Attic/calibr.h:
	Prepended some files with an "ftape-" prefix. Also,
 	kernel-interface.c/.h has been renamed to ftape-init.c/h because
 	the kernel VFS interface code now has entirely removed from the
 	low level hardware module and can now be found in the front ends
 	sftape/zftape.

	* zftape/zftape-eof.c:
	Null terminate tape label string when printing it

	* ftape-format/ftfmt-format.h, ftape-format/ftfmt-format.c:
	Fixed my silly idea how ftfmt_erase_track() should work, did erasure
	two times.

	* ftape-bsm.c: Changed initialization of a variable to make GCC happy

Tue Feb 25 23:31:00 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* contrib/gnumt/mt.c:
	Removed some unnecessary line feeds (when formatting).

	* ftape-format/ftfmt-format.c:
	Call ftape_abort_operation() after reading header segment. Cures
 	fdc not ready warning (by calling ftape_ready_wait()). Fixed bad
 	segment mappings for QIC-3010/3020 tapes. Fixed silly bug, last
 	data segment always was set to be one BELOW the first data
 	segment.

	* ftape-bsm.h, ftape-bsm.c:
	Introduced new type `SectorCount' which essentially is a integer
 	of three byte width. ftape_put_bad_sector_entry() was buggy. Did
 	shift remaining eof map only one byte to the top is inserting bad
 	sector somewhere in the middle. Tried to hand optimize
 	get_sector() and put_sector() a little bit. Declared them
 	inline. Generally, favored a simple `return from function as soon
 	as possible' scheme. This spares some variable assignments.

	* fdc-isr.c:
	Trace message in retry_sector() would always report write mode. Fixed.

Mon Feb 24 23:38:05 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-format/ftfmt-format.c, ftape-format/ftfmt-format.h:
	To many changes. De facto a new implementation of the formatting
 	support. Uses a quite fine grained ioctl intercase (separate
 	issuing of writing reference burst, formatting single tracks,
 	verifying single segments).

	* ftape-format/ftfmt-init.c:
	The format hook function is now defined in ftfmt-format.c

	* ftape-read.c:
	Removed code fragments that were dealing with verifying. Verifying
 	has been moved to the formatting submodule.c

	* ftape-write.c, ftape-write.h:
	Added code for supporting writing of deleted data.

	* ftape-ctl.c, ftape-ctl.h:
	Removed format ioctl. Declare ftape_get_status() to return a
 	pointer that points to constant data.

	* fdc-isr.c, fdc-io.h:
	Added the necessary conditions and code s.t. ftape can use the fdc
 	in verify mode to verify the format of a cartridge. Add mode for
 	writing deleted data.

	* Attic/ftape-interface.c, Attic/ftape-interface.h:
	Changed name and type of ftape_format_func once again

	* ftape-rw.h, ftape-rw.c:
	Added function ftape_set_state() to set the module's i/o state

	* ftape_syms.c:
	Added some symbols necessary for supporting formatting module

	* ftape-bsm.c: Cosmetics

	* fdc-io.c:
	Fold ftape_setup_formatting() into ftape_setup_fdc_and_dma()

	* Makefile.module: Add target for formatting module

	* contrib/gnumt/mt.c: Add call to formatting ioctls.

	* zftape/zftape-ctl.c: Add formatting ioctl

	* zftape/zftape-write.c, zftape/zftape-rw.c, zftape/zftape-read.c:
	Remove some useless calls to ftape_zap_read/write_buffers()

Fri Feb 21 13:26:34 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* Attic/vendors.h:
	Add drive speed for PERTEC MyTape 800 and make code for Aiwa

Fri Feb 21 12:43:46 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-format/ftfmt-format.c,
	  ftape_syms.c, ftape-write.c, ftape-rw.h, ftape-rw.c,
 	  ftape-read.c, ftape-io.c, ftape-ctl.c:
	Make `buffer_struct ft_buffer[]', ft_tail and ft_head local to
	ftape-rw.c. Modified ftape_next_buffer() and introduced
	ftape_get_buffer() and ftape_reset_buffer() to modify the cyclic
	buffer queue in a more controlled way. Also, this reduces the number
	of global variables we have to pass to the formatting module.

	* fdc-isr.c:
	continue_xfer() and retry_sector() don't need the pointer to the head
	buffer of the buffer queue. Their modifications
	(i.e. ftape_next_buffer()) are not used by the calling routines.

	Also, bail out in continue_xfer() if skip is set.

Thu Feb 20 12:49:38 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-write.c, zftape/zftape-vtbl.h, zftape/zftape-vtbl.c:
	Only allow writes when at BOT or EOD (see zft_check_write_access() in
	file zftape-ctl.c) Remove some inline functions.

	* zftape/zftape-rw.c:
	Use zft_clear_ftape_file_marks() to erase old ftape's eof marks

	* zftape/zftape-read.c:
	Enter defined idle state with zft_def_idle_state() if the previous
	tape access was not a read access.

	* zftape/zftape-eof.h, zftape/zftape-eof.c:
	New function zft_clear_ftape_file_marks() which erases the failed
	sector log used by the old ftape to emulate file marks.

	* zftape/zftape.h: 
	Changed the MTIOCVOLINFO ioctl back from using __u64 integers to
 	report data in KB rather than bytes. Makes more sense and is more
 	portable.

	* zftape/zftape-ctl.h, zftape/zftape-ctl.c:
	New function: zft_check_write_access().
	Check whether a write is allowed with the current file access mode,
	tape position and hardware status of the tape (including soft write
	protect with MTOFFL and protection of old (pre 3.xx) ftape written
	cartridges when not at BOT.
	See comment at beginning of that function for explanation.
	Made zft_def_idle_state() a global function. Needed somewhere.

	* sftape/sftape-ctl.c:
	Issue flush_buffer() calls before executing seek commands

	* sftape/Makefile.module:
	-DMODVERSIONS is needed when compiling with 2.1.** kernels and
	versioned symbols

	* patches/2.x.x/mtio.h: MTIOCVOLINFO now reports KB rather than bytes

	* ftape-format/ftfmt-init.c,
	  ftape-format/ftfmt-format.c,
	  ftape-format/ftfmt-format.h:
	Move the fdc command to continue formatting in the isr. Was too slow
	here. We only issue the initial command for the first segment. This
	causes an interrupt when the segment is finished. The isr then sets up
	for the next segment.

	* contrib/gnumt/mt.c:
	Take care of the changed volinfo ioctls, which reports it's results in
	KB rather than bytes.

	* ftape_syms.c: Added some symbols for the formatting code.

	* fdc-isr.c:

	New functions determine_fmt_progress() and
 	continue_formatting(). We need to implement part of the formatting
 	stuff in the isr routine. Timing is rather critical. The interrupt
 	comes after finishing a segment. Then one must setup for the next
 	segment (the tape continues streaming, retries are not
 	possible). It wouldn't work with simply waking up the formatting
 	process, seems to take too long.

	Also large tapes need more than 32 kb off dma info for one tape
 	track, so we need that buffer cycling stuff. (one needs 4*32 bytes
 	of dma transfer per segments; this yields 250 segments per 32 kb
 	dma buffer).

	* fdc-io.c:
	New routine handle_perpend() called by either
 	ftape_setup_formatting() or ftape_setup_fdc_and_dma(). New pair of
 	functions: ftape_release_regions(), ftape_request_regions().
  	Fixed finally checking/requesting/releasing of io-port regions.
  	Maybe should bail out when cannot enable FIFO on fdc > i82077 ?

	* fdc-io.h: Add define for FDC_FORMAT command

	* ftape-ctl.c:
	In ftape_open(): bail out when the open_hook of the front-end (zftape
	or sftape) fails.

	* ftape-io.h:
	Declare ftape_parameter_wait(). Needed by formatting routines.

	* ftape-io.c:
	ftape_ready_wait(): make the poll delay depend on the timeout.
	 0 <= timeout <= 1 sec:  poll delay is 1/10 sec.
	 1 <  timeout < 20 sec:  poll delay is 1    sec.
	20 <= timeout < inf   :  poll delay is 5    sec.
	5 seconds delay is maybe too much. This decreases cpu usage from 20%
	down to 0.x % on my 133MHz Amd 486 when rewinding the tape.

	* ftape-rw.h:
	New function ftape_setup_formatting(). Like ftape_setup_fdc_and_dma()
	except that it sets up for formatting a segment. Eventually will
	become part ftape_setup_fdc_and_dma().

	* ftape-rw.c:
	Check for a fatal signal in ftape_dumb_stop() to avoid endless
	recursion. A fatal signal is either SIGKILL or SIGSTOP.

	* ftape-read.c, ftape-read.h:
	New read mode: FT_RD_VERIFY to support verification after
 	formatting without doing the ECC stuff. New route:
 	ftape_decode_header_segment() which does everything
 	ftape_read_header_segment() does except that it doesn't read a
 	segment, but a buffer containing the header information as an
 	argument. Needed for formatting. This is the easiest way to
 	guarantee parameter consistency: create the header segment in a
 	buffer, then feed it to ftape_decode_header_segment() which will
 	extract all information, check the parameters and initialize all
 	needed global variables.

	* ftape-interface.h:
	Pass dma buffer to format routine. Entire formatting stuff will change
	again in the near future.

	* qic117.h: Only fixed a typo (a -> at)

Mon Feb 17 09:49:29 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-format/ftfmt-format.c, ftape-format/ftfmt-format.h,
 	  ftape-format/ftfmt-init.c, ftape-format/Makefile.module:
	Started with writing real code.

Sun Feb 16 01:32:19 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* fdc-io.c:
	Fixed bug in fdc_result() that caused trying to read result data when
	the FDC signaled it had none.

	Allow use of QIC-3020 with 82077 FDC's. Was reported to work, at lest
	sometimes.

	* fdc-isr.c:
	i82078_1 FDC's seem to have sometimes the busy flag set when
	reset. Adjust the corresponding error message in handle_fdc_busy()

	* ftape-io.c:
	Made poll_delay in ftape_ready_wait() dependent on timeout. This
	reduces the cpu usage for mere rewinds on my poor i486 AMD 133 from
	20% to 0.3% or something.

	* ftape-read.c:
	correct_and_copy_fraction() should not return the segment size, but
	the amount of data copied

Wed Feb 12 14:51:05 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* sftape/sftape-eof.c, sftape/sftape-read.c:
	Needed to remove negative trace levels, no longer supported.

	* zftape/zftape-write.c, zftape/zftape-rw.c, zftape/zftape-vtbl.c,
 	  zftape/zftape-read.c, zftape/zftape-ctl.c, zftape/zftape-init.h,
 	  zftape/zftape-compress.h, zftape/zftape-compress.c,
 	  zftape/zftape-buffers.c:
	Needed to rename "qic-vtbl.h" to "zftape-vtbl.h" etc.

	* zftape/zftape-vtbl.h, zftape/zftape-compress.h,
 	  zftape/zftape-vtbl.c, zftape/zftape-compress.c,
 	  zftape/Attic/qic-vtbl.c, zftape/Attic/qic-vtbl.h,
 	  zftape/Attic/qic-compress.c, zftape/Attic/qic-compress.h,
 	  zftape/Makefile.module, zftape/Makefile.kernel:
	Renamed qic-vtbl.c/h, qic-compress.c/h to zftape-vtbl.c/h,
 	zftape-compress.c/h

	* zftape/zftape.h, zftape/zftape-write.c, zftape/zftape-ctl.c,
 	  zftape/zftape-init.h, zftape/Attic/qic-vtbl.h,
 	  zftape/Attic/qic-vtbl.c, zftape/Attic/qic-compress.h:
	Renamed all instances of prefix `qic_' to `zft_' so it is unique
	throughout all of zftape (except of some `zftape_' prefixes)

	* zftape/zftape-buffers.c:
	Changed trace level of memory stats to ft_t_noise (== 4)

	* zftape/zftape-rw.h, zftape/zftape-rw.c:
	zft_retard_to_previous_segment() fixed. Now stays inside the same
	volume in any cause as it ought to. Renamed afterwards to
	zft_move_before_eof() and moved to file qic-vtbl.c/qic-vtbl.h.

	* zftape/zftape-read.c:
	zftape_read() now checks for eom and returns -EIO if eom is reached.

	* zftape/Attic/qic-compress.c, zftape/lzrw3.h, zftape/lzrw3.c:
	Uncompressed data is no longer indicated by bitwise or'ing with 0x8000
	but with a negative size. This is necessary to allow blocks larger
	then 32kb.

	* fdc-isr.c:
	new function handle_fdc_busy(). This make fdc_isr() a bit more
	readable (less indentation)

Tue Feb 11 12:07:03 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* RELEASE-NOTES: Added some info for never release ftape-3.02a

	* Makefile.module: Added tags: target


Tue Feb 11 12:02:53 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-read.c: Removed some unnecessary read_segment()s from
	zft_read_header_segment().

	* zftape/zftape-ctl.c:
	seek_block(): return -EINVAL when zft_resid != 0.
	fsfbsfm(): need to get new volume info before moving to BOT side of
	EOF mark. The old is no longer valid because we might have skipped
	some volumes.

	* zftape/zftape-write.c, zftape/qic-vtbl.c, zftape/qic-vtbl.h:
	Fix check_write_access() and maybe_write_beof() not to damage the
	volume table when the write access is not allowed. Don't change the
	volume table before we know that we can expect the write request to
	succeed.

	* zftape/qic-compress.c:
	Fixed zft_compress_seek(). Could be caught in a loop between two
	segments. Fall back to slow seek routine in this case.

	* sftape/Makefile.module:
	Don't remove backup file when `make clean' is called

	* kernel-interface.c:
	Fixed bug introduced by change in ftape_interface code. Don't assume
	that ftape_vfs_ops != NULL.

	* ftape-rw.h, ftape-rw.c:
	Need to keep track of logical EOT in loop_until_writes_done() because
	tape stops at lEOT and needs to be restarted. Introduced new function
	ftape_handle_logical_eot() for this purpose.

	Escape on signal form seek_forward() seemed to be a bit
	broken. read_id() does only return -EINTR when signals in _NEVER_BLOCK
	or given, which does not contain SIGINT.

	Reformatted skip_reverse() and seek_forward() s.t. I'm able to read
	these functions.

	* ftape-read.c, ftape-write.c:
	Added a missing signal escape to a loop in read_segment(). Needed to
	keep track of logical EOT in loop_until_writes_done() because tape
	stops at lEOT and needs to be restarted. Introduced new function
	ftape_handle_logical_eot() for this purpose.

	* fdc-isr.c:
	Tried to bring it in readable form. Maybe I'll understand this beast
	one day.

	* ftape-io.c: Renamed some suffixes ftape_ to ft_ for code readability

	* ftape-ctl.c:
	In function _ftape_close(): stop tape if interrupted by signal.

Mon Feb 10 22:02:52 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-write.c,zftape/zftape-read.c, zftape/zftape-rw.c,
 	  zftape/zftape-eof.h, zftape/zftape-init.c, zftape/zftape-eof.c,
 	  zftape/zftape-ctl.c, zftape/zftape-buffers.h, zftape/qic-vtbl.h,
 	  zftape/zftape-buffers.c, zftape/qic-vtbl.c,
 	  zftape/qic-compress.c:
	Changes to reflect the changes in the trace code. Fixed a silly bug
	that was introduced by all the other changes: zftape would seg-fault
	when trying to create new volume on empty cartridge.

	* tracing.h, kernel-interface.c, tracing.c, ftape_syms.c,
 	  ftape-write.c, ftape-rw.h, ftape-setup.c, ftape-rw.c,
 	  ftape-io.c, ftape-read.c, ftape-interface.c, ftape-ctl.c,
 	  ftape-bsm.c, fdc-isr.c, fdc-io.c, fdc-io.h, fc-10.c, ecc.c,
 	  calibr.c:
	Changed the trace code again to better support NO_TRACE_AT_ALL and
	NO_TRACE options, i.e. to produce less code.

	* zftape/Makefile.module:
	Modified such that the compression stuff can be compiled as a
	separate module.

	* zftape/zftape-write.c, zftape/zftape-rw.c, zftape/zftape-rw.h,
 	  zftape/zftape-read.c, zftape/zftape-read.h, zftape/zftape-ctl.h,
 	  zftape/zftape-init.c, zftape/zftape-init.h, zftape/zftape-ctl.c,
 	  zftape/qic-vtbl.h, zftape/zftape-buffers.c, zftape/qic-vtbl.c:
	Modified such that the compression stuff can be compiled as a
	separate module. Fixed return codes (error codes). Interpret the
	access mode the device was opened with.

	* zftape/zftape.h:
	Renamed mtgetsize struct to mttapesize. Name space changes

	* zftape/zftape_syms.c, zftape/zftape_syms.h,
 	  zftape/qic-compress.c, zftape/qic-compress.h:	
	Modularize even further: the entire compression stuff is now in a
	separate module.

	* contrib/gnumt/mt.c, contrib/gnumt/version.c,
 	  contrib/gnumt/xmalloc.c, contrib/gnumt/argmatch.c,
 	  contrib/gnumt/error.c:	
	Updated to the GNU mt from the cpio-2.4.2 package. Only significant
	change: the driver now is opened in WRONLY mode when issuing an
	MTERASE or MTWEOF command.

	* contrib/gnumt/Attic/getopt.h, contrib/gnumt/Attic/getopt1.c,
 	  contrib/gnumt/Attic/getopt.c:
	These were never used

	* vendors.h: Silly formatting changes

	* ftape_syms.c, kernel-interface.c, ftape-read.c, ftape-read.h,
 	  ftape-interface.c:
	Changed the vfs_ops to originally point at NULL at not to some dummy
	variable.

	* ftape-ctl.c, ftape-ctl.h:
	Added new member fti_accmode the ftape_info struct. It holds the
	access mode the driver was opened with. This makes it possible to
	inhibit write access to the tape when opened with the O_RDONLY flag

Thu Feb  6 15:45:59 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-rw.c, zftape/zftape-write.c, zftape/zftape-read.c,
 	  zftape/zftape-eof.c, zftape/zftape-buffers.c,
 	  zftape/zftape-ctl.c, zftape/qic-vtbl.h, zftape/qic-compress.c,
 	  zftape/qic-vtbl.c, sftape/sftape-rw.h, sftape/sftape-write.c,
 	  sftape/sftape-read.c, sftape/sftape-rw.c, sftape/sftape-eof.c,
 	  ftape.h, kernel-interface.c, ftape-rw.c, ftape-write.c,
 	  ftape-read.c, ftape-read.h, ftape-fsl.h, ftape-io.c,
 	  ftape-ctl.c, fdc-isr.c, ftape-bsm.c, fdc-io.c, ecc.c:
	Make some names unique by prepending an `FT_'

Thu Feb  6 14:18:37 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape.h, zftape/zftape-rw.h, zftape/zftape-write.c,
 	  zftape/zftape-read.c, zftape/zftape-rw.c, zftape/zftape-eof.h,
 	  zftape/zftape-init.c, zftape/zftape-ctl.h, zftape/zftape-eof.c,
 	  zftape/zftape-buffers.c, zftape/zftape-ctl.c, zftape/qic-vtbl.c,
 	  zftape/qic-vtbl.h, zftape/qic-compress.h, zftape/qic-compress.c:
	Get rid of the compression map because it is really huge for large
 	tapes. As a result it will be much easier to move the compression
 	support to a separate module. Complete rewrite of the
 	compress_seek() routine that seeks inside a compressed volume
 	without using a compression map. Hairy. Needs to be tested for
 	deadlocks.

	* sftape/sftape-write.c: Renamed WRITE_ASYNC to FT_WR_ASYNC

	* tracing.h:
	Fixed print macros for 64 bit values (right shift of signed values
	preserves the sign)

	* ftape-write.c, ftape-write.h:
	Name space cleanup: WRITE_ASYNC -> FT_WR_ASYNC etc.

	* ftape-read.h:
	New enum type, ft_read_mode_t, that contains FT_RD_SINGLE, FT_RD_AHEAD.

	* fdc-io.c, fdc-io.h:
	fdc_config_reds() need not to be global (now declared static).
  	IMPORTANT: I've changed the request_region()/_irq()/_dma()
 	stuff. ftape now FIRST checks whether ALL resources are available
 	before probing for the device. We don't initialize any hardware if
 	check_region() tells us it is in use. This must, of course,
 	correspond to a comparable change in the floppy.c driver of the
 	kernel (which also doesn't check if the resources are available)

	When this is done, ftape and floppy driver can coexist even with
	random kerneld auto-loading without causing serious grief.

	* ecc.c: Cosmetic changes.

Mon Jan 27 13:28:50 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/Makefile.module:
	Added optional -DMODVERSION again for newer kernels.

	* zftape/zftape-rw.c, zftape/zftape-rw.h, zftape/zftape-read.c,
 	  zftape/zftape-ctl.h, zftape/zftape-init.c, zftape/zftape-ctl.c,
 	  zftape/zftape-buffers.h, zftape/qic-vtbl.h,
 	  zftape/zftape-buffers.c, zftape/qic-vtbl.c,
 	  zftape/qic-compress.h, zftape/qic-compress.c:
	Needed 64 bit sized integers in some places. Changed the
 	allocation code to allocate the buffers for compression as late as
 	possible. Changed to support volume sizes > 32bit (conformance to
 	QIC-113). Compression map offset was off by one block for first
 	compressed block. Compression buffers are of variable size now
 	(spares memory when using small block size). Removed those ugly
 	DEFINE/DECLARE_BUFFER macros.

	* zftape/zftape-write.c:
	Moved prepare_contiguous_write_access() inside function
	check_write_access() to make it look like zftape_read()

	* zftape/zftape.h:
	Need 64 bit fields in mtvolinfo, need to define function
	zft_div_blksz() to divide 64 bit values by multiples of 1024 bytes or
	1 to avoid call to libgcc function.

	* zftape/lzrw3.h, zftape/lzrw3.c:
	Changed type definitions a bit (ULONG always __u32 now). Changed
	variable pointer arg of lzrw3_compress to be a (void *) pointer.

	* zftape/zftape-eof.c, sftape/sftape-eof.c:
	Renamed fmt_wide to fmt_var (variable length format)

	* contrib/gnumt/mt.c: Added new suffix `G' to indicate Gigs of space

	* tracing.h: Add macro to display 64 bit values with printk

	* ftape.h: Cosmetics

	* ftape-read.c, ftape-bsm.c:
	Renamed fmt_wide to fmt_var (variable tape length)

	* ftape-rw.h: Define macros GET8 and PUT8 to put/get 64 bit values

	* Makefile.module:
	Add again optional -DMODVERSIONS because module won't compile with
	kernels > 2.1.18 configured for versioned symbols.

Thu Jan  9 17:03:50 1997  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-read.c: Prefixed segments_per_cylinder with `ftape_'

	* vendors.h: Added `Teac FT3010TR' and maximum speed for Eagle-96.

	* ftape-read.c:
	Removed #ifdef TESTING around tape parameter inconsistency error
	messages.

	* zftape/zftape-init.c, sftape/sftape-init.c, kernel-interface.c,
 	  ftape_syms.c, ftape_syms.h:
	Add support for kernels >= 2.1.18

	* zftape/zftape-eof.c, sftape/sftape-eof.c:
	Fixed bug with failed sector log handling for old (1.2.*) kernels,
	reported by Paul Allen <all9520@halcyon.com>

Tue Dec 31 17:10:27 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* RELEASE-NOTES: Update for version 3.02a

Tue Dec 31 16:57:06 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* kernel-interface.c: Bump version to 3.02a

	* zftape/zftape-init.c: Bump version to 2.02a

	* Makefile.module:
	Put quotes around the EXTRA_FLAGS variable when passing it to
 	child makes.

	* ftape-setup.c:
	Don't reference ftape_tracing when defined CONFIG_FT_NO_TRACE_AT_ALL

	* zftape/zftape-ctl.c:
	Increase trace level to 5 for warning when using obsolete ioctls

	* kernel-interface.c:
	Added call to init functions of either zftape or sftape if compiling
	the entire package into the kernel image.

Wed Dec 18 17:36:37 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* really release version 3.02 of ftape
	
	* info/Attic/ftape.info-1, info/Attic/ftape.info-2,
 	  info/Attic/ftape.info-3, info/Attic/ftape.info:
	No need to version control recreate-able files. This was silly!

	* info/Makefile: typo: http -> html

	* info/Makefile:
	Erase html and dvi version only if doing `make realclean' (not only
	`clean')

	* info/Usage.texi: Typos

	* INSTALL:
	Provide also the html and dvi version of the installation manual by
	default and change info/Makefile accordingly.

	* zftape/Makefile.kernel:
	Added ZFT_OBSOLETE define to standard zftape options.

Tue Dec 17 23:55:17 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* release version 3.02 of ftape
	
Tue Dec 17 23:55:17 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-ctl.c: Say why keeping ftape locked in memory, if so.

	* patches/2.x.x/mtio.h: Fix typos in comments

	* patches/2.x.x/Configure-Ftape.help:
	Minor modifications to CONFIG_FT_NR_BUFFERS

Mon Dec 16 12:26:37 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* RELEASE-NOTES: Updated for ftape-3.02

	* zftape/zftape-init.c, sftape/sftape-init.c, kernel-interface.c:
	Bump to next version:
	3.02 for ftape
	2.02 for zftape
	1.02 for sftape

Mon Dec 16 11:03:54 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* info/kernel-patches.texi:
	Added some hint how to change /usr/src/linux/init/main.c when the
	patch fails.

	* info/Installation.texi: Fixed a typo (ftape ftape)

	* patches/2.x.x/Configure-Ftape.help:
	Added help for CONFIG_FT_NO_TRACE (- _AT_ALL) and fixed some
	misspellings.

	* Config.in:
	Changed the `Generic' fdc to `Other' as this is it what is meant.

	* info/devices.texi, info/ftape.texi, info/kernel-patches.texi,
 	  info/Usage.texi, info/compilation.texi, info/Linux-1.2.13.texi,
 	  info/Installation.texi:
	Fixed some misspellings. Added section for insmod and kernel command
	line parameters.

Fri Dec 13 11:04:56 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* Config.in:
	Insert comment lines to indicate start and end of ftape specific
	configuration options.

	* zftape/zftape-ctl.c, zftape/qic-vtbl.c:
	Logical BOT condition was set wrongly when reading old ftape
	cartridges in compatibility mode. old ftape (now sftape) ignores the
	vtbl segment completely, and this the user accessible area of the tape
	starts directly behind the header segments.

	* patches/2.x.x/Configure-Ftape.help: Fixed a typo

	* kernel-interface.c:
	Fixed auto-loading of `ftape-frontend' via kerneld. Need to request the
	module before checking if minor bits of device number match those
	that we want to support, because the frontend decides this.

Thu Dec 12 14:54:51 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* sftape/sftape-write.h, sftape/sftape-read.h,
 	  sftape/sftape-write.c, sftape/sftape-ctl.c,
 	  sftape/sftape-read.c:
	Improved kerneld support: keep the module locked in memory if using
	non-rewinding devices and tape isn't at bot (logical).

	* zftape/zftape.h, zftape/zftape-ctl.c, zftape/Makefile.module:
	Add old ioctl call MTIOC_ZFTAPE_GETBLKSZ for compatibility with old
	programs. At least taper uses this. Include the code for it only when
	ZFT_OBSOLETE is defined.

	Also: changed zft_tape_at_bot() to return `1' if no cartridge or
	off-line. Is used to decide whether it is save to unlock the module in
	memory for use with kerneld.

	* contrib/swapout/swapout.c: Add -h and --help options.

	* contrib/gnumt/version.c:
	Indicate that this is NOT the original GNU mt program

	* ftape-setup.c, Makefile.kernel:
	Added new file ftape-setup.c which contains the function ftape_setup()
	and interprets option given by the kernel to ftape. This is only
	necessary when compiling ftape into the kernel.

	* fdc-io.h, fdc-io.c, fc-10.c:
	Changed the preprocessor symbols FDC_BASE/IRQ/DMA and PROBE_FC10 and
	MACH2 to be global variables. This allows configuration of the module
	at load time. Support for the Colorado FC-10/FC-20 accelerator card is
	now always compiled in.

	* Makefile.module:
	dep: target was somehow a bit broken (did not correctly create the
	symbolic links `linux -> .' and `mtio.h -> patches/2.x.x/mtio.h'

Wed Dec 11 01:09:07 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* INSTALL, Makefile.module:
	Added html target and tell about it in the INSTALL file.

Wed Dec 11 01:03:58 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-ctl.c:
	Fixed a bug in zft_reset_position() that didn't show up yet: set the
	byte position inside the segment to zero before using it to compute
	the raw data position of the start of the first user segment.

	New function (static) zft_tape_at_bot() that decides if the tape is
	LOGICAL at bot, that is at the start of the user accessible
	area. Didn't check this with raw tape access and missing compression
	map but should be ok.

	zft_open() zft_close(): only unlock the module in memory if the tape
	is logical at bot when using the tape with non-rewinding devices. This
	is necessary for use with kerneld. Could also use that persistent
	module storage extension, but didn't think about it yet.

	zft_close(): not only update the header segments when the tape is used
	with the rewinding devices, but also if it is logical at bot.

	* zftape/qic-compress.c:
	Fixed a bug that led to division by zero: use the read count when
	computing the read compression statistics, not the write count. How
	silly a bug.

	* vendors.h: Added vendor id for Colorado T3000.

	* tracing.h: Fixed a typo: changed Marvin Dalecki to Marcin Dalecki

	* fc-10.c:
	Include <asm/io.h> for inb() and outb() declarations. This fixes a bug
	that was reported several times.

	* Makefile.module:
	Make every object depend on the Makefile to have change to assure
 	that everything gets recompiled after changing compile time
 	options in the Makefile

Thu Dec  5 16:15:00 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* sftape/sftape-write.h, sftape/sftape.h, sftape/sftape-rw.c,
 	  sftape/sftape-rw.h, sftape/sftape-write.c, sftape/sftape-init.c,
 	  sftape/sftape-read.c, sftape/sftape-read.h, sftape/sftape-eof.c,
 	  sftape/sftape-eof.h, sftape/sftape-ctl.h, sftape/sftape-ctl.c:
	Changed all `sftape_' prefixes to `sft_' for shortness.

	* ftape-read.c, vendors.h: whraven@njackn.com:
	"I've made the following corrections to allow ftape to work with the
	ComByte DoublePlay drive and to use tapes formatted by ComByte's
	DoublePlay Windows software.  I've included code I used to determine the
	necessary header corrections with #IFDEF TESTING."

	* ftape-write.c:
	Fixed write_segment() to call start_writing() with the proper write
	mode (WRITE_SINGLE or WRITE_MULTI) when flushing mode is issued.

	* zftape/zftape-rw.h, zftape/zftape-write.h, zftape/zftape.h,
 	  zftape/zftape-eof.h, zftape/zftape-init.c, zftape/zftape-read.h,
 	  zftape/zftape-ctl.h, zftape/zftape-eof.c, zftape/zftape-ctl.c:
	Changed all "zftape" prefixes to "zft". Added some zft prefixes to some
	global variables to make their names unique (think of kernel
	inclusion)

	* zftape/zftape-write.c:
	Changed all "zftape" prefixes to "zft". Added some zft prefixes to some
	global variables to make their names unique (think of kernel
	inclusion)
	No longer automatically change the tape label. zftape no longer uses
	information stored in the tape label.

	* zftape/zftape-rw.c:
	Changed all "zftape" prefixes to "zft". Added some zft prefixes to some
	global variables to make their names unique (think of kernel
	inclusion)
	Changed zftape_update_label() to return void and declare it static. No
	longer used outside zft_erase(). Changed zft_erase() to extract old
	ftape's eof-marks when the header segment has not read in already (was
	a bug)

	* zftape/zftape-read.c:
	Changed all "zftape" prefixes to "zft". Added some zft prefixes to some
	global variables to make their names unique (think of kernel
	inclusion)
	Changed zftape_read_header_segments() to not return 0 (success) when
	extraction of compression map failed and the drive is used with the
	compression devices zqft*

	* zftape/zftape-buffers.c, zftape/zftape-buffers.h, zftape/qic-vtbl.c, zftape/qic-vtbl.h:
	Changed all "zftape" prefixes to "zft". Added some zft prefixes to some
	global variables to make their names unique (think of kernel
	inclusion)

	* zftape/qic-compress.h, zftape/qic-compress.c:
	Changed all "zftape" prefixes to "zft". Added some zft prefixes to some
	global variables to make their names unique (think of kernel
	inclusion) Moved definition of scratch_buffer from ftape-rw.c to
	qic-compress.c as it isn't used anywhere else. Reduced size of scratch
	buffer by 1K. Changed routine "extract_compression_map()" to no longer
	rely on the tape label (was really silly)

	* zftape/lzrw3.h, zftape/lzrw3.c:
	Added a "lzrw3_" prefix to the function name "compress" to make it
	unique

	* zftape/Makefile.module:
	Symlink ". -> linux" is now created with the dep target.

Wed Dec  4 15:56:44 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* Makefile.module:
	Removed that MODVERSIONS stuff. Was fed up with people complaining
	about MODVERSIONS not working. Also, the symbolic links `. -> linux'
	are now created together with the dependencies. Added a new symbolic
	link `patches/2.xx/mtio.h -> mtio.h' to be able to compile the
	modified `mt' program without having to replace the original mtio.h in
	/usr/include/linux/mtio.h.

Wed Dec  4 15:35:52 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-write.c, zftape/qic-vtbl.c, zftape/zftape-rw.c,
 	  zftape/zftape-rw.h, zftape/qic-compress.c:
	Changed zftape_verify_write_segment() to be able to write and verify
	multiple segments which is needed in order to write and verify the
	compression map for long tapes. Renamed it to ..._segments() to
	reflect this change.

Wed Nov 27 04:12:43 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-write.c, zftape/zftape-eof.c, zftape/zftape-rw.c,
 	  zftape/zftape-rw.h, zftape/zftape-buffers.c,
 	  zftape/zftape-ctl.c, zftape/qic-vtbl.h, zftape/qic-vtbl.c,
 	  zftape/qic-compress.c, sftape/sftape-write.c:
	Changed all of the update_header segments code in zftape. Write only
	one segment at a time and verify it as soon as it has been
	written. New function zftape_verify_write_segment(). This scheme takes
	more time than async reads and writes but is much more secure. Header
	segments are too important for floppy tape cartridges.

	* kernel-interface.h, ftape.h, kernel-interface.c, ftape-write.c,
 	  ftape-write.h, ftape-rw.c, ftape-rw.h, ftape-io.h, ftape-read.c,
 	  ftape-ctl.h, ftape-io.c, ftape-bsm.c, ftape-bsm.h, ftape-ctl.c,
 	  fdc-isr.c, fdc-isr.h, fdc-io.c, fdc-io.h, calibr.h, ecc.c,
 	  ecc.h, calibr.c:
	Prepended an `ftape_' to all global symbols. This may avoid name space
	clashes when including ftape into the kernel. Take for example such
	unique names like `head' or `tail' or `wait_intr' ...

Wed Nov 20 16:08:56 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape.h:
	Changed 'typedef unsigned char byte' to `typedef __u8 byte'. Should
	we use that __u8 type everywhere in ftape?

	* fdc-io.c:
	Fixed a bug when the fdc was not properly unlocked, has to use
	fdc_issue_command() instead of fdc_command() to read the result from
	the fdc.

Mon Nov 18 01:41:24 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-ctl.c:
	add a call to zftape_init_driver() also when drive is not formatted
	or no tape is present. This fixes a bug when the flag `header_read' is
	not reset to zero when the tape was removed.

	* zftape/zftape-rw.c: Formatted a trace message

	* zftape/zftape-write.c:
	Fixed a bug that caused wrong behavior when aborting a write with a
	signal: we have either to eliminate the current volume completely
	(rather odd when using compression) or finish the volume at the
	position where the abort occurs (that's how we do it)

	* zftape/qic-vtbl.c: Fixed a type (truncate -> truncate)

	* ftape-io.c: Added messages for interruption by signal

	* ftape-ctl.c:
	Fixed silly bug introduced by silly introduction of silly bit-fields
	for flag `write_protected' (in function ftape_get_drive_status())

Sat Nov 16 22:57:19 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* RELEASE-NOTES: Added entry for ftape-3.01

	* vendors.h:
	Rename Exabyte EXB-1500 to Exabyte Eagle-96 by request of Exabyte.
	Add new vendor id for Iomega DITTO 2GIG

	* zftape/Makefile.kernel, zftape/Makefile.module,
 	  sftape/Makefile.kernel, sftape/Makefile.module, Makefile.kernel,
 	  Makefile.module:
	Simplified CFLAGS etc. Only link with -dc when not compiling ftape
	into the kernel.

	* zftape/zftape-rw.c, zftape/zftape-write.c, zftape/zftape-init.c,
 	  zftape/zftape-read.c, zftape/zftape-ctl.c, zftape/zftape-eof.c,
 	  zftape/qic-vtbl.h, zftape/zftape-buffers.c, zftape/qic-vtbl.c,
 	  zftape/qic-compress.c, zftape/qic-compress.h,
 	  sftape/sftape-init.c, sftape/sftape-read.c,
 	  sftape/sftape-write.c, sftape/sftape-ctl.c, sftape/sftape-eof.c,
 	  tracing.c, tracing.h, kernel-interface.c, ftape-write.c,
 	  ftape_syms.c, ftape-read.c, ftape-rw.c, ftape-interface.c,
 	  ftape-io.c, ftape-bsm.c, ftape-ctl.c, fdc-io.c, fdc-isr.c,
 	  ecc.c, Config.in, calibr.c:
	Changed trace code to use __FUNCTION__ macro as proposed by
	Marcin Dalecki <dalecki@sub994.sub.uni-goettingen.de>.

Wed Nov 13 18:05:29 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-init.c, sftape/sftape-init.c, RELEASE-NOTES,
 	  kernel-interface.c:
	Updated version number to 3.01-b1 for preliminary release.

Mon Nov 11 12:23:22 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/qic-compress.c, zftape/zftape-write.c:
	Fixed reference to undefined variable  last_write_failed in
	qic-compress.cm, made last_write_failed static in zftape-write.c.

Mon Nov  4 14:52:48 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-init.c, sftape/sftape-init.c, kernel-interface.c:
	Removed reference to undefined variable kernel_version when compiling
	the package into the kernel (instead of using it as a module)

Sat Nov  2 22:15:06 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-write.c, zftape/qic-compress.c, sftape/sftape-write.c, sftape/sftape-read.c, ftape-ctl.c:
	Include <asm/uaccess.h> for kernel versions >= 2.0.6

	* sftape/sftape-eof.c:
	Fixed bug that was already in original ftape code: MTFSF/BSF was NOT
	handled correctly when just before eof.

	* zftape/zftape-read.c:
	Fixed bug where buf_len_read was set to negative value (error code).

	* zftape/zftape-ctl.c, sftape/sftape-ctl.c:
	Declare ftape_status variable only when compiling as module.

Thu Oct 24 23:33:10 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-write.c, zftape/zftape-ctl.c,
 	  zftape/zftape-read.c, zftape/qic-compress.c, zftape/qic-vtbl.h:
	Adjusted for Linux-2.1.4 (copy_to/from_user()) Fixed read only mode
	for old-ftape written tapes.

	* zftape/qic-vtbl.c:
	Computation of volume size for non-zftape volumes was wrong. We now
	support skip to eom for old-ftape written tapes correctly
	(hopefully). Fixed bug in extraction of old-ftape file marks: did not
	set our internal file-mark count correctly.

	* zftape/Makefile.module:
	Fixed wrong dependency on non-existing Makefile

	* sftape/sftape-write.c:
	Check the runner status before starting tape when updating header
	segments.

	* sftape/sftape-ctl.c:
	Always zap read and write buffers, not only when using the rewinding
	device. Seems to be necessary to mark dma buffers as empty.

	* sftape/sftape-read.c:
	Fixed severe bug when sftape_read_header_segments() would call itself
	recursively instead of calling ftape_read_header_segment().

	* ftape-ctl.c:
	Added another instance of copy_from_user() .. change for Linux-2.1.4

	* ftape-format/ftfmt-format.c:
	Added formatting skeleton form Ian Burrell

	* info/Makefile: Added target for texi2html

	* info/devices.texi, info/ftape.texi, info/kernel-patches.texi,
 	  info/Linux-1.2.13.texi, info/Usage.texi, info/Installation.texi:
	Fixed some misspellings. Minor changes. Added detailed node listing.

	* info/ftape.info-3, info/ftape.info-2, info/ftape.info-1,
 	  info/ftape.info:
	Fixed some misspellings. Minor changes.

	* MAKEDEV.ftape:
	Fixed silly bug, major device number was wrong. Also added symlink
	from /dev/nrft0 to /dev/nftape

Mon Oct 14 14:58:15 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-init.c, sftape/sftape-init.c, kernel-interface.c:
	Bump date of startup message to today's date.

	* RELEASE-NOTES: Added notes for zftape, sftape and contrib/gnumt

	* patches/2.x.x/linux-2.0.21.dif: Updated for latest changes

	* RELEASE-NOTES: Updated for ftape-3.00

	* info/Makefile: Don't remove info file with "make clean"

	* INSTALL: Hint to the TeXinfo manual

	* info/ftape.info-2, info/ftape.info-1, info/ftape.info:
	Installation and basic usage information in TeXinfo format

	* info/Makefile: New, makefile for formatting of TeXinfo source

	* Makefile.module:
	Added info, dvi, doc targets to format TeXinfo documentation

	* Attic/Install-guide: No longer needed, doc now in TeXinfo format

	* info/kernel-patches.texi, info/Introduction.texi,
 	  info/Linux-1.2.13.texi, info/Installation.texi:
	Broke long lines manually

	* MAKEDEV.ftape: New. This script creates the needed tape devices

	* info/compilation.texi, info/devices.texi, info/ftape.texi,
 	  info/kernel-patches.texi, info/Linux-1.2.13.texi,
 	  info/Usage.texi, info/Installation.texi, info/Introduction.texi:
	New TeXinfo manual

	* Makefile.module: Removed obsolete VERIFY_HEADERS option.

Fri Oct 11 10:13:33 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* info/ftape.info, info/kernel-patches.texi,
 	  info/Introduction.texi, info/Linux-1.2.13.texi,
 	  info/Installation.texi, info/dir, info/ftape.texi,
 	  info/compilation.texi, info/devices.texi, info/Copying.texi:
	Ftape Install-guide in GNU info format

	* patches/2.x.x/Configure-Ftape.help: Fixed some typos.

Thu Oct 10 15:04:39 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* info/ftape.texi: info source for ftape Docu.

	* patches/1.2.13/io.h: Replacement file for include/asm-i386/io.h

	* patches/1.2.13/linux-1.2.13.dif: Patch file for kernel version 1.2.13

	* zftape/zftape-write.c:
	Add trace level for not when writing header segments.

	* ftape-read.c:
	Set read ahead for header segments. Experimental. May keep the tape
	streaming when reading subsequent volume table and compression map.

	* fdc-io.c: Change write pre-compensation trace level to 4

	* zftape/qic-vtbl.c:
	Add level for trace notice when writing volume table

	* zftape/qic-compress.c:
	Fixed bugs in update and verify compression map routines. Did not work
	properly for large compression map (> 1 segment)

	* contrib/gnumt/mt.c: Undo vanishing of mtsetblk :-(

	* contrib/gnumt/mt.c:
	Added code for Kilobytes and Megabytes suffixes to print out large
	byte numbers.

	* Makefile.module:
	Added the contrib target to the driver (default) target.

	* ftape-bsm.c:
	Fixed ugly bug. As we now use the bad sector map stored in the header
	segment buffer directly, we need to initialize the bsm hash ptr after
	reading the header segment.

	* tracing.h:
	Added TRACEx8 macro, used in zftape/qic-vtbl.c to printout the
	internal volume table representation.

	* zftape/zftape-read.c, zftape/zftape-write.c, zftape/qic-vtbl.c,
 	  zftape/zftape-ctl.c:
	Trace level adjustments.

	* zftape/zftape-rw.c:
	Remove unnecessary if conditional in zftape_set_flags()

	* zftape/qic-compress.c:
	Clear compression statistics after they have been printed to the
	system log.

	* zftape/zftape-init.c:
	Use a startup message similar to ftape's one. Bump version to
	`zftape 2.00 alpha'. Add Copyright notice me, Claus-Justus Heine. Only
	use sparse message when compiled into the kernel.

	* sftape/sftape-init.c:
	Use a startup message similar to ftape's one. Bump version to
	`sftape 1.00 alpha'. Add Copyright notice for Bas Laarhoven, Kai
	Harrekilde-Pederson and me, Claus-Justus Heine. Only use sparse
	message when compiled into the kernel.

	* kernel-interface.c: Bump version printout to 3.00 alpha

Wed Oct  9 22:54:39 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/qic-vtbl.c:
	Fixed bug in skip_files() that caused too large BSF's to be
 	reported incorrectly.

	* zftape/zftape.h:
	Fixed MTIOC calls that were out of sync with patch mtio.h

	* zftape/zftape-init.c:
	Add global variable kernel_version for old kernel versions.

	* ftape-format/ftfmt-format.h, ftape-format/ftfmt-init.c,
 	  ftape-format/Makefile.module, ftape-format/ftfmt-format.c:
	Skeleton for formatting module. Well, less than a skeleton.

	* contrib/Makefile: Added `all' target.

	* ftape-interface.c, ftape-interface.h:
	Changed "_format_" names to "_fmt_" names

	* ftape_syms.c, ftape-io.c, ftape-io.h:
	export ftape_report_operation() for formatting module.

	* ftape-ctl.c:
	Fixed bug introduce by Bas when hacking calc_timeouts: not only check
	for unknown tape speed, but also for unknown tape length, essential for
	retension, rewind etc. without having to read the header segments.

	Fixed ftape_close to not return an error if high level close routine
	(sftape, zftape) was not registered.

	* Makefile.module: Add contrib target

	* patches/2.x.x/linux-2.0.21.dif, patches/2.x.x/mtio.h,
 	  patches/2.x.x/Config.in.char, patches/2.x.x/Makefile.char:	
	Patches etc for kernels > 2.*.* to include ftape in the kernel
 	distribution.

	* patches/2.x.x/Configure-Ftape.help:
	drivers/char/Config.in, changed for ftape

	* patches/Attic/Configure.help:
	Patches for 2.0.21 and 2.1.1 are identical, removed 2.1.1 subdirectory
	in patches subdir, added 2.x.x subdir instead.

	* patches/Attic/Configure.help, Config.in:
	Changed to work with that broken kernel xconfig. menuconfig is really
	much more tolerant.

	* Makefile.module:
	Added contrib target to make programs contained in the contrib
	subdirectory.

	* kernel-interface.c:
	Fixed format type in TRACE call for kernel 2.0.21 <-> 2.1.*

	* Attic/swapout.c: Moved to contrib/swapout directory

	* zftape/zftape-rw.c, zftape/zftape-eof.c, zftape/zftape-eof.h,
 	  zftape/zftape-init.h, zftape/qic-compress.h,
 	  zftape/zftape-buffers.c, zftape/zftape-buffers.h,
 	  zftape/qic-compress.c:
	LOTS of that VERY nice code layout changes. Reformatting fun :-)
	EMACS, hey, do YOU like it? At least you?

	* zftape/zftape-init.c, zftape/zftape-read.h,
 	  zftape/zftape-write.c, zftape/zftape-read.c:
	Changed code because the read_header_hook has vanished. It was REALLY
	unnecessary

	* zftape/qic-vtbl.h, zftape/zftape-ctl.c, zftape/zftape.h,
 	  zftape/qic-vtbl.c:
	Changed code for new MTIOCVOLINFO ioctl that replaces MTIOCBLKSZ ioctl

	* sftape/sftape-read.h, sftape/sftape-write.c,
 	  sftape/sftape-write.h, sftape/sftape-eof.c,
 	  sftape/sftape-read.c, sftape/sftape-ctl.c:
	Changed code because ftape_read_header_hook vanished. Reformatting of
	all of the source code (nothing serious, only that old conversion of
	`ugly' looking source code against `nice' looking source code. May
	EMACS be with me ... :-)

	* sftape/sftape-init.c:
	Removed obsolete ftape_read_header_hook from the vfs_ops

	* sftape/Makefile.module:
	Removed obsolete CONFIG_FT_KERNELD. We always protect against
	kerneld. AND AGAINST UNEXPERIENCED USERS!!!!!!!!!!!!!

	* contrib/gnumt/mt.c:
	Yet another change for the new IOCTL interface: remove MTIOCBLKSZ and
	introduce MTIOCVOLINFO. The latter includes information about the
	block-size, the raw amount of tape space used, the real (compressed
	amount of data recorded to this volume) and a flag variable indicating
	whether this volume used compression or not (I mean the builtin
	compression used by zftape, nothing else)

	* ftape-interface.h, ftape-read.c:
	Removed read header hook. This really doesn't need to exist. Instead,
	write sftape_read_header_segments() and zftape_read_header_segments()
	functions. The reason why this hook is not needed is clear:
	ftape_read_header_segment() is NEVER called from inside the hardware
	module `ftape', but must be explicitly called from the higher level IO
	modules. Also, the additional segments (vtbl, cmap) that are read by
	zftape, are only read after the real header segments have successfully
	read in.

	* ftape.h, ftape-io.c, ftape-ctl.h, ftape-ctl.c:
	Added ftape_last_error and ftape_last_status variables. These are
	intended for use with MTIOCGET to fill in the error reg and drive
	status fields. Refer to ftape.h for further information (these even
	include tape cartridge configuration (which kind of cart. is inserted)
	and also tape drive configuration (which features has your tape drive)
	One needs qic117.h from the ftape distribution to decode this status
	info.

Tue Oct  8 10:50:31 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* contrib/gnumt/mt.c:
	Fixed stupid bug for new getseg command: stdout is FD 1, not 0

	* Makefile.module, zftape/Makefile.module, sftape/Makefile.module,
 	  contrib/gnumt/Makefile:
	removed that fancy modversions feature from the Makefiles for the
	separate module package.

Mon Oct  7 16:17:23 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* contrib/gnumt/Makefile:
	Set install prefix to `ft' to prevent overwriting of existing mt.
	This mt should still work with other tape drives, as it contains the
	standard ioctls as a subset.

	* contrib/gnumt/mt.1: Updated to reflect support of new ftape IOCTLs

	* contrib/gnumt/mt.c:
	Changed the mt command name `getblksz' to `getblk'

	* patches/Attic/Configure.help:
	CONFIG_FTAPE section for /usr/src/linux/Documentation/Configure.help

	* Attic/mtio.h.dif, Attic/mtio.h: Moved to patches subdirectory.

	* Attic/Makefile.char, Attic/Makefile.char.dif,
 	  Attic/Configure.help, Attic/Configure.help.dif,
 	  Attic/Config.in.char.dif, Attic/Config.in.char:
	Moved to patches subdirectory

	* zftape/zftape-write.c, zftape/zftape-ctl.c,
 	  zftape/zftape-read.c, sftape/sftape-write.c,
 	  sftape/sftape-read.c:
	In both drivers, sftape and zftape, the variable offline is set when
	no tape is present, thus it was redundant to check both, offline and
	no_tape.

	* zftape/zftape-buffers.h, zftape/zftape-buffers.c:
	Changed type of variables that hold minor device number from kdev_t to
	unsigned int. I guess kdev_t is only for the full device number.

	* sftape/sftape-ctl.c: Added kerneld protection for sftape.

	* contrib/gnumt/mt.c:
	Added new ioctl's for reading of arbitrary segments, block-size query,
	capacity query and formatting (only a dummy for now)

	* contrib/gnumt/Makefile:
	Include location of ftape source in include path

	* contrib/swapout/Makefile, contrib/swapout/swapout.c,
 	  contrib/gnumt/rtapelib.c, contrib/gnumt/version.c,
 	  contrib/gnumt/xmalloc.c, contrib/gnumt/mt.c,
 	  contrib/gnumt/rmt.h, contrib/gnumt/getopt.h,
 	  contrib/gnumt/getopt1.c, contrib/gnumt/mt.1,
 	  contrib/gnumt/error.c, contrib/gnumt/getopt.c,
 	  contrib/gnumt/Makefile, contrib/gnumt/argmatch.c,
 	  contrib/Makefile:
	Copied over from zftape-1.06. Modified gnumt and swapout live here.

	* zftape/zftape-ctl.c, zftape/zftape.h, zftape/qic-vtbl.c,
 	  zftape/qic-vtbl.h:
	Added new MTIOCSIZE ioctl to query the raw capacity and the raw eom
	position of the cartridge. Added qic_get_eom_pos() to qic-vtbl.c to
	get that raw position. Name space changes for new ioctls to better fit
	into the scheme used in the kernel. Finally fixed the cmap detection
	in qic-vtbl.c

	* zftape/Makefile.module:
	Commented out the MODVERSIONS feature, and it will remain commented
	out in the future.

	* ftape-ctl.c, ftape.h:
	Changed formatting ioctl to be a MTIOCTOP command, namely MTFORMAT
	which has the number 35.

	* Attic/mtio.h, Attic/mtio.h.dif:
	Modified mtio.h from the 2.1.1 kernel distribution.

	* zftape/zftape-eof.c, zftape/zftape-rw.c, zftape/qic-vtbl.c,
 	  sftape/sftape-eof.c, ftape-rw.c, ftape-rw.h, ftape-bsm.c,
 	  ftape-ctl.h, ftape-read.c:
	Moved ftape_format_code to ftape_info structure and #defined it to
	format_code, as it used to be in original ftape

	* zftape/Makefile.module, sftape/Makefile.module:
	First include the ftape's modules private modversions.h than the
	systems one.

	* ftape_syms.c:
	Removed ftape_format_code, is now contained in ftape_info
	structure. Added ftape_register/unregister_format_hook

	* ftape-interface.c: Added TRACE_FUN messages

	* ftape-ctl.c:
	Added kerneld support for auto loading the formatting module.

	* Makefile.module: Some fiddling with the modversions code

	* zftape/Makefile.kernel, zftape/Makefile.module:
	Remove obsolete CONFIG_FT_KERNELD option.

	* zftape/zftape-ctl.c:
	Add MOD_INC/DEC_USE_COUNT to open and close hooks. Add support
 	against kerneld unloading while header segments are not up to date.

	* kernel-interface.c:
	Bug fixed: always register the symbol table, not only when MODULE is
	defined.

	* Attic/Configure.help, Config.in:
	Remove CONFIG_FT_KERNELD. Not necessary: just prevent unloading of the
	driver alway when header segments are not up to date.

Mon Oct  7 02:44:58 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* fdc-io.c: Wrong perpendicular mode setting fixed (Bas Laarhoven)

	* kernel-interface.c: Fixed trace levels.

	* zftape/zftape-write.h: Misspelled Laarhoven. Fixed.

	* ftape-bsm.c: Fixed silly bug found by Bas Laarhoven (thanks Bas).

Mon Oct  7 01:24:18 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* Makefile.module: Call Makefile.module in subdirectories

	* zftape/qic-compress.c, zftape/qic-compress.h, zftape/lzrw3.c,
 	  zftape/lzrw3.h:	
	Minimal cleanups. Change `#include "compress.h"' to `#include
 	"lzrw3.h"'

	* Makefile.module: Added sftape and zftape as subdir (finally)

	* zftape/Makefile.module, zftape/Makefile.kernel:
	Updated to compile lzrw3.c which's location was changed

	* zftape/lzrw3.h, zftape/lzrw3.c:
	Moved from subdir compress to the actual location.

	* zftape/Makefile.module:
	Added changes made to include the whole thing into the kernels
	configuration scripts. Added compress subdir again to clean and dep
	target.

	* sftape/Makefile.module, Makefile.module:
	Added changes made to include the whole thing into the kernels
	configuration scripts.

	* Configure.help.dif:
	Diff relative to kernels 2.1.1 Documentation/Configure.help

	* Config.in, Config.in.char, Configure.help: Finally got it to work.

Sun Oct  6 22:02:55 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* Configure.help:
	Replacement for the ftape entry in
 	/usr/src/linux/Documentation/Configure.help.

	* Config.in: Fixed a typo

	* Makefile.char: New. Makefile for /usr/src/linux/drivers/char

	* zftape/Makefile.kernel, sftape/sftape-write.c,
 	  sftape/Makefile.kernel, ftape_syms.c, kernel-interface.c,
 	  ftape-write.c, ftape.h, ftape-read.c, ftape-rw.c, fdc-isr.c,
 	  ftape-ctl.c, Makefile.kernel, calibr.c, Config.in:
	Updated to fit into kernel configuration scheme.

	* Config.in, Config.in.char:
	New. Configuration scripts for the Linux kernel.

	* zftape/zftape-init.c, zftape/zftape-rw.c, zftape/zftape-ctl.c,
 	  zftape/zftape-buffers.c:
	Changed `#include "zftape.h"' to `#include <linux/zftape.h>'.

	* zftape/qic-vtbl.c, zftape/qic-vtbl.h:
	Added support for format code 6 tapes (tapes with more than 2^16
	segments) which use a slightly different volume table.

	* zftape/Makefile.kernel, zftape/Makefile.module,
 	  zftape/Attic/Makefile, sftape/Makefile.kernel,
 	  sftape/Makefile.module, sftape/Attic/Makefile:
	Added Makefiles for kernel inclusion, renamed module's Makefile to
	`Makefile.module'.

	* Makefile.kernel, Makefile.module:
	Removed option VERIFY_HEADERS, make only sense for the front-ends
	`sftape' and `zftape'. Removed old and never used `test' and `tecc'
	references.

	* zftape/qic-vtbl.c, zftape/zftape-eof.c:
	Access the components of the failed sector log entries with
	GET2/PUT2. This is necessary because zftape does NOT keep a copy of
	the failed sector log, but accesses directly the information stored in
	the header segment buffer (unaligned access). Also, this prepares for
	architectures with other bit ordering, if this should become
	necessary.

	* zftape/qic-vtbl.h: Added offset for format code 6 volume tables.

	* sftape/sftape-write.c:
	Removed zap_write_buffers() from flush_buffers() and placed it in
	update_date_header_segments() right before the update starts.

	* ftape-fsl.h:
	Added __attribute__ ((packed)) to `struct failed_sector_entry' to
	prevent compiler alignment. This wasn't a real problem, it is just
	something to maybe take care of in the future if this floppy driver
	should be ported to other architectures besides Intel and Alpha.

Sat Oct  5 22:43:18 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-buffers.c, zftape/zftape-rw.c,
 	  zftape/zftape-write.c, zftape/qic-compress.c,
 	  zftape/qic-compress.h:
	Renaming of type CompressionMapEntry to CmapEntry, and
	zftape_compression_map to zftape_cmap. Was kind of fed up with long
	names.

	* zftape/qic-vtbl.c:
	A bit of code cleanup, breaking up of large functions into subroutines.

	* zftape/zftape-write.h, zftape/zftape-rw.h,
 	  zftape/zftape-write.c, zftape/zftape-rw.c, zftape/zftape-read.c,
 	  zftape/zftape-read.h, zftape/zftape-eof.c, zftape/zftape-init.c,
 	  zftape/zftape-buffers.c, zftape/zftape-buffers.h,
 	  zftape/zftape-ctl.c, zftape/qic-vtbl.c, zftape/qic-vtbl.h,
 	  zftape/qic-compress.h, zftape/qic-compress.c,
 	  sftape/sftape-write.c, sftape/sftape-init.c,
 	  sftape/sftape-read.c, sftape/sftape-read.h, sftape/sftape-eof.c,
 	  sftape/sftape-eof.h, sftape/sftape-ctl.c, tracing.c, tracing.h,
 	  ftape-rw.h, ftape.h, kernel-interface.c, ftape-rw.c,
 	  ftape-read.c, ftape-read.h, ftape-io.c, ftape-io.h, ftape-bsm.c,
 	  ftape-ctl.c, ftape-interface.h, fdc-io.c, fdc-isr.c, calibr.h,
 	  ecc.c, calibr.c:
	Yeah! Again code layout (I seem to have too much time ... ). This time
	replaced all `( ' by a sole `(' and each ` )' by `)'.

	* zftape/zftape-write.h, zftape/zftape.h, zftape/zftape-rw.c,
 	  zftape/zftape-write.c, zftape/Attic/zftape-ioctl.h,
 	  zftape/zftape-init.h, zftape/zftape-read.c, zftape/zftape-eof.c,
 	  zftape/zftape-eof.h, zftape/zftape-init.c,
 	  zftape/zftape-buffers.h, zftape/zftape-ctl.c,
 	  zftape/zftape-buffers.c, zftape/qic-compress.c,
 	  zftape/qic-compress.h, zftape/qic-vtbl.c, sftape/sftape-write.c,
 	  sftape/sftape-write.h, sftape/sftape-rw.h, sftape/sftape-eof.c,
 	  ftape_syms.c, kernel-interface.c, ftape-read.c, ftape.h,
 	  ftape-ctl.c, ftape-interface.c, ftape-interface.h,
 	  Makefile.module, ecc.h, ftape-bsm.h, Makefile.kernel:
	Ok, once again code layout changes. Still more will follow. Added some
	macros for the drive number selection to ftape.h. Prepared ftape.h and
	zftape.h for inclusion into user level program, new ioctls are defined
	therein. Introduced new file ftape-fsl.h (fsl = failed sector log).
	`struct failed_sector_entry' no longer as a component `sector' but a
	component `date', as it ought to. Fixed compression statistics
	mistypes in zftape sub directory.

	* kernel-interface.h:
	Moved `#define FTAPE_NO_REWIND' to ftape.h. User level programs may
	want to know which bit of the minor number triggers rewinding.

	* ftape.h:
	First preliminary addition of formatting command MTIOCFMT. This is
	likely to change in the future. Just meant as a hint that those
	definition should go here. Moved typedef of SectorMap to ftape-bsm.h
	wherein it belongs. Commented out by `#ifdef __KERNEL__' section that
	need not be known to user level programs.

	* ftape-ctl.c: First preliminary addition of formatting command

	* ftape-bsm.h:
	Moved FAILED_SECTOR_LOG_SIZE to ftape-fsl.h, moved SectorMap typedef
	from ftape.h to this file; it belongs herein.

	* ftape-fsl.h:
	Added. Contains data structure for failed sector log that is used by
	both, sftape and zftape. Moreover the max. size of the failed sector
	log is defined here (used by ftape-bsm.c)

	* Attic/ftape-vfs.c, Attic/ftape-vfs.h, ftape-interface.h,
 	  ftape-interface.c:
	Renamed ftape-vfs.c to ftape-interface.c, moved definitions from
	ftape-vfs.h to ftape-interface.h. Added hook for formatting function
	(but this is likely to change in the future)

	* sftape/sftape-rw.c, sftape/sftape-init.c, sftape/sftape-read.c,
 	  sftape/sftape-read.h, sftape/sftape-eof.c, sftape/sftape-eof.h,
 	  sftape/sftape-ctl.c, sftape/sftape-ctl.h, ftape_syms.h,
 	  kernel-interface.c, ftape-write.c, ftape-write.h,
 	  Attic/ftape-vfs.c, Attic/ftape-vfs.h, ftape-rw.h, ftape-ctl.h,
 	  ftape-interface.h, ftape-read.c, ftape-ctl.c:
	Some update of copyrights, RCS messages. Added some comments.

Fri Oct  4 23:41:36 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-write.c: Print segment id on write error.

	* zftape/zftape-rw.h, zftape/zftape-write.h, zftape/zftape.h,
 	  zftape/zftape-read.c, zftape/zftape-read.h, zftape/zftape-eof.h,
 	  zftape/zftape-init.c, zftape/zftape-init.h,
 	  zftape/zftape-buffers.h, zftape/zftape-ctl.c,
 	  zftape/zftape-ctl.h, zftape/qic-vtbl.c, zftape/qic-vtbl.h:
	Various small changes in code formatting, corrected copyright
 	notices, RCS messages etc.

	* zftape/zftape-eof.c: Adapted Linux/alpha port from Bas

	* zftape/zftape-rw.c:
	Must set `header_read' to one, or zftape_update_header_segments() will
	do nothing (in function zftape_erase())

	* zftape/zftape-write.c, zftape/zftape-buffers.c:
	Must include `<linux/vmalloc>' since kernel version 2.1.0

	* zftape/qic-compress.c, zftape/qic-compress.h:
	Added compression statistics. Removed obsolete and unused
	zftape_compress_info() function.

	* sftape/sftape-write.c:
	Added ftape_zap_write_buffers() to end of flush_buffers(). Don't know
	why yet, but was necessary to set buffer status correctly??????

	* sftape/sftape-init.c:
	Print module load address directly after startup message, before
	registering for ftape.

	* kernel-interface.c:
	Adapted changes made in kernel version 2.1.0. read/write in `struct
	file_operations' return `long' since 2.1.0 and record length arg is
	`unsigned long'.

	* ftape-rw.h:
	Changed the PUT/GET macros to cast the pointer first to (__u8 *). Was
	causing trouble with zftape where I passed a non (char *) pointer to
	those macros.

	* ftape-read.c:
	Add an `history.used |= 1' to read segment, as ftape_read() no longer
	exists.

	* ftape-ctl.h:
	changed some `int foo:1' to `unsigned int foo:1' to prevent sign
	propagation.

Thu Oct  3 23:38:55 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-write.c, zftape/zftape-rw.h, zftape/zftape-read.c,
 	  zftape/zftape-rw.c, zftape/zftape-ctl.c, zftape/zftape-ctl.h,
 	  zftape/zftape-eof.c, zftape/qic-vtbl.h, zftape/zftape-buffers.c,
 	  zftape/qic-compress.c, zftape/qic-vtbl.c, zftape/Makefile:
	Adaption of alpha port, etc.
	Various changes in variable naming etc.

	* sftape/sftape-write.c, sftape/sftape.h, sftape/sftape-init.c,
 	  sftape/sftape-read.c, sftape/sftape-ctl.h, sftape/sftape-eof.c,
 	  sftape/sftape-eof.h, sftape/sftape-ctl.c:
	Adaption of alpha port, etc.

	* Makefile.module, Makefile.kernel: Preparation for kernel inclusion

	* tracing.h, vendors.h, tracing.c, kernel-interface.h, qic117.h,
 	  ftape_syms.h, kernel-interface.c, ftape-write.c, ftape.h,
 	  ftape_syms.c, ftape-vfs.c, ftape-vfs.h, ftape-read.h,
 	  ftape-rw.c, ftape-rw.h, ftape-io.h, ftape-read.c, ftape-io.c,
 	  ftape-ctl.c, ftape-ctl.h, ftape-interface.h, ftape-bsm.h,
 	  fdc-isr.h, ftape-bsm.c, fdc-io.h, fdc-isr.c, fc-10.h, fdc-io.c,
 	  ecc.c, ecc.h, fc-10.c, calibr.h, calibr.c:
	Adaption of port to alpha/axp and support for Eagle TR-3

	* Attic/Makefile: Renamed to Makefile.module

Tue Oct  1 23:07:50 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* sftape/Makefile: Comment out MODVERSIONS feature by default

	* sftape/sftape-write.c, sftape/sftape-ctl.c, sftape/sftape-eof.c,
 	  sftape/sftape-read.c, zftape/zftape-rw.h, zftape/zftape-write.c,
 	  zftape/zftape-read.c, zftape/zftape-rw.c, zftape/zftape-ctl.c,
 	  zftape/zftape-eof.c, zftape/qic-compress.c:
	Access components of header segments through inline function now.

	* zftape/qic-vtbl.c, zftape/qic-vtbl.h:
	Access components of vtbl through byte offsets, not struct
 	components (compiler alignment)

Fri Aug 30 11:11:08 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/zftape-rw.h, zftape/zftape-write.c, zftape/zftape-eof.c,
 	  zftape/zftape-rw.c, zftape/zftape-buffers.c,
 	  zftape/zftape-ctl.c, zftape/qic-compress.h, zftape/qic-vtbl.c,
 	  zftape/qic-compress.c:
	Removed variable zftape_compression_map_location, some 80 column
 	cleanups.

Thu Aug 29 21:38:52 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/qic-compress.h, zftape/qic-compress.c:
 	zftape_extract_compression_map(),
 	zftape_update_compression_segments(),
 	zftape_verify_compression_map(): modified to use the compression
 	map volume, location and size of compression map now queried via
 	qic_get_cmap_volume().

Sun Aug 25 13:31:51 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* Attic/Makefile, ftape-ctl.c:
	Added support for multiple tape drives. New "#define's"
	> "-DMULTIPLE_DRIVES", "-DWAKE_UP_1=wake_up_mountain",
	> "-DWAKE_UP_2=wake_up_colorado" for this purpose.

	* zftape/Attic/qic80-vtbl.c, zftape/Attic/qic80-vtbl.h,
 	  zftape/Attic/qic80-compress.c, zftape/Attic/qic80-compress.h,
 	  zftape/zftape-rw.h, zftape/zftape-write.c, zftape/zftape-read.c,
 	  zftape/zftape-rw.c, zftape/zftape-ctl.c, zftape/zftape-init.h,
 	  zftape/zftape-ioctl.h, zftape/zftape-buffers.c,
 	  zftape/zftape-buffers.h, zftape/qic-vtbl.c, zftape/qic-vtbl.h,
 	  zftape/qic-compress.c, zftape/qic-compress.h, zftape/Makefile:
	Renamed all qic80_ ... variables to qic_ ... variables. Started
	implementing a compression map volume instead of compression map
	segments that are no longer supported by newer tape standards

Fri Aug 23 12:26:21 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/Attic/qic80-vtbl.h, zftape/Attic/qic80-compress.c,
 	  zftape/Attic/qic80-vtbl.c:
	Added new macro SEGMENTS_PER_TAPE as shortcut fro
 	SEGMENTS_PER_TRACK*TRACKS_PER_TAPE. Removed reference to
 	zftape_last_data_segment, use macro
 	LAST_DATA_SEGMENT(header_segment_buffer) instead

	* zftape/zftape-rw.c, zftape/zftape-rw.h:
	Added new macro SEGMENTS_PER_TAPE as shortcut fro
 	SEGMENTS_PER_TRACK*TRACKS_PER_TAPE. Changed zftape_calc_data_pos()
 	to cache the last segment id and data position it was called
 	with. Added variable zftape_bad_sector_map_changed to give means
 	to invalidate that cache once we start modifying the bad sector
 	map. Removed zftape_update_label() from zftape_erase(). Is now
 	done in update_header_segments().

	* zftape/zftape-ctl.c:
	Fixed zftape_reset_position() to check for "header_read" and some
	wrong references to SEGMENTS_PER_TRACK*TRACKS_PER_TAPE were
	LAST_DATA_SEGMENT should be used (ioctl calls)

	* zftape/zftape-eof.h, zftape/zftape-eof.c:
	Added the prefix "zftape_" to ftape_validate_label() and
 	ftape_extract_eof_map() as these to are taken from the original
 	ftape, but had be modified slightly

	* zftape/zftape-read.c:
	read_header_hook() now does that same as read_header_segments()
 	did in zftape-1.06. Should work now

	* zftape/zftape-write.c:
	Added a call to zftape_update_label() when updating the header
 	segments

Thu Aug 22 14:00:29 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* zftape/Makefile:
	FTAPE_LOCATION must contain absolute path to ftape source. Add
	compress directory and target to build the compressor.

	* zftape/zftape-write.c:
	Lots of changes to access global information through the
 	header_segment_buffer directly. update_header_segments() changed a
 	bit to work with the new setup.

	* zftape/zftape-rw.c, zftape/zftape-rw.h:
	Removed tape label buffer, instead use the header_segment_buffer
 	directly. Changed zftape_update_label() for this to achieve.

	Changed zftape_erase() to work with the new stacked module environment.

	* zftape/zftape-read.c:
	Fixed typo (zftape_zap_write_buffers() -> zftape_zap_read_buffers())

	Fixed zftape_read_header_hook() from overwriting the buffer
 	containing the header segment.

	* zftape/zftape-read.h:
	Added declaration of zftape_read_header_hook() and zftape_read()

	* zftape/zftape-init.h, zftape/zftape-init.c:
	Added enable/disable_read_header_hook() functions. These
 	disable/enable the extraction of the volume table and compression
 	map which is not necessary when simply erasing the tape.

	Added call to zftape_init_mem() to make the driver operational.

	* zftape/zftape-eof.c:
	Removed some (now) undefined references to global
 	variables. Information of header segment is no longer cached in
 	global variables but accessed directly through the buffer that
 	contains the entire header segment.

	* zftape/zftape-ctl.c:
	Removed some (now) undefined references to global
	variables. Information of header segment is no longer cached in global
	variables but accessed directly through the buffer that contains the
	entire header segment.

	zftape_reset_position() now calls ftape_zap_read/write() buffers and
	thus bumps the entire driver in a defined idle state.

	* zftape/zftape-buffers.c:
	Modified to be used with the stacked module. Removed dma-buffer
	allocation stuff (this is done in the top-level ftape-module for now)

	* zftape/Attic/qic80-vtbl.h:
	In function __qic80_maybe_write_eof(): added test empty volume table.

	* zftape/Attic/qic80-vtbl.c, zftape/Attic/qic80-compress.h,
 	  zftape/Attic/qic80-compress.c:
	Name space changes to add it to the stacked module

	* sftape/sftape-read.h: Forget declaration of sftape_zap_read_buffers()

	* sftape/sftape-read.c: Need to include sftape-write.h

	* sftape/sftape-rw.h, sftape/sftape-rw.c:
	Added global variable sftape_status.

	* ftape-rw.c, ftape-write.c, ftape-ctl.h, fdc-isr.c, ftape-ctl.c,
 	  fdc-io.h:
	Added the runner_status to the ftape_status info structure (which is
	exported using the function ftape_get_status() to other modules, read
	only for them)

	* ftape-rw.h:
	Added macro to access the tape label in the header segment.

	* ftape_syms.c:
	Name space cleanup, some changes in the symbols we export ...

	* ftape-vfs.c:
	Added a dummy ftape_ops struct that holds the place until some other
	module registers itself.

	* ftape-read.c, ftape-read.h:
	Modified ftape_read_segment() to ftape_read_segment_fraction() that is
	able to read only a fraction of a segment (the entire segment is read
	in, but only part of it is copied to the buffer). Needed by zftape.

Tue Aug 20 12:47:47 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-write.h:
	Removed stale definition of update_header_segments() etc. Is done by
	high level modules

	* zftape/zftape-read.c: Name space cleanup

	* zftape/zftape-init.h: Removed define of FTAPE_NO_REWIND

	* zftape/zftape-rw.h: Added zftape_get_seg_size()

	* zftape/zftape-rw.c, zftape/zftape-write.c:
	high level parts of ftape-rw.c

	* zftape/zftape-read.h, zftape/zftape-rw.h, zftape/zftape-write.h,
 	  zftape/zftape-read.c, zftape/zftape-init.c,
 	  zftape/zftape-init.h, zftape/zftape-ioctl.h,
 	  zftape/zftape-eof.c, zftape/zftape-eof.h, zftape/zftape-ctl.c,
 	  zftape/zftape-ctl.h, zftape/Attic/qic80-vtbl.h,
 	  zftape/zftape-buffers.c, zftape/zftape-buffers.h,
 	  zftape/Attic/qic80-compress.h, zftape/Attic/qic80-vtbl.c,
 	  zftape/Attic/qic80-compress.c, zftape/Makefile:
	Adaption of zftape to the new stacked module scheme

	* sftape/sftape-write.h, sftape/sftape-ctl.c: Name space cleanup

	* sftape/sftape-init.c:
	Forgot to add register_symtab(NULL) on the first fly.

	* sftape/sftape-read.c, sftape/sftape-write.c:
	Played with reading/writing/idle state to emulate original behavior
	of ftape. No that easy because I want to keep the modules as separate
	as possible.

	* sftape/Makefile: Added sftape-rw.c to SRCS

	* tracing.h, tracing.c:
	Name space cleanup (tracing->ftape_tracing etc.)

	* kernel-interface.c: Name space cleanup (tracing->ftape_tracing)

	* ftape-rw.h: New macros to access data in header segment buffer

	FIRST_DATA_SEGMENT(address)
	PUT_FIRST_DATA_SEGMENT(address,value)
	SEGMENTS_PER_TRACK(address)
	PUT_SEGMENTS_PER_TRACK(address,value)
	TRACKS_PER_TAPE(address)
	PUT_TRACKS_PER_TAPE(address,value)
	HEADER_SEGMENT_1(address)
	PUT_HEADER_SEGMENT_1(address,value)
	HEADER_SEGMENT_2(address)
	PUT_HEADER_SEGMENT_2(address,value)
	COMPRESSION_MAP_LOCATION(address)
	PUT_COMPRESSION_MAP_LOCATION(address,value)

	* ftape-read.c:
	buf_len_rd and buf_pos_rd removed. Only needed by the higher level
	IO-routines.

	* ftape-io.c: Name space cleanup (tracing->ftape_tracing)

	* ftape-ctl.h:
	"init_drive_needed" is now exported and set to one in function
	ftape_reset_drive() in file ftape-io.c
	No longer export ftape_new_cartridge() (unnecessary)

	* ftape-ctl.c: Name space clean up (tracing->ftape_tracing)
	Also, init_drive_needed is now exported and set to one in function
	ftape_reset_drive() in file ftape-io.c

	* ftape-bsm.c: Name space clean up (tracing->ftape_tracing)

Sun Aug 18 23:25:38 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* sftape/sftape-rw.c, sftape/sftape-write.c,
 	  sftape/sftape-write.h, sftape/sftape-read.h, sftape/sftape-rw.h,
 	  sftape/sftape-init.c, sftape/sftape-read.c, sftape/sftape-ctl.h,
 	  sftape/sftape-eof.c, sftape/sftape-eof.h, sftape/sftape-ctl.c,
 	  kernel-interface.c, ftape-write.h, ftape.h, ftape_syms.c,
 	  ftape-rw.h, ftape-vfs.h, ftape-write.c, ftape-read.h,
 	  ftape-rw.c, ftape-io.c, ftape-read.c, ftape-ctl.h,
 	  ftape-interface.h, ftape-bsm.c, ftape-bsm.h, ftape-ctl.c,
 	  fdc-io.c, fdc-isr.c:
	Added a new structure "ftape_info", that contains all global variables
	which are exported by ftape. Also, changed a couple of global symbols
	to have the prefix "ftape_..."

Fri Aug 16 14:05:08 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape_syms.c:
	Include revision information in the file, add ftape_unit as symbol

	* sftape/sftape-rw.h, sftape/sftape-write.h, sftape/sftape-init.c, sftape/sftape-read.c, sftape/sftape-read.h, sftape/sftape-ctl.h, sftape/sftape-eof.c, sftape/sftape-eof.h, sftape/sftape-ctl.c:
	a lot of renaming from "ftape_..." prefix to "sftape_..." prefix.

	* sftape/Makefile:
	added the variable FTAPE_LOCATION, that holds the place of the
	ftape-interface.h include file.

	* kernel-interface.c:
	Move call to the hook function registered with ftape_register to the
	file ftape-read.c

	* ftape_syms.c: added some symbols

	* ftape-write.c: removed reference to "ftape_last_segment" struct

	* ftape-vfs.h: added comments

	* ftape-rw.h, ftape-rw.c:
	removed reference to "ftape_last_segment" struct which has become
	structure that belongs to the high level i/o routines

	* ftape-read.h, ftape-read.c:
	Changed ftape_read() to call the read function registered with
	register_ftape(), removed the old read code

	* ftape-interface.h: Added some include files

	* ftape-ctl.h:
	temporary hacks (#define) that prepend "ftape_" to variable that are
	to be exported via ksyms

	* ftape-bsm.h, ftape-bsm.c:
	Modified find_end_of_bsm_list() to take only buffer with contents of
	header segment as argument

Wed Jul 24 08:49:57 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* sftape/Makefile: Added a Makefile

	* ftape-interface.h: New, interface definitions.

	* ftape-read.h, ftape-write.h, tracing.h, ftape-bsm.h:
	Added #define's to add a "ftape_..." prefix to all exported symbols
	that had no such prefix

	* sftape/sftape-write.c, sftape/sftape-write.h,
 	  sftape/sftape-eof.h, sftape/sftape-init.c, sftape/sftape-read.c,
 	  sftape/sftape-read.h, sftape/sftape-ctl.c, sftape/sftape-ctl.h,
 	  sftape/sftape-eof.c:
	converted all ftape suffixes to sftape suffixes

Tue Jul 23 23:43:34 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* sftape/sftape-write.c, sftape/sftape-write.h,
 	  sftape/sftape-eof.h, sftape/sftape-init.c, sftape/sftape-read.c,
 	  sftape/sftape-read.h, sftape/sftape-ctl.c, sftape/sftape-ctl.h,
 	  sftape/sftape-eof.c:
	Original ftape io-routines

	* ftape_syms.c, ftape_syms.h, kernel-interface.c, ftape-write.c,
 	  ftape-write.h, ftape-rw.c, ftape-vfs.c, ftape-vfs.h, ftape-io.c,
 	  ftape-read.c, ftape-read.h, ftape-bsm.h, ftape-ctl.c,
 	  ftape-ctl.h, ChangeLog, Makefile:
	Removed eof-handling etc. Added symtab to export a definite amount of
	symbols. Loads properly, needs more work.

Tue Jul 23 12:05:33 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-vfs/sftape-write.c, ftape-vfs/sftape-write.h,
 	  ftape-vfs/sftape-ctl.h, ftape-vfs/sftape-eof.c,
 	  ftape-vfs/sftape-eof.h, ftape-vfs/sftape-init.c,
 	  ftape-vfs/sftape-read.c, ftape-vfs/sftape-read.h,
 	  ftape-vfs/sftape-ctl.c, ftape-vfs.h, kernel-interface.c,
 	  Attic/ftape-eof.c, Attic/ftape-eof.h, ftape-ctl.c, ftape-vfs.c:
	Started splitting ftape into hardware support module and a higher
	level module that handles the vfs connection only. Added a simple
	routine "ftape_register(struct ftape_vfs_ops *)" that hooks the more
	sophisticated io-routines into ftape's simple vfs interface.

	Created new directory ftape-vfs that contains the higher level
	io-routines of the original ftape, changed appropriately to fit into
	the new scheme.

Sun Jul 21 10:47:54 1996  Claus-Justus Heine  <claus@anaxagoras.localnet>

	* ftape-vfs.h: Include file to ftape-vfs.c

	* ftape-vfs.c: Renamed from ftape-highio.c

	* Attic/ftape-highio.c: renamed to ftape-vfs.c

	* Attic/ftape-highio.c, ftape-io.h, ftape-read.h, ftape-rw.h,
 	  ftape-write.h, ftape.h, kernel-interface.h, swapout.c,
 	  tracing.h, vendors.h:
	Initial revision

	* Attic/ftape-highio.c, ftape-io.h, ftape-read.h, ftape-rw.h,
 	  ftape-write.h, ftape.h, kernel-interface.h, swapout.c,
 	  tracing.h, vendors.h:
	Start transforming ftape and zftape into a set of separate,
 	stacked modules that have the hardware support as the basic module
 	in common.

	* Attic/ftape-eof.c, Attic/ftape-eof.h, README.PCI, RELEASE-NOTES,
 	  calibr.c, calibr.h, ecc.c, ecc.h, fc-10.c, fc-10.h, fdc-io.h,
 	  fdc-isr.c, fdc-isr.h, ftape-bsm.c, ftape-bsm.h, ftape-ctl.c,
 	  ftape-ctl.h, ftape-io.c, ftape-read.c, ftape-rw.c,
 	  ftape-write.c, kernel-interface.c, qic117.h, tracing.c:
	Initial revision

	* Attic/ftape-eof.c, Attic/ftape-eof.h, README.PCI, RELEASE-NOTES,
 	  calibr.c, calibr.h, ecc.c, ecc.h, fc-10.c, fc-10.h, fdc-io.h,
 	  fdc-isr.c, fdc-isr.h, ftape-bsm.c, ftape-bsm.h, ftape-ctl.c,
 	  ftape-ctl.h, ftape-io.c, ftape-read.c, ftape-rw.c,
 	  ftape-write.c, kernel-interface.c, qic117.h, tracing.c:
	Start transforming ftape and zftape into a set of separate, stacked 
	modules that have the hardware support as the basic module in common.

	* COPYING, Install-guide, Makefile, fdc-io.c: Initial revision

	* COPYING, Install-guide, Makefile, fdc-io.c:
	Start transforming ftape and zftape into a set of separate,
	stacked modules that have the hardware support as the basic module
	in common.

	LocalWords:  Apr Justus claus anaxagoras localnet texi html url FTDATE
 	LocalWords:  www inline func mt distclean contrib sftape EOT afio EXT
 	LocalWords:  zftape ftape PERTEC MyTape KB parms QIC gnumt FTVERSION
 	LocalWords:  QuickInstall dvi subdir ctl ft init io Aiwa xfer bsm
 	LocalWords:  MCONFIG rw momo rwth aachen Linux FIXME doc dir EOD
 	LocalWords:  def MTOFFL INFOPATH Prev makeinfo sh BROKENMAKEINFO
 	LocalWords:  TeXinfo prev MTIOCVOLINFO vtbl vtbl zft eof sigmask
 	LocalWords:  zftc buf sft eofm spt tpc DMODVERSIONS kdtime kdtime
 	LocalWords:  KDHDR kerneld swapout qic qic volinfo fmt kb perpend
 	LocalWords:  enum eration ids struct proc strlen ecc calibr calibr
 	LocalWords:  inf Amd eom ushort dmaalloc fdc isr Wshadow fc uninstall
 	LocalWords:  ushorts MAKEDEV SIGKILL SIGSTOP CONFIG FS MODVERSIONS
 	LocalWords:  mtio sgml realclean symlink hseg FDC's stats linux SBINDIR
 	LocalWords:  MTIOCGETSET MTIOCRDFTSEG MTIOCSETSEG EIO eom lzrw
 	LocalWords:  lzrw resid MTIOCWRFTSEG mtsegment mtftseg MTCOMPRESSION
 	LocalWords:  MTIOCFTFORMAT cmpr BOT or'ing beof multitable expr
 	LocalWords:  dev dev rft QuickInstallation linuxdoc EINVAL vfs sty
 	LocalWords:  qwertz tex isolatin Singletary modutils fsfbsfm ops
 	LocalWords:  lEOT eot pidfile var pid modprobe conf ftformat MTBSF
 	LocalWords:  printf EINTR SIGINT sysklogd toc gif occurences
 	LocalWords:  TRACEi TRACElx favour dma mtgetsize WR syms nr procfs
 	LocalWords:  dif Guido Muesch FTFMT EAGAIN udelay mttapesize fti
 	LocalWords:  MTRESET mtftformat ftfmt trk ftfmt seg ftfmt int
 	LocalWords:  jagvi xmalloc irq DEFTAPE glibc gmtime libc ifdef's
 	LocalWords:  fsl defs argmatch cpio WRONLY TR SEL VFS GCC
 	LocalWords:  SectorCount MTERASE MTWEOF getopt getopt accmode
 	LocalWords:  ASYNC RDONLY ASYNC config DMODVERSION mtvolinfo div
 	LocalWords:  blksz libgcc ULONG arg printk Teac ifdef com http usr
 	LocalWords:  src insmod frontend bot MTIOC GETBLKSZ dep ok Dalecki
 	LocalWords:  Marcin Dalecki asm inb outb whraven njackn ComByte
 	LocalWords:  DoublePlay ComByte's zqft async intr Exabyte EXB
 	LocalWords:  Exabyte Exabyte Iomega CFLAGS dc dalecki uni
 	LocalWords:  goettingen uaccess MTFSF BSF len Burrell nrft nftape
 	LocalWords:  Docu mtsetblk ptr TRACEx Laarhoven Kai Harrekilde
 	LocalWords:  Pederson BSF's sync calc xconfig menuconfig
 	LocalWords:  MTIOCBLKSZ cmap MTIOCGET reg getseg stdout FD
 	LocalWords:  modversions IOCTLs getblksz getblk offline kdev
 	LocalWords:  ioctl's rtapelib rmt MTIOCSIZE pos MTIOCTOP MTFORMAT
 	LocalWords:  Diff tecc CompressionMapEntry CmapEntry MTIOCFMT
 	LocalWords:  SectorMap vmalloc foo foo axp define's DMULTIPLE
 	LocalWords:  DWAKE colorado mem symtab SRCS ksyms Jul ChangeLog
 	LocalWords:  highio README PCI LocalWords
	
